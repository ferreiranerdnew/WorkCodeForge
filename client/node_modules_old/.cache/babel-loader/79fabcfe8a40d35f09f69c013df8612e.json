{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\helpers\\\\getPreselectedProjectTeams.js\";\nimport User from \"../components/users/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPreselectedProjectTeams = (state, projectId) => {\n  const team = state.projectTeams.filter(team => {\n    return team.projectId === projectId;\n  });\n  const projectUsersList = [];\n\n  for (const member of team) {\n    for (const user of state.users) {\n      if (user.id === member.userId) {\n        projectUsersList.push(user);\n      }\n    }\n  }\n\n  const usersListArray = state.users.map(user => {\n    const {\n      id,\n      name,\n      avatar\n    } = user;\n    const selectedUser = projectUsersList.filter(projectUser => projectUser.id === id);\n    const selected = selectedUser.length > 0;\n    return /*#__PURE__*/_jsxDEV(User, {\n      id: id,\n      avatar: avatar,\n      name: name,\n      selected: selected\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  });\n  return usersListArray;\n};\n\nexport default getPreselectedProjectTeams;","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/helpers/getPreselectedProjectTeams.js"],"names":["User","getPreselectedProjectTeams","state","projectId","team","projectTeams","filter","projectUsersList","member","user","users","id","userId","push","usersListArray","map","name","avatar","selectedUser","projectUser","selected","length"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,0BAAjB;;;AAEA,MAAMC,0BAA0B,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AACvD,QAAMC,IAAI,GAAGF,KAAK,CAACG,YAAN,CAAmBC,MAAnB,CAA2BF,IAAD,IAAU;AAC/C,WAAOA,IAAI,CAACD,SAAL,KAAmBA,SAA1B;AACD,GAFY,CAAb;AAIA,QAAMI,gBAAgB,GAAG,EAAzB;;AAEA,OAAK,MAAMC,MAAX,IAAqBJ,IAArB,EAA2B;AACzB,SAAK,MAAMK,IAAX,IAAmBP,KAAK,CAACQ,KAAzB,EAAgC;AAC9B,UAAID,IAAI,CAACE,EAAL,KAAYH,MAAM,CAACI,MAAvB,EAA+B;AAC7BL,QAAAA,gBAAgB,CAACM,IAAjB,CAAsBJ,IAAtB;AACD;AACF;AACF;;AAED,QAAMK,cAAc,GAAGZ,KAAK,CAACQ,KAAN,CAAYK,GAAZ,CAAiBN,IAAD,IAAU;AAC/C,UAAM;AAAEE,MAAAA,EAAF;AAAMK,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAuBR,IAA7B;AACA,UAAMS,YAAY,GAAGX,gBAAgB,CAACD,MAAjB,CAClBa,WAAD,IAAiBA,WAAW,CAACR,EAAZ,KAAmBA,EADjB,CAArB;AAGA,UAAMS,QAAQ,GAAGF,YAAY,CAACG,MAAb,GAAsB,CAAvC;AAEA,wBACE,QAAC,IAAD;AAAe,MAAA,EAAE,EAAEV,EAAnB;AAAuB,MAAA,MAAM,EAAEM,MAA/B;AAAuC,MAAA,IAAI,EAAED,IAA7C;AAAmD,MAAA,QAAQ,EAAEI;AAA7D,OAAWT,EAAX;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAVsB,CAAvB;AAYA,SAAOG,cAAP;AACD,CA5BD;;AA8BA,eAAeb,0BAAf","sourcesContent":["import User from \"../components/users/User\";\r\n\r\nconst getPreselectedProjectTeams = (state, projectId) => {\r\n  const team = state.projectTeams.filter((team) => {\r\n    return team.projectId === projectId;\r\n  });\r\n\r\n  const projectUsersList = [];\r\n\r\n  for (const member of team) {\r\n    for (const user of state.users) {\r\n      if (user.id === member.userId) {\r\n        projectUsersList.push(user);\r\n      }\r\n    }\r\n  }\r\n\r\n  const usersListArray = state.users.map((user) => {\r\n    const { id, name, avatar } = user;\r\n    const selectedUser = projectUsersList.filter(\r\n      (projectUser) => projectUser.id === id\r\n    );\r\n    const selected = selectedUser.length > 0;\r\n\r\n    return (\r\n      <User key={id} id={id} avatar={avatar} name={name} selected={selected} />\r\n    );\r\n  });\r\n\r\n  return usersListArray;\r\n};\r\n\r\nexport default getPreselectedProjectTeams;\r\n"]},"metadata":{},"sourceType":"module"}