{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\components\\\\actor\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport Sprite from '../sprites';\nimport { spriteDimensions, spriteSizeFactorF, spriteSizeFactorC } from '../../utils/constants';\nimport './actor.css';\nimport { useSelector } from 'react-redux';\nimport useMapGuide from './../../hooks/useMapGuide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Actor({\n  sprite,\n  position = {\n    x: 0,\n    y: 0\n  },\n  step,\n  dir,\n  displayName\n}) {\n  _s();\n\n  const {\n    playerNearGuide\n  } = useMapGuide();\n  const {\n    h,\n    w\n  } = spriteDimensions;\n  const opacityStyle = {\n    opacity: '0.5'\n  };\n  let styleForDisplayName = {\n    position: 'absolute',\n    top: position.y - h * 0.8,\n    //adjust position for display name above character\n    left: position.x - displayName.length - 8 //8 is an adjustment factor to display name on top of character\n\n  };\n  let styleForDisplayNameAtGuide = '';\n\n  if (playerNearGuide) {\n    styleForDisplayNameAtGuide = { ...styleForDisplayName,\n      ...opacityStyle\n    };\n  }\n\n  let nameToDisplay = displayName.match(/[^\\s]+/);\n  nameToDisplay = nameToDisplay.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dimension\",\n    children: [styleForDisplayNameAtGuide !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styleForDisplayNameAtGuide,\n      children: nameToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styleForDisplayName,\n      children: nameToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Sprite, {\n      zoom: //check file name to apply different zoom level for character rendering\n      sprite.slice(-6, -5) === 'f' ? spriteSizeFactorF : spriteSizeFactorC,\n      image: sprite,\n      data: {\n        x: step * w,\n        y: dir * h,\n        w,\n        h\n      },\n      position: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Actor, \"wOnra5t+JI1txMWK7y9AzAX+Kek=\", false, function () {\n  return [useMapGuide];\n});\n\n_c = Actor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actor\");","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/components/actor/index.js"],"names":["Sprite","spriteDimensions","spriteSizeFactorF","spriteSizeFactorC","useSelector","useMapGuide","Actor","sprite","position","x","y","step","dir","displayName","playerNearGuide","h","w","opacityStyle","opacity","styleForDisplayName","top","left","length","styleForDisplayNameAtGuide","nameToDisplay","match","slice"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,YAAnB;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,uBAJP;AAKA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAC5BC,EAAAA,MAD4B;AAE5BC,EAAAA,QAAQ,GAAG;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAFiB;AAG5BC,EAAAA,IAH4B;AAI5BC,EAAAA,GAJ4B;AAK5BC,EAAAA;AAL4B,CAAf,EAMZ;AAAA;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAsBT,WAAW,EAAvC;AACA,QAAM;AAAEU,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAWf,gBAAjB;AACA,QAAMgB,YAAY,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB;AACA,MAAIC,mBAAmB,GAAG;AACxBX,IAAAA,QAAQ,EAAE,UADc;AAExBY,IAAAA,GAAG,EAAEZ,QAAQ,CAACE,CAAT,GAAaK,CAAC,GAAG,GAFE;AAEG;AAC3BM,IAAAA,IAAI,EAAEb,QAAQ,CAACC,CAAT,GAAaI,WAAW,CAACS,MAAzB,GAAkC,CAHhB,CAGmB;;AAHnB,GAA1B;AAKA,MAAIC,0BAA0B,GAAG,EAAjC;;AACA,MAAIT,eAAJ,EAAqB;AACnBS,IAAAA,0BAA0B,GAAG,EAAE,GAAGJ,mBAAL;AAA0B,SAAGF;AAA7B,KAA7B;AACD;;AAED,MAAIO,aAAa,GAAGX,WAAW,CAACY,KAAZ,CAAkB,QAAlB,CAApB;AACAD,EAAAA,aAAa,GAAGA,aAAa,CAACE,KAAd,CAAoB,CAApB,EAAuB,EAAvB,CAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACGH,0BAA0B,KAAK,EAA/B,gBACC;AAAK,MAAA,KAAK,EAAEA,0BAAZ;AAAA,gBAAyCC;AAAzC;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAK,MAAA,KAAK,EAAEL,mBAAZ;AAAA,gBAAkCK;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOE,QAAC,MAAD;AACE,MAAA,IAAI,EACF;AACAjB,MAAAA,MAAM,CAACmB,KAAP,CAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,MAAyB,GAAzB,GAA+BxB,iBAA/B,GAAmDC,iBAHvD;AAKE,MAAA,KAAK,EAAEI,MALT;AAME,MAAA,IAAI,EAAE;AACJE,QAAAA,CAAC,EAAEE,IAAI,GAAGK,CADN;AAEJN,QAAAA,CAAC,EAAEE,GAAG,GAAGG,CAFL;AAGJC,QAAAA,CAHI;AAIJD,QAAAA;AAJI,OANR;AAYE,MAAA,QAAQ,EAAEP;AAZZ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA/CuBF,K;UAOMD,W;;;KAPNC,K","sourcesContent":["import Sprite from '../sprites';\r\nimport {\r\n  spriteDimensions,\r\n  spriteSizeFactorF,\r\n  spriteSizeFactorC,\r\n} from '../../utils/constants';\r\nimport './actor.css';\r\nimport { useSelector } from 'react-redux';\r\nimport useMapGuide from './../../hooks/useMapGuide';\r\n\r\nexport default function Actor({\r\n  sprite,\r\n  position = { x: 0, y: 0 },\r\n  step,\r\n  dir,\r\n  displayName,\r\n}) {\r\n  const { playerNearGuide } = useMapGuide();\r\n  const { h, w } = spriteDimensions;\r\n  const opacityStyle = { opacity: '0.5' };\r\n  let styleForDisplayName = {\r\n    position: 'absolute',\r\n    top: position.y - h * 0.8, //adjust position for display name above character\r\n    left: position.x - displayName.length - 8, //8 is an adjustment factor to display name on top of character\r\n  };\r\n  let styleForDisplayNameAtGuide = '';\r\n  if (playerNearGuide) {\r\n    styleForDisplayNameAtGuide = { ...styleForDisplayName, ...opacityStyle };\r\n  }\r\n\r\n  let nameToDisplay = displayName.match(/[^\\s]+/);\r\n  nameToDisplay = nameToDisplay.slice(0, 10);\r\n\r\n  return (\r\n    <div className=\"dimension\">\r\n      {styleForDisplayNameAtGuide !== '' ? (\r\n        <div style={styleForDisplayNameAtGuide}>{nameToDisplay}</div>\r\n      ) : (\r\n        <div style={styleForDisplayName}>{nameToDisplay}</div>\r\n      )}\r\n\r\n      <Sprite\r\n        zoom={\r\n          //check file name to apply different zoom level for character rendering\r\n          sprite.slice(-6, -5) === 'f' ? spriteSizeFactorF : spriteSizeFactorC\r\n        }\r\n        image={sprite}\r\n        data={{\r\n          x: step * w,\r\n          y: dir * h,\r\n          w,\r\n          h,\r\n        }}\r\n        position={position}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}