{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\components\\\\gantt-chart\\\\GanttChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { stateContext } from \"../providers/StateProvider\";\nimport { Chart } from \"react-google-charts\";\nimport \"./GanttChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GanttChart() {\n  _s();\n\n  const {\n    state\n  } = useContext(stateContext);\n  const tasks = state.tasks.map(task => {\n    const status = task.status === 2 ? 100 : 0;\n    return [task.name, task.name, \"Task\", new Date(task.startDate), new Date(task.endDate), null, status, null];\n  });\n  console.log(\"tasks\", ...tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rpgui-content nes-container is-rounded is-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gantt Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      className: \"gantt-container\",\n      chartType: \"Gantt\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this),\n      data: [[{\n        type: \"string\",\n        label: \"Task ID\"\n      }, {\n        type: \"string\",\n        label: \"Task Name\"\n      }, {\n        type: \"string\",\n        label: \"Type\"\n      }, {\n        type: \"date\",\n        label: \"Start Date\"\n      }, {\n        type: \"date\",\n        label: \"End Date\"\n      }, {\n        type: \"number\",\n        label: \"Duration\"\n      }, {\n        type: \"number\",\n        label: \"status\"\n      }, {\n        type: \"string\",\n        label: \"Dependencies\"\n      }], ...tasks],\n      options: {\n        height: 600,\n        gantt: {\n          trackHeight: 46\n        }\n      },\n      rootProps: {\n        \"data-testid\": \"2\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GanttChart, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\n_c = GanttChart;\nexport default GanttChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GanttChart\");","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/components/gantt-chart/GanttChart.js"],"names":["React","useContext","stateContext","Chart","GanttChart","state","tasks","map","task","status","name","Date","startDate","endDate","console","log","type","label","height","gantt","trackHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAO,kBAAP;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,UAAU,CAACC,YAAD,CAA5B;AAEA,QAAMI,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACtC,UAAMC,MAAM,GAAGD,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,GAApB,GAA0B,CAAzC;AAEA,WAAO,CACLD,IAAI,CAACE,IADA,EAELF,IAAI,CAACE,IAFA,EAGL,MAHK,EAIL,IAAIC,IAAJ,CAASH,IAAI,CAACI,SAAd,CAJK,EAKL,IAAID,IAAJ,CAASH,IAAI,CAACK,OAAd,CALK,EAML,IANK,EAOLJ,MAPK,EAQL,IARK,CAAP;AAUD,GAba,CAAd;AAcAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,GAAGT,KAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHV;AAIE,MAAA,IAAI,EAAE,CACJ,CACE;AAAEU,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OADF,EAEE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFF,EAGE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAHF,EAIE;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAJF,EAKE;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OALF,EAME;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OANF,EAOE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAPF,EAQE;AAAED,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OARF,CADI,EAWJ,GAAGX,KAXC,CAJR;AAiBE,MAAA,OAAO,EAAE;AACPY,QAAAA,MAAM,EAAE,GADD;AAEPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AAFA,OAjBX;AAuBE,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB;AAvBb;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAnDQhB,U;;KAAAA,U;AAqDT,eAAeA,UAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport \"./GanttChart.css\";\r\n\r\nfunction GanttChart() {\r\n  const { state } = useContext(stateContext);\r\n\r\n  const tasks = state.tasks.map((task) => {\r\n    const status = task.status === 2 ? 100 : 0;\r\n\r\n    return [\r\n      task.name,\r\n      task.name,\r\n      \"Task\",\r\n      new Date(task.startDate),\r\n      new Date(task.endDate),\r\n      null,\r\n      status,\r\n      null,\r\n    ];\r\n  });\r\n  console.log(\"tasks\", ...tasks);\r\n\r\n  return (\r\n    <div className=\"rpgui-content nes-container is-rounded is-dark\">\r\n      <div className=\"welcome\">\r\n        <h1>Gantt Chart</h1>\r\n      </div>\r\n      <Chart\r\n        className=\"gantt-container\"\r\n        chartType=\"Gantt\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={[\r\n          [\r\n            { type: \"string\", label: \"Task ID\" },\r\n            { type: \"string\", label: \"Task Name\" },\r\n            { type: \"string\", label: \"Type\" },\r\n            { type: \"date\", label: \"Start Date\" },\r\n            { type: \"date\", label: \"End Date\" },\r\n            { type: \"number\", label: \"Duration\" },\r\n            { type: \"number\", label: \"status\" },\r\n            { type: \"string\", label: \"Dependencies\" },\r\n          ],\r\n          ...tasks,\r\n        ]}\r\n        options={{\r\n          height: 600,\r\n          gantt: {\r\n            trackHeight: 46,\r\n          },\r\n        }}\r\n        rootProps={{ \"data-testid\": \"2\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GanttChart;\r\n"]},"metadata":{},"sourceType":"module"}