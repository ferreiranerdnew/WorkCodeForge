{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\components\\\\projects\\\\projectCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { stateContext } from \"../providers/StateProvider\";\nimport { useSelector } from \"react-redux\";\nimport getProjectTeamsForCard from \"../../helpers/getProjectTeamsForCard\";\nimport EditProjectForm from \"./EditProjectForm\";\nimport DeleteProjectForm from \"./DeleteProjectForm\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectCard(props) {\n  _s();\n\n  const userState = useSelector(state => {\n    // console.log(\"state:\", state);\n    return state.user;\n  });\n  const [tasks, setTasks] = useState([]);\n  const {\n    state,\n    editProject,\n    deleteProject\n  } = useContext(stateContext);\n  const {\n    id,\n    name,\n    description,\n    startDate,\n    endDate,\n    selected,\n    setCurrentProject\n  } = props;\n  const projectClass = classNames(\"project-card\", \"nes-container\", \"is-rounded\", {\n    \"project-card--selected\": selected\n  });\n  useEffect(async () => {\n    const {\n      data\n    } = await axios.get(`/tasks/project/${id}`);\n    setTasks(data);\n  }, []);\n  const completedTasks = tasks.filter(task => task.currentStatus === 2);\n  const percentComplete = Math.round(completedTasks.length / tasks.length * 100);\n\n  const zeroPercentErrorHandler = percent => percent ? percent : 0;\n\n  const usersListArray = getProjectTeamsForCard(state, id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: projectClass,\n    onClick: () => setCurrentProject(id),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"title\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), userState.id === props.creatorID && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(EditProjectForm, {\n          id: id,\n          name: name,\n          description: description,\n          startDate: startDate,\n          endDate: endDate,\n          state: state,\n          onSave: editProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteProjectForm, {\n          id: id,\n          onConfirm: deleteProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"project-card-description\",\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"project-card-description\",\n      children: [\"Completion: \", zeroPercentErrorHandler(percentComplete), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      className: \"nes-progress is-success\",\n      value: zeroPercentErrorHandler(percentComplete),\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"project-card-description\",\n      children: \"The team:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), usersListArray]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectCard, \"cKGs1fSgMbdi80uX0yEAE3e1Ojs=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProjectCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/components/projects/projectCard.js"],"names":["React","useContext","useState","useEffect","stateContext","useSelector","getProjectTeamsForCard","EditProjectForm","DeleteProjectForm","axios","classNames","ProjectCard","props","userState","state","user","tasks","setTasks","editProject","deleteProject","id","name","description","startDate","endDate","selected","setCurrentProject","projectClass","data","get","completedTasks","filter","task","currentStatus","percentComplete","Math","round","length","zeroPercentErrorHandler","percent","usersListArray","creatorID"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport { useSelector } from \"react-redux\";\r\nimport getProjectTeamsForCard from \"../../helpers/getProjectTeamsForCard\";\r\nimport EditProjectForm from \"./EditProjectForm\";\r\nimport DeleteProjectForm from \"./DeleteProjectForm\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function ProjectCard(props) {\r\n  const userState = useSelector((state) => {\r\n    // console.log(\"state:\", state);\r\n    return state.user;\r\n  });\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const { state, editProject, deleteProject } = useContext(stateContext);\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    startDate,\r\n    endDate,\r\n    selected,\r\n    setCurrentProject,\r\n  } = props;\r\n\r\n  const projectClass = classNames(\"project-card\", \"nes-container\", \"is-rounded\", {\r\n    \"project-card--selected\": selected,\r\n  });\r\n\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`/tasks/project/${id}`);\r\n    setTasks(data);\r\n  }, []);\r\n\r\n  const completedTasks = tasks.filter((task) => task.currentStatus === 2);\r\n  const percentComplete = Math.round(\r\n    (completedTasks.length / tasks.length) * 100\r\n  );\r\n\r\n  const zeroPercentErrorHandler = (percent) => (percent ? percent : 0);\r\n\r\n  const usersListArray = getProjectTeamsForCard(state, id);\r\n\r\n  return (\r\n    <div className={projectClass} onClick={() => setCurrentProject(id)}>\r\n      <div className=\"card-header\">\r\n        <header className=\"title\">{props.name}</header>\r\n        {userState.id === props.creatorID && (\r\n          <div className=\"buttons\">\r\n            <EditProjectForm\r\n              id={id}\r\n              name={name}\r\n              description={description}\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              state={state}\r\n              onSave={editProject}\r\n            />\r\n            <DeleteProjectForm id={id} onConfirm={deleteProject} />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className='project-card-description'>{props.description}</p>\r\n      <h1 className='project-card-description'>Completion: {zeroPercentErrorHandler(percentComplete)}%</h1>\r\n      <progress\r\n        className=\"nes-progress is-success\"\r\n        value={zeroPercentErrorHandler(percentComplete)}\r\n        max=\"100\"\r\n      ></progress>\r\n      <h1 className='project-card-description'>The team:</h1>\r\n      {usersListArray}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}