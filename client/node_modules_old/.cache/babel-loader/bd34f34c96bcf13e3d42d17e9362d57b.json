{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\components\\\\userDashboard\\\\UserInfoCard.js\";\nimport React from 'react';\nimport UserInfoCardData from './UserInfoCardData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserInfoCard(props) {\n  const {\n    heading,\n    projects,\n    meetings\n  } = props;\n\n  const getTodaysDate = () => {\n    let date = new Date();\n    const offset = date.getTimezoneOffset();\n    date = new Date(date.getTime() - offset * 60 * 1000);\n    return date.toISOString().split('T')[0];\n  };\n\n  const getMeetingsDate = meeting => {\n    const date = meeting.date.split('T');\n    return date[0];\n  }; // const projectsList = projects.map(project => {\n  //   return (\n  //     <UserInfoCardList\n  //       key={project.id}\n  //       name={project.name}\n  //     />\n  //   )\n  // });\n  // const meetingsList = meetings.map(meeting => {\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card rpgui-container framed float\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [projects && projects.map(project => {\n        return /*#__PURE__*/_jsxDEV(UserInfoCardData, {\n          name: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this);\n      }), meetings && meetings.map(meeting => {\n        if (getMeetingsDate(meeting) === getTodaysDate()) return /*#__PURE__*/_jsxDEV(UserInfoCardData, {\n          name: meeting.name,\n          startTime: meeting.startTime\n        }, meeting.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = UserInfoCard;\nexport default UserInfoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoCard\");","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/components/userDashboard/UserInfoCard.js"],"names":["React","UserInfoCardData","UserInfoCard","props","heading","projects","meetings","getTodaysDate","date","Date","offset","getTimezoneOffset","getTime","toISOString","split","getMeetingsDate","meeting","map","project","name","id","startTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAkCH,KAAxC;;AACA,QAAMI,aAAa,GAAG,MAAM;AAC1B,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,UAAMC,MAAM,GAAGF,IAAI,CAACG,iBAAL,EAAf;AACAH,IAAAA,IAAI,GAAG,IAAIC,IAAJ,CAASD,IAAI,CAACI,OAAL,KAAiBF,MAAM,GAAG,EAAT,GAAc,IAAxC,CAAP;AACA,WAAOF,IAAI,CAACK,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAP;AACD,GALD;;AAOA,QAAMC,eAAe,GAAIC,OAAD,IAAa;AACnC,UAAMR,IAAI,GAAGQ,OAAO,CAACR,IAAR,CAAaM,KAAb,CAAmB,GAAnB,CAAb;AACA,WAAON,IAAI,CAAC,CAAD,CAAX;AACD,GAHD,CAT2B,CAc3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA,4BACE;AAAA,gBAASJ;AAAT;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGC,QAAQ,IACPA,QAAQ,CAACY,GAAT,CAAcC,OAAD,IAAa;AACxB,4BAAO,QAAC,gBAAD;AAAmC,UAAA,IAAI,EAAEA,OAAO,CAACC;AAAjD,WAAuBD,OAAO,CAACE,EAA/B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CAFJ,EAKGd,QAAQ,IACPA,QAAQ,CAACW,GAAT,CAAcD,OAAD,IAAa;AACxB,YAAID,eAAe,CAACC,OAAD,CAAf,KAA6BT,aAAa,EAA9C,EACE,oBACE,QAAC,gBAAD;AAEE,UAAA,IAAI,EAAES,OAAO,CAACG,IAFhB;AAGE,UAAA,SAAS,EAAEH,OAAO,CAACK;AAHrB,WACOL,OAAO,CAACI,EADf;AAAA;AAAA;AAAA;AAAA,gBADF;AAOH,OATD,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;KAjDQlB,Y;AAmDT,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport UserInfoCardData from './UserInfoCardData';\r\n\r\nfunction UserInfoCard(props) {\r\n  const { heading, projects, meetings } = props;\r\n  const getTodaysDate = () => {\r\n    let date = new Date();\r\n    const offset = date.getTimezoneOffset();\r\n    date = new Date(date.getTime() - offset * 60 * 1000);\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\n  const getMeetingsDate = (meeting) => {\r\n    const date = meeting.date.split('T');\r\n    return date[0];\r\n  };\r\n\r\n  // const projectsList = projects.map(project => {\r\n  //   return (\r\n  //     <UserInfoCardList\r\n  //       key={project.id}\r\n  //       name={project.name}\r\n  //     />\r\n  //   )\r\n  // });\r\n\r\n  // const meetingsList = meetings.map(meeting => {\r\n\r\n  // })\r\n\r\n  return (\r\n    <div className='card rpgui-container framed float'>\r\n      <header>{heading}</header>\r\n      <ul>\r\n        {projects &&\r\n          projects.map((project) => {\r\n            return <UserInfoCardData key={project.id} name={project.name} />;\r\n          })}\r\n        {meetings &&\r\n          meetings.map((meeting) => {\r\n            if (getMeetingsDate(meeting) === getTodaysDate())\r\n              return (\r\n                <UserInfoCardData\r\n                  key={meeting.id}\r\n                  name={meeting.name}\r\n                  startTime={meeting.startTime}\r\n                />\r\n              );\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserInfoCard;\r\n"]},"metadata":{},"sourceType":"module"}