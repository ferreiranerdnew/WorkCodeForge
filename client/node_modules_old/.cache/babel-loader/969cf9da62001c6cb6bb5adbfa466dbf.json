{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\components\\\\players\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport Actor from '../actor';\nimport { useState } from 'react';\nimport useKeyPress from '../../hooks/useKeyPress';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HIDE_MAP_GUIDE, WALK, WALK_IN_PLACE, SET_MAP_GUIDE, TOGGLE_MODAL_CAN_OPEN } from '../../reducers/mapReducer';\nimport { directions } from '../../utils/constants';\nimport checkNextTile from '../../utils/checkNextTile';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Players({\n  socket\n}) {\n  _s();\n\n  const {\n    leftMargin,\n    topMargin\n  } = useWindowDimensions();\n  const gifSearchOpen = useSelector(state => state.gifSearchOpen);\n  const localUserState = useSelector(state => {\n    return state.players[state.localID];\n  });\n  const playerListState = useSelector(state => {\n    return state.players;\n  });\n  const localIdState = useSelector(state => {\n    return state.localID;\n  });\n  const dispatch = useDispatch();\n\n  function walk(dir) {\n    if (checkNextTile(dir, localUserState.x, localUserState.y)['action']) {\n      const actionAsset = checkNextTile(dir, localUserState.x, localUserState.y)['asset'];\n      dispatch(SET_MAP_GUIDE({\n        actionAsset\n      }));\n    } else {\n      dispatch(HIDE_MAP_GUIDE());\n    }\n\n    if (checkNextTile(dir, localUserState.x, localUserState.y)['walk']) {\n      dispatch(WALK({\n        dir,\n        id: localIdState\n      }));\n      return {\n        type: 'WALK',\n        payload: JSON.stringify(localUserState)\n      };\n    }\n\n    dispatch(WALK_IN_PLACE({\n      dir,\n      id: localIdState\n    })); //this action is NOT broadcasted\n  }\n\n  useKeyPress(e => {\n    // e.preventDefault();\n    if (e.key === 'ArrowDown' || e.key === 'ArrowUp' || e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n      walk(e.key);\n      return;\n    }\n\n    if (e.code === 'Space' && !gifSearchOpen) {\n      dispatch(TOGGLE_MODAL_CAN_OPEN());\n    }\n  });\n  const playerListArr = Object.keys(playerListState).map(key => /*#__PURE__*/_jsxDEV(Actor, {\n    sprite: `/sprites/skins/${playerListState[key]['skin']}.png`,\n    dir: directions[playerListState[key]['dir']],\n    step: playerListState[key]['step'],\n    position: {\n      x: playerListState[key]['x'] + leftMargin,\n      y: playerListState[key]['y'] + topMargin\n    },\n    displayName: playerListState[key]['name']\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: playerListArr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Players, \"9Kzjwf4eH2Y7b0RV/xyD9OwQBlE=\", false, function () {\n  return [useWindowDimensions, useSelector, useSelector, useSelector, useSelector, useDispatch, useKeyPress];\n});\n\n_c = Players;\n\nvar _c;\n\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/components/players/index.js"],"names":["Actor","useState","useKeyPress","useSelector","useDispatch","HIDE_MAP_GUIDE","WALK","WALK_IN_PLACE","SET_MAP_GUIDE","TOGGLE_MODAL_CAN_OPEN","directions","checkNextTile","useWindowDimensions","Players","socket","leftMargin","topMargin","gifSearchOpen","state","localUserState","players","localID","playerListState","localIdState","dispatch","walk","dir","x","y","actionAsset","id","type","payload","JSON","stringify","e","key","code","playerListArr","Object","keys","map"],"mappings":"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","sourcesContent":["import Actor from '../actor';\r\nimport { useState } from 'react';\r\nimport useKeyPress from '../../hooks/useKeyPress';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  HIDE_MAP_GUIDE,\r\n  WALK,\r\n  WALK_IN_PLACE,\r\n  SET_MAP_GUIDE,\r\n  TOGGLE_MODAL_CAN_OPEN,\r\n} from '../../reducers/mapReducer';\r\nimport { directions } from '../../utils/constants';\r\nimport checkNextTile from '../../utils/checkNextTile';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\n\r\nexport default function Players({ socket }) {\r\n  const { leftMargin, topMargin } = useWindowDimensions();\r\n  const gifSearchOpen = useSelector((state) => state.gifSearchOpen);\r\n  const localUserState = useSelector((state) => {\r\n    return state.players[state.localID];\r\n  });\r\n\r\n  const playerListState = useSelector((state) => {\r\n    return state.players;\r\n  });\r\n  const localIdState = useSelector((state) => {\r\n    return state.localID;\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  function walk(dir) {\r\n    if (checkNextTile(dir, localUserState.x, localUserState.y)['action']) {\r\n      const actionAsset = checkNextTile(\r\n        dir,\r\n        localUserState.x,\r\n        localUserState.y\r\n      )['asset'];\r\n      dispatch(SET_MAP_GUIDE({ actionAsset }));\r\n    } else {\r\n      dispatch(HIDE_MAP_GUIDE());\r\n    }\r\n    if (checkNextTile(dir, localUserState.x, localUserState.y)['walk']) {\r\n      dispatch(WALK({ dir, id: localIdState }));\r\n      return {\r\n        type: 'WALK',\r\n        payload: JSON.stringify(localUserState),\r\n      };\r\n    }\r\n    dispatch(WALK_IN_PLACE({ dir, id: localIdState })); //this action is NOT broadcasted\r\n  }\r\n\r\n  useKeyPress((e) => {\r\n    // e.preventDefault();\r\n    if (\r\n      e.key === 'ArrowDown' ||\r\n      e.key === 'ArrowUp' ||\r\n      e.key === 'ArrowLeft' ||\r\n      e.key === 'ArrowRight'\r\n    ) {\r\n      walk(e.key);\r\n      return;\r\n    }\r\n    if (e.code === 'Space' && !gifSearchOpen) {\r\n      dispatch(TOGGLE_MODAL_CAN_OPEN());\r\n    }\r\n  });\r\n\r\n  const playerListArr = Object.keys(playerListState).map((key) => (\r\n    <Actor\r\n      key={key}\r\n      sprite={`/sprites/skins/${playerListState[key]['skin']}.png`}\r\n      dir={directions[playerListState[key]['dir']]}\r\n      step={playerListState[key]['step']}\r\n      position={{\r\n        x: playerListState[key]['x'] + leftMargin,\r\n        y: playerListState[key]['y'] + topMargin,\r\n      }}\r\n      displayName={playerListState[key]['name']}\r\n    />\r\n  ));\r\n  return <div>{playerListArr}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}