[{"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\index.js":"1","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\App.js":"2","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\reducers\\mapReducer.js":"3","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\middleware\\socketRTK.js":"4","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\providers\\StateProvider.js":"5","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\SideNav.js":"6","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\pages\\Login.js":"7","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\utils\\constants.js":"8","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\reducers\\applicationDataReducer.js":"9","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\pages\\Dashboard.js":"10","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\projectCardList.js":"11","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\userDashboard\\UserDashboard.js":"12","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskTable.js":"13","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\gantt-chart\\GanttChart.js":"14","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\Kanban.js":"15","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\pages\\Messages.jsx":"16","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\MainNav.js":"17","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\ProjectForm.js":"18","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\projectCard.js":"19","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\modal\\ModalInput.js":"20","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\map\\Map.js":"21","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\modal\\MainModal.js":"22","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\hooks\\useMapGuide.js":"23","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\chat\\chat.js":"24","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\userDashboard\\UserInfoCard.js":"25","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\hooks\\useWindowDimensions.js":"26","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskRow.js":"27","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskForm.js":"28","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\KanbanCard.js":"29","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\button\\Button.js":"30","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\players\\index.js":"31","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\userDashboard\\UserInfoCardData.js":"32","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskItemInfo.js":"33","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\KanbanTaskItem.js":"34","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\DeleteTaskForm.js":"35","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\EditTaskForm.js":"36","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\users\\User.js":"37","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getTaskTeams.js":"38","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\map\\MapTile.js":"39","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\DeleteProjectForm.js":"40","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getProjectTeamsForCard.js":"41","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\EditProjectForm.js":"42","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\utils\\checkNextTile.js":"43","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\hooks\\useKeyPress.js":"44","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\win98\\index.js":"45","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\globe\\index.js":"46","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\piano\\index.js":"47","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\guitar\\index.js":"48","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\sprites\\index.js":"49","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\game\\index.js":"50","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\users\\TaskUser.js":"51","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getProjectTeams.js":"52","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\KanbanTaskInfo.js":"53","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getPreselectedProjectTeams.js":"54","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\users\\ProjectUser.js":"55","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\actor\\index.js":"56","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\piano\\SoundfontProvider.js":"57","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\utils\\peerManager.js":"58","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\video\\video.js":"59"},{"size":721,"mtime":1752070659793,"results":"60","hashOfConfig":"61"},{"size":836,"mtime":1752070659747,"results":"62","hashOfConfig":"61"},{"size":8309,"mtime":1752089245868,"results":"63","hashOfConfig":"61"},{"size":12617,"mtime":1752088709438,"results":"64","hashOfConfig":"61"},{"size":4289,"mtime":1752070659786,"results":"65","hashOfConfig":"61"},{"size":1743,"mtime":1752070659747,"results":"66","hashOfConfig":"61"},{"size":2004,"mtime":1752070659794,"results":"67","hashOfConfig":"61"},{"size":5966,"mtime":1752073218308,"results":"68","hashOfConfig":"61"},{"size":2954,"mtime":1752070659984,"results":"69","hashOfConfig":"61"},{"size":1210,"mtime":1752070659794,"results":"70","hashOfConfig":"61"},{"size":1494,"mtime":1752070659785,"results":"71","hashOfConfig":"61"},{"size":6134,"mtime":1752070659789,"results":"72","hashOfConfig":"61"},{"size":1992,"mtime":1752070659789,"results":"73","hashOfConfig":"61"},{"size":1566,"mtime":1752070659747,"results":"74","hashOfConfig":"61"},{"size":2509,"mtime":1752070659781,"results":"75","hashOfConfig":"61"},{"size":117,"mtime":1752070659794,"results":"76","hashOfConfig":"61"},{"size":451,"mtime":1752070659747,"results":"77","hashOfConfig":"61"},{"size":5383,"mtime":1752070659785,"results":"78","hashOfConfig":"61"},{"size":2498,"mtime":1752070659785,"results":"79","hashOfConfig":"61"},{"size":2070,"mtime":1752070659783,"results":"80","hashOfConfig":"61"},{"size":3688,"mtime":1752070659782,"results":"81","hashOfConfig":"61"},{"size":2950,"mtime":1752070659783,"results":"82","hashOfConfig":"61"},{"size":394,"mtime":1752070659793,"results":"83","hashOfConfig":"61"},{"size":7808,"mtime":1752088709438,"results":"84","hashOfConfig":"61"},{"size":1454,"mtime":1752070659790,"results":"85","hashOfConfig":"61"},{"size":1024,"mtime":1752070659793,"results":"86","hashOfConfig":"61"},{"size":3183,"mtime":1752070659789,"results":"87","hashOfConfig":"61"},{"size":6161,"mtime":1752070659788,"results":"88","hashOfConfig":"61"},{"size":1675,"mtime":1752070659781,"results":"89","hashOfConfig":"61"},{"size":339,"mtime":1752070659747,"results":"90","hashOfConfig":"61"},{"size":2483,"mtime":1752070659784,"results":"91","hashOfConfig":"61"},{"size":293,"mtime":1752070659790,"results":"92","hashOfConfig":"61"},{"size":772,"mtime":1752070659788,"results":"93","hashOfConfig":"61"},{"size":2133,"mtime":1752070659781,"results":"94","hashOfConfig":"61"},{"size":1294,"mtime":1752070659788,"results":"95","hashOfConfig":"61"},{"size":5184,"mtime":1752070659788,"results":"96","hashOfConfig":"61"},{"size":650,"mtime":1752070659791,"results":"97","hashOfConfig":"61"},{"size":613,"mtime":1752070659792,"results":"98","hashOfConfig":"61"},{"size":392,"mtime":1752070659782,"results":"99","hashOfConfig":"61"},{"size":1303,"mtime":1752070659784,"results":"100","hashOfConfig":"61"},{"size":671,"mtime":1752070659792,"results":"101","hashOfConfig":"61"},{"size":4971,"mtime":1752070659784,"results":"102","hashOfConfig":"61"},{"size":1250,"mtime":1752070659985,"results":"103","hashOfConfig":"61"},{"size":243,"mtime":1752070659792,"results":"104","hashOfConfig":"61"},{"size":454,"mtime":1752070659791,"results":"105","hashOfConfig":"61"},{"size":1166,"mtime":1752070659747,"results":"106","hashOfConfig":"61"},{"size":1777,"mtime":1752070659783,"results":"107","hashOfConfig":"61"},{"size":1045,"mtime":1752070659747,"results":"108","hashOfConfig":"61"},{"size":434,"mtime":1752070659787,"results":"109","hashOfConfig":"61"},{"size":14317,"mtime":1752070659747,"results":"110","hashOfConfig":"61"},{"size":304,"mtime":1752070659791,"results":"111","hashOfConfig":"61"},{"size":846,"mtime":1752070659792,"results":"112","hashOfConfig":"61"},{"size":846,"mtime":1752070659781,"results":"113","hashOfConfig":"61"},{"size":855,"mtime":1752070659792,"results":"114","hashOfConfig":"61"},{"size":329,"mtime":1752070659790,"results":"115","hashOfConfig":"61"},{"size":1662,"mtime":1752070659747,"results":"116","hashOfConfig":"61"},{"size":2936,"mtime":1752070659783,"results":"117","hashOfConfig":"61"},{"size":803,"mtime":1752084136570,"results":"118","hashOfConfig":"61"},{"size":11479,"mtime":1752088174104,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"lb4ckj",{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"123"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"123"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"123"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"123"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"123"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"123"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"123"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"123"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"123"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"123"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"123"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"123"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"123"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"123"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"123"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"123"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"123"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"123"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"123"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"123"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"123"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"123"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"123"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\index.js",["264"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport StateProvider from './components/providers/StateProvider';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { Provider } from 'react-redux';\r\nimport { mapReducer } from './reducers/mapReducer';\r\nimport { socketRTK } from './middleware/socketRTK';\r\n\r\nconst store = configureStore({\r\n  reducer: mapReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(socketRTK())\r\n});\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n",["265","266"],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\App.js",["267"],"import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport Sidenav from './components/SideNav';\r\nimport StateProvider from './components/providers/StateProvider';\r\nimport Login from './pages/Login';\r\nimport './App.css';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\n// ✅ Configura axios para enviar cookies e definir a baseURL da API\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.baseURL = process.env.REACT_APP_BACKEND_URL;\r\n\r\nfunction App() {\r\n  const userState = useSelector((state) => {\r\n    return state.user;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!!!userState.id ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app\">\r\n          <StateProvider>\r\n            <Sidenav />\r\n          </StateProvider>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\reducers\\mapReducer.js",["268","269","270"],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\middleware\\socketRTK.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\providers\\StateProvider.js",["271"],"import { createContext, useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport applicationDataReducer, {\r\n  SET_APPLICATION_DATA,\r\n  SET_CURRENT_PROJECT,\r\n  SET_TASK_STATUS,\r\n  SET_TASK_PRIORITY,\r\n  ADD_CREATED_PROJECT,\r\n} from \"../../reducers/applicationDataReducer\";\r\n\r\nexport const stateContext = createContext();\r\n\r\nexport default function StateProvider(props) {\r\n  const [state, dispatch] = useReducer(applicationDataReducer, {\r\n    users: [],\r\n    projects: [],\r\n    projectTeams: [],\r\n    current_project: 1,\r\n    tasks: [],\r\n    taskTeams: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      axios.get(\"/users\"),\r\n      axios.get(\"/projects\"),\r\n      axios.get(\"/users_projects\"),\r\n      axios.get(`/tasks/project/${state.current_project}`),\r\n      axios.get(\"/users_tasks\"),\r\n    ]).then((all) => {\r\n      dispatch({\r\n        type: SET_APPLICATION_DATA,\r\n        value: {\r\n          users: all[0].data,\r\n          projects: all[1].data,\r\n          projectTeams: all[2].data,\r\n          tasks: all[3].data,\r\n          taskTeams: all[4].data,\r\n        },\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const updateProjectList = () => {\r\n    Promise.all([axios.get(\"/projects\"), axios.get(\"/users_projects\")]).then(\r\n      (all) => {\r\n        dispatch({\r\n          type: SET_APPLICATION_DATA,\r\n          value: {\r\n            ...state,\r\n            projects: all[0].data,\r\n            projectTeams: all[1].data,\r\n          },\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const createProject = (project) => {\r\n    axios\r\n      .post(\"/projects\", project)\r\n      .then(async (data) => {\r\n        const projectTeamsData = await axios.get(\"/users_projects\");\r\n\r\n        dispatch({\r\n          type: ADD_CREATED_PROJECT,\r\n          project: data.data,\r\n          projectTeams: projectTeamsData.data,\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const editProject = (project, id) => {\r\n    axios.patch(`/projects/${id}`, project).then(() => {\r\n      updateProjectList();\r\n    });\r\n  };\r\n\r\n  const deleteProject = (id) => {\r\n    axios.delete(`/projects/${id}`).then(() => {\r\n      updateProjectList();\r\n    });\r\n  };\r\n\r\n  const setCurrentProject = (id) => {\r\n    axios.get(`/tasks/project/${id}`).then((data) => {\r\n      dispatch({\r\n        type: SET_CURRENT_PROJECT,\r\n        id,\r\n        tasks: data.data,\r\n      });\r\n    });\r\n  };\r\n\r\n  const createTask = (task) => {\r\n    axios.post(\"/tasks\", task).then(() => {\r\n      updateTaskList();\r\n    });\r\n  };\r\n\r\n  const editTask = (task, id) => {\r\n    axios.patch(`/tasks/${id}`, task).then(() => {\r\n      updateTaskList();\r\n    });\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    axios.delete(`/tasks/${id}`).then(() => {\r\n      updateTaskList();\r\n    });\r\n  };\r\n\r\n  const updateTaskList = () => {\r\n    Promise.all([\r\n      axios.get(`/tasks/project/${state.current_project}`),\r\n      axios.get(\"/users_tasks\"),\r\n    ]).then((all) => {\r\n      dispatch({\r\n        type: SET_APPLICATION_DATA,\r\n        value: {\r\n          ...state,\r\n          tasks: all[0].data,\r\n          taskTeams: all[1].data,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const updateTaskStatus = (status, id) => {\r\n    axios.patch(`/tasks/status/${id}`, { status }).then((data) => {\r\n      const newTasks = state.tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return data.data;\r\n        } else {\r\n          return task;\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_TASK_STATUS,\r\n        tasks: newTasks,\r\n      });\r\n    });\r\n  };\r\n\r\n  const updateTaskPriority = (priority, id) => {\r\n    axios.patch(`/tasks/priority/${id}`, { priority }).then((data) => {\r\n      const newTasks = state.tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return data.data;\r\n        } else {\r\n          return task;\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_TASK_PRIORITY,\r\n        tasks: newTasks,\r\n      });\r\n    });\r\n  };\r\n\r\n  const providerData = {\r\n    state,\r\n    createProject,\r\n    editProject,\r\n    deleteProject,\r\n    setCurrentProject,\r\n    createTask,\r\n    editTask,\r\n    updateTaskStatus,\r\n    updateTaskPriority,\r\n    deleteTask,\r\n  };\r\n\r\n  return (\r\n    <stateContext.Provider value={providerData}>\r\n      {props.children}\r\n    </stateContext.Provider>\r\n  );\r\n}\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\SideNav.js",["272","273","274","275","276","277","278","279","280","281","282","283"],"import React from 'react';\r\nimport { AiFillHome, AiFillMessage } from 'react-icons/ai';\r\nimport { FaClipboardList, FaSpotify } from 'react-icons/fa';\r\nimport { MdGroup } from 'react-icons/md';\r\nimport { GrLineChart } from 'react-icons/gr';\r\nimport { BsFillAlarmFill, BsKanbanFill } from 'react-icons/bs';\r\nimport { RiDashboardFill, RiLogoutCircleFill } from 'react-icons/ri';\r\nimport { Switch, Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ProjectCardList from './projects/projectCardList';\r\nimport Messages from '../pages/Messages';\r\nimport Login from '../pages/Login';\r\nimport UserDashboard from './userDashboard/UserDashboard';\r\nimport TaskTable from './tasks/TaskTable';\r\nimport Kanban from './kanban/Kanban';\r\nimport GanttChart from './gantt-chart/GanttChart';\r\n\r\nconst Sidenav = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <Dashboard></Dashboard>\r\n        </Route>\r\n        <Route path='/project' exact>\r\n          <ProjectCardList />\r\n        </Route>\r\n        <Route path='/tasks' exact>\r\n          <TaskTable />\r\n        </Route>\r\n        <Route path='/messages' exact>\r\n          <Messages></Messages>\r\n        </Route>\r\n        <Route path='/dashboard' exact>\r\n          <UserDashboard></UserDashboard>\r\n        </Route>\r\n        <Route path='/kanban' exact>\r\n          <Kanban></Kanban>\r\n        </Route>\r\n        <Route path='/gantt' exact>\r\n          <GanttChart></GanttChart>\r\n        </Route>\r\n        {/* <Route path=\"/login\" exact>\r\n          <Login></Login>\r\n        </Route> */}\r\n        userDashboard\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\pages\\Login.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\utils\\constants.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\reducers\\applicationDataReducer.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\pages\\Dashboard.js",["284","285"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport 'nes.css/css/nes.min.css';\r\nimport '../components/styles/animations.css';\r\nimport Players from '../components/players';\r\nimport Map from '../components/map/Map';\r\nimport ModalInput from '../components/modal/ModalInput';\r\nimport MainModal from '../components/modal/MainModal';\r\nimport useMapGuide from './../hooks/useMapGuide';\r\nimport Chat from '../components/chat/chat';\r\nimport MainNav from '../components/MainNav';\r\n\r\nconst Dashboard = () => {\r\n  const { playerNearGuide } = useMapGuide();\r\n  const modalCanOpen = useSelector((state) => state.mapRoute.modalCanOpen);\r\n  const gifSearchOpen = useSelector((state) => state.gifSearchOpen);\r\n\r\n  return (\r\n    <div className=\"dashboard-layout stars\" id=\"snow\">\r\n      <div className=\"twinkling\">\r\n        {modalCanOpen && playerNearGuide && <MainModal isOpen={true} className=\"main-modal\"/>}\r\n        {/* {!(modalCanOpen && playerNearGuide) && <MainNav></MainNav>} */}\r\n        <ModalInput isOpen={true} />\r\n        <Map x={0} />\r\n        <Players />\r\n        {<Chat canOpen={!(modalCanOpen && playerNearGuide)} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\projectCardList.js",["286"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport \"./projects.css\";\r\nimport \"nes.css/css/nes.min.css\";\r\n\r\nimport ProjectCard from \"./projectCard\";\r\nimport ProjectForm from \"./ProjectForm\";\r\nimport Button from \"../button/Button\";\r\n\r\nfunction ProjectCardList(props) {\r\n  const { state, createProject, setCurrentProject } = useContext(stateContext);\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setSelected(state.current_project);\r\n  }, [state.current_project]);\r\n\r\n  const projectsList = state.projects.map((project) => {\r\n    const isSelected = selected === project.id;\r\n\r\n    return (\r\n      <ProjectCard\r\n        key={project.id}\r\n        id={project.id}\r\n        creatorID={project.creatorId}\r\n        name={project.name}\r\n        description={project.description}\r\n        startDate={project.startDate}\r\n        endDate={project.endDate}\r\n        selected={isSelected}\r\n        setCurrentProject={setCurrentProject}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"nes-container is-rounded is-dark\">\r\n      <div className=\"welcome\">\r\n        <h1 className=\"project-card-heading\">Project Dashboard</h1>\r\n      </div>\r\n      <div className=\"new-project\">\r\n        <ProjectForm usersList={state.users} onSave={createProject} />\r\n      </div>\r\n\r\n      <section className=\"project-list\">{projectsList}</section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectCardList;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\userDashboard\\UserDashboard.js",["287","288","289","290","291","292","293"],"import React from 'react';\r\nimport 'nes.css/css/nes.min.css';\r\nimport '../rpgui.css';\r\nimport '../styles/animations.css';\r\nimport './userDashboard.css';\r\nimport { FaUserAlt } from 'react-icons/fa';\r\nimport { FcPieChart } from 'react-icons/fc';\r\nimport { useState, useEffect } from 'react';\r\n// import {useApplicationData} from '../hooks/useApplicationData.js'\r\nimport UserInfoCard from './UserInfoCard';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\nfunction UserDashboard() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [meetings, setMeetings] = useState([]);\r\n  const { width, height } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    Promise.all([axios.get('/projects'), axios.get('/meetings')]).then(\r\n      (all) => {\r\n        setProjects(all[0].data);\r\n        setMeetings(all[1].data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const userState = useSelector((state) => {\r\n    // console.log('state:', state);\r\n    return state.user;\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-dashboard-layout\">\r\n      <div className=\"welcome\">\r\n        <h1>About</h1>\r\n        <hr style={{ width: '200px' }}></hr>\r\n      </div>\r\n\r\n      {\r\n        <div className=\"user-progress nes-container is-rounded\">\r\n          <div className=\"user\">\r\n            <img\r\n              src={userState.avatar}\r\n              className=\"user-img\"\r\n              alt=\"user avatar\"></img>\r\n            <div\r\n              style={{ display: 'flex', flexDirection: 'column' }}\r\n              className=\"user-info-text\">\r\n              <p>{userState.name}</p>\r\n              <p>user #{userState.id}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      <section className=\"user-welcome\">\r\n        <h2>Obrigado por visitar a Beauty Services</h2>\r\n        <p style={{ fontSize: '16px' }}>\r\n            Nossa missão é sermos produtivos como equipe e permanecermos conectados, não importa\r\n            onde estejamos. Fazemos isso criando um metaverso para equipes de tecnologia\r\n            gerenciarem projetos, trabalharem e se divertirem juntas.\r\n        </p>\r\n        <span />\r\n        <span />\r\n        {/* <hr style={{ width: '200px' }}></hr> */}\r\n        <h3>Built with: </h3>\r\n        <hr style={{ width: '200px' }}></hr>\r\n        <p>\r\n          JavaScript TypeScript React Redux Websocket Node Express PostgreSQL\r\n        </p>\r\n\r\n        <div className=\"the-team\">\r\n          <section className=\"nes-container is-dark member-card\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                style={{ width: '180px' }}\r\n                alt=\"profile pic\"\r\n                src=\"\thttps://avatars.githubusercontent.com/u/38818956?v=4\"\r\n                target=\"_blank\"\r\n              />\r\n            </div>\r\n            <div className=\"profile\">\r\n              <h4 className=\"name\">{'Carrie'}</h4>\r\n              <div>\r\n                <a\r\n                  href=\"https://github.com/cgm42\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\">\r\n                  <i className=\"nes-icon github\"></i>\r\n                </a>\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/carriegeng/\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\">\r\n                  <i className=\"nes-icon linkedin\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"nes-container is-dark member-card\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                style={{ width: '180px' }}\r\n                alt=\"profile pic\"\r\n                src=\"\thttps://avatars.githubusercontent.com/u/86113795?v=4\"\r\n              />\r\n            </div>\r\n            <div className=\"profile\">\r\n              <h4 className=\"name\">{'Johnny'}</h4>\r\n              <div>\r\n                <a\r\n                  href=\"https://github.com/jlabedzki\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\">\r\n                  <i className=\"nes-icon github\"></i>\r\n                </a>\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/johnny-labedzki-5bb4b220a/\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\">\r\n                  <i className=\"nes-icon linkedin\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"nes-container is-dark member-card\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                style={{ width: '180px' }}\r\n                alt=\"profile pic\"\r\n                src=\"\thttps://avatars.githubusercontent.com/u/82417707?v=4\"\r\n              />\r\n            </div>\r\n            <div className=\"profile\">\r\n              <h4 className=\"name\">{'Jose'}</h4>\r\n              <div>\r\n                <a\r\n                  href=\"https://github.com/Josebautista10\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\">\r\n                  <i className=\"nes-icon github\"></i>\r\n                </a>\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/jose-bautista-a323b6217/\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\">\r\n                  <i className=\"nes-icon linkedin\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n        <br></br>\r\n        <h3>Sources </h3>\r\n        <hr style={{ width: '200px' }}></hr>\r\n        <p style={{ fontSize: '15px' }}>\r\n          This project uses licensed assets from{' '}\r\n          <a\r\n            href=\"https://limezu.itch.io/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\">\r\n            @limezu{' '}\r\n          </a>\r\n          and{' '}\r\n          <a\r\n            href=\"https://codepen.io/punkydrewster713\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\">\r\n            Drew Conley\r\n          </a>\r\n          .\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskTable.js",["294","295"],"import React, { useState, useContext } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport \"./tasks.css\";\r\nimport \"../rpgui.css\";\r\nimport \"nes.css/css/nes.min.css\";\r\nimport TaskRow from \"./TaskRow\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport Button from \"../button/Button\";\r\n\r\nfunction TaskTable(props) {\r\n  const { state, createTask } = useContext(stateContext);\r\n\r\n  console.log(\"----tasks in task table-----\", state.tasks);\r\n\r\n  return (\r\n    <div className=\"rpgui-content\">\r\n      <div className=\"task-dashboard-layout nes-container is-rounded is-dark\">\r\n        <div className=\"welcome\">\r\n          <h1>Tasks</h1>\r\n        </div>\r\n\r\n\r\n          <div className=\"table-container\">\r\n          <div className=\"new-task\">\r\n            <TaskForm\r\n              onSave={createTask}\r\n              state={state}\r\n              projectID={state.current_project}\r\n            />\r\n          </div>\r\n\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Tasks</th>\r\n                <th>Users</th>\r\n                <th>Status</th>\r\n                <th>Priority</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n              </tr>\r\n            </thead>\r\n            {state.tasks && (\r\n              <tbody>\r\n                {state.tasks.map((task) => {\r\n                  return (\r\n                    <TaskRow\r\n                      key={task.id}\r\n                      id={task.id}\r\n                      name={task.name}\r\n                      description={task.description}\r\n                      status={task.currentStatus}\r\n                      priority={task.priorityLevel}\r\n                      startDate={task.startDate}\r\n                      endDate={task.endDate}\r\n                    ></TaskRow>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            )}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskTable;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\gantt-chart\\GanttChart.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\Kanban.js",["296","297","298"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport \"./kanban.css\";\r\nimport \"nes.css/css/nes.min.css\";\r\nimport \"../rpgui.css\";\r\nimport { AiFillWarning } from \"react-icons/ai\";\r\nimport KanbanCard from \"./KanbanCard\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nfunction Kanban() {\r\n  const { state, updateTaskStatus } = useContext(stateContext);\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const start = source.droppableId;\r\n    const end = destination.droppableId;\r\n\r\n    if (start === end) {\r\n      return;\r\n    }\r\n\r\n    const getStatusFromColumn = (column) => {\r\n      if (column === \"column-1\") return 3;\r\n      if (column === \"column-2\") return 0;\r\n      if (column === \"column-3\") return 1;\r\n      if (column === \"column-4\") return 2;\r\n    };\r\n\r\n    const status = getStatusFromColumn(destination.droppableId);\r\n    const currentTask = parseInt(draggableId);\r\n\r\n    updateTaskStatus(status, currentTask);\r\n  };\r\n\r\n  return (\r\n    <div className=\" rpgui-content nes-container is-rounded is-dark\">\r\n      <div className=\"welcome\">\r\n        <h1>Welcome to your Kanban</h1>\r\n      </div>\r\n\r\n      <DragDropContext onDragEnd={handleOnDragEnd}>\r\n        {/* <DragDropContext> */}\r\n        <section className=\"kanban-layout\">\r\n          <KanbanCard\r\n            name={\"Late\"}\r\n            status={3}\r\n            column={\"column-1\"}\r\n            tasks={state.tasks.filter((task) => task.currentStatus === 3)}\r\n          ></KanbanCard>\r\n          <KanbanCard\r\n            name={\"Todo\"}\r\n            status={0}\r\n            column={\"column-2\"}\r\n            tasks={state.tasks.filter((task) => task.currentStatus === 0)}\r\n          ></KanbanCard>\r\n          <KanbanCard\r\n            name={\"In Progress\"}\r\n            status={1}\r\n            column={\"column-3\"}\r\n            tasks={state.tasks.filter((task) => task.currentStatus === 1)}\r\n          ></KanbanCard>\r\n          <KanbanCard\r\n            name={\"Done\"}\r\n            status={2}\r\n            column={\"column-4\"}\r\n            tasks={state.tasks.filter((task) => task.currentStatus === 2)}\r\n          ></KanbanCard>\r\n        </section>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Kanban;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\pages\\Messages.jsx",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\MainNav.js",["299","300","301","302","303"],"import React from 'react';\r\nimport './styles/MainNav.css';\r\nimport { FaClipboardList } from 'react-icons/fa';\r\nimport useWindowDimensions from '../hooks/useWindowDimensions';\r\n\r\n\r\nfunction MainNav() {\r\n  const { width, height, topMargin, leftMargin } = useWindowDimensions();\r\n  return (\r\n    <div className='nav'>\r\n      <div className='nav-container'>\r\n        <div >\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainNav;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\ProjectForm.js",["304"],"import React, { useState } from 'react';\r\nimport Button from '../button/Button';\r\nimport DatePicker from 'react-date-picker';\r\nimport User from '../users/User';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction ProjectForm(props) {\r\n  const userState = useSelector((state) => {\r\n    // console.log(\"state:\", state);\r\n    return state.user;\r\n  });\r\n\r\n  const [name, setName] = useState(props.name || '');\r\n  const [description, setDescription] = useState(props.description || '');\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [showUsers, setShowUsers] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const { usersList, onSave } = props;\r\n\r\n  const validate = () => {\r\n    if (!!!name) {\r\n      setError('Please enter a name');\r\n      return;\r\n    }\r\n    if (!!!description) {\r\n      setError('Please enter a description');\r\n      return;\r\n    }\r\n\r\n    const selectedUsers = document.getElementsByClassName(\r\n      'user-list--selected'\r\n    );\r\n\r\n    const selectedUsersIDs = [];\r\n\r\n    for (const user of selectedUsers) {\r\n      selectedUsersIDs.push(parseInt(user.id));\r\n    }\r\n\r\n    const project = {\r\n      creatorID: userState.id,\r\n      name,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n      users: selectedUsersIDs\r\n    };\r\n\r\n    setName('');\r\n    setDescription('');\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError('');\r\n    onSave(project);\r\n    document.getElementById('dialog-dark-rounded').close();\r\n  };\r\n\r\n  const cancel = () => {\r\n    setName('');\r\n    setDescription('');\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError('');\r\n    document.getElementById('dialog-dark-rounded').close();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type='button'\r\n        onClick={() => {\r\n          setShowUsers(true);\r\n          document.getElementById('dialog-dark-rounded').showModal();\r\n        }}\r\n        title={'NEW'}\r\n      ></Button>\r\n      <dialog\r\n        className='nes-dialog is-dark is-rounded'\r\n        id='dialog-dark-rounded'\r\n      >\r\n        <form\r\n          className='form'\r\n          autoComplete='off'\r\n          onSubmit={(e) => e.preventDefault()}\r\n          method='dialog'\r\n        >\r\n          {error && <p className='error'>{error}</p>}\r\n          <div className='form-label'>\r\n            <label>\r\n              <p>Project name:</p>\r\n              <input\r\n                value={name}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              <p>Description:</p>\r\n              <textarea\r\n                value={description}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className='team-date-container'>\r\n            {showUsers && (\r\n              <label>\r\n                Choose your team:\r\n                <ul className='rpgui users-container'>\r\n                  {usersList.map((user) => {\r\n                    if (user.id !== userState.id) {\r\n                      const { id, name, avatar } = user;\r\n                      return (\r\n                        <User key={id} id={id} avatar={avatar} name={name} />\r\n                      );\r\n                    }\r\n                  })}\r\n                </ul>\r\n              </label>\r\n            )}\r\n\r\n            <div className='date'>\r\n              <label>\r\n                Start date:\r\n                <DatePicker\r\n                  onChange={setStartDate}\r\n                  value={startDate}\r\n                  className='date-size'\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                End date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={endDate}\r\n                  minDate={new Date(startDate)}\r\n                  className='date-size'\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className='cancel-submit'>\r\n            <Button onClick={cancel} title={'cancel'}></Button>\r\n            <Button onClick={validate} title={'submit'}></Button>\r\n          </div>\r\n        </form>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectForm;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\projectCard.js",["305","306"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport { useSelector } from \"react-redux\";\r\nimport getProjectTeamsForCard from \"../../helpers/getProjectTeamsForCard\";\r\nimport EditProjectForm from \"./EditProjectForm\";\r\nimport DeleteProjectForm from \"./DeleteProjectForm\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function ProjectCard(props) {\r\n  const userState = useSelector((state) => {\r\n    // console.log(\"state:\", state);\r\n    return state.user;\r\n  });\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const { state, editProject, deleteProject } = useContext(stateContext);\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    startDate,\r\n    endDate,\r\n    selected,\r\n    setCurrentProject,\r\n  } = props;\r\n\r\n  const projectClass = classNames(\"project-card\", \"nes-container\", \"is-rounded\", {\r\n    \"project-card--selected\": selected,\r\n  });\r\n\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`/tasks/project/${id}`);\r\n    setTasks(data);\r\n  }, []);\r\n\r\n  const completedTasks = tasks.filter((task) => task.currentStatus === 2);\r\n  const percentComplete = Math.round(\r\n    (completedTasks.length / tasks.length) * 100\r\n  );\r\n\r\n  const zeroPercentErrorHandler = (percent) => (percent ? percent : 0);\r\n\r\n  const usersListArray = getProjectTeamsForCard(state, id);\r\n\r\n  return (\r\n    <div className={projectClass} onClick={() => setCurrentProject(id)}>\r\n      <div className=\"card-header\">\r\n        <header className=\"title\">{props.name}</header>\r\n        {userState.id === props.creatorID && (\r\n          <div className=\"buttons\">\r\n            <EditProjectForm\r\n              id={id}\r\n              name={name}\r\n              description={description}\r\n              startDate={startDate}\r\n              endDate={endDate}\r\n              state={state}\r\n              onSave={editProject}\r\n            />\r\n            <DeleteProjectForm id={id} onConfirm={deleteProject} />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <p className='project-card-description'>{props.description}</p>\r\n      <h1 className='project-card-description'>Completion: {zeroPercentErrorHandler(percentComplete)}%</h1>\r\n      <progress\r\n        className=\"nes-progress is-success\"\r\n        value={zeroPercentErrorHandler(percentComplete)}\r\n        max=\"100\"\r\n      ></progress>\r\n      <h1 className='project-card-description'>The team:</h1>\r\n      {usersListArray}\r\n    </div>\r\n  );\r\n}\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\modal\\ModalInput.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\map\\Map.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\modal\\MainModal.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\hooks\\useMapGuide.js",["307","308"],"import { useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function useMapGuide(fn) {\r\n  const mapGuideState = useSelector((state) => state.mapGuide);\r\n\r\n  let playerNearGuide = false;\r\n  for (let key in mapGuideState) {\r\n    if (mapGuideState[key]) {\r\n      playerNearGuide = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return { playerNearGuide };\r\n}\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\chat\\chat.js",["309","310","311"],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\userDashboard\\UserInfoCard.js",["312"],"import React from 'react';\r\nimport UserInfoCardData from './UserInfoCardData';\r\n\r\nfunction UserInfoCard(props) {\r\n  const { heading, projects, meetings } = props;\r\n  const getTodaysDate = () => {\r\n    let date = new Date();\r\n    const offset = date.getTimezoneOffset();\r\n    date = new Date(date.getTime() - offset * 60 * 1000);\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\n  const getMeetingsDate = (meeting) => {\r\n    const date = meeting.date.split('T');\r\n    return date[0];\r\n  };\r\n\r\n  // const projectsList = projects.map(project => {\r\n  //   return (\r\n  //     <UserInfoCardList\r\n  //       key={project.id}\r\n  //       name={project.name}\r\n  //     />\r\n  //   )\r\n  // });\r\n\r\n  // const meetingsList = meetings.map(meeting => {\r\n\r\n  // })\r\n\r\n  return (\r\n    <div className='card rpgui-container framed float'>\r\n      <header>{heading}</header>\r\n      <ul>\r\n        {projects &&\r\n          projects.map((project) => {\r\n            return <UserInfoCardData key={project.id} name={project.name} />;\r\n          })}\r\n        {meetings &&\r\n          meetings.map((meeting) => {\r\n            if (getMeetingsDate(meeting) === getTodaysDate())\r\n              return (\r\n                <UserInfoCardData\r\n                  key={meeting.id}\r\n                  name={meeting.name}\r\n                  startTime={meeting.startTime}\r\n                />\r\n              );\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserInfoCard;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\hooks\\useWindowDimensions.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskRow.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskForm.js",["313"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport User from \"../users/User\";\r\n\r\nfunction TaskForm(props) {\r\n  const [name, setName] = useState(props.name || \"\");\r\n  const [description, setDescription] = useState(props.description || \"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [priority, setPriority] = useState(0);\r\n  const [showUsers, setShowUsers] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { state, onSave, projectID } = props;\r\n\r\n  const team = state.projectTeams.filter((team) => {\r\n    return team.projectId === state.current_project;\r\n  });\r\n\r\n  const projectUsersList = [];\r\n\r\n  for (const member of team) {\r\n    for (const user of state.users) {\r\n      if (user.id === member.userId) {\r\n        projectUsersList.push(user);\r\n      }\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    if (!!!name) {\r\n      setError(\"Please enter a name\");\r\n      return;\r\n    }\r\n    if (!!!description) {\r\n      setError(\"Please enter a description\");\r\n      return;\r\n    }\r\n\r\n    const selectedUsers = document\r\n      .getElementById(\"dialog-dark-rounded\")\r\n      .getElementsByClassName(\"user-list--selected\");\r\n\r\n    const selectedUsersIDs = [];\r\n\r\n    for (const user of selectedUsers) {\r\n      selectedUsersIDs.push(parseInt(user.id));\r\n    }\r\n\r\n    if (selectedUsersIDs.length === 0) {\r\n      setError(\"Please select at least one assignee\");\r\n      return;\r\n    }\r\n\r\n    const task = {\r\n      project_id: projectID,\r\n      sprint_id: null,\r\n      name,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n      priority_level: priority,\r\n      users: selectedUsersIDs,\r\n    };\r\n\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    onSave(task);\r\n    document.getElementById(\"dialog-dark-rounded\").close();\r\n  };\r\n\r\n  const cancel = () => {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    document.getElementById(\"dialog-dark-rounded\").close();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {state.current_project !== 1 && (\r\n        <Button\r\n          type=\"button\"\r\n          className=\"nes-btn is-primary\"\r\n          onClick={() => {\r\n            setShowUsers(true);\r\n            document.getElementById(\"dialog-dark-rounded\").showModal();\r\n          }}\r\n          title={\"New Task\"}\r\n        ></Button>\r\n      )}\r\n      <dialog\r\n        className=\"nes-dialog is-dark is-rounded\"\r\n        id=\"dialog-dark-rounded\"\r\n      >\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={(e) => e.preventDefault()}\r\n          method=\"dialog\"\r\n        >\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <label>\r\n            Task name:\r\n            <input\r\n              value={name}\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                setError(\"\");\r\n              }}\r\n              onKeyDown={(ev) => {\r\n                if (\r\n                  ev.code === \"Space\" ||\r\n                  ev.code === \"ArrowUp\" ||\r\n                  ev.code === \"ArrowDown\" ||\r\n                  ev.code === \"ArrowLeft\" ||\r\n                  ev.code === \"ArrowRight\"\r\n                ) {\r\n                  ev.stopPropagation();\r\n                }\r\n              }}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Description:\r\n            <textarea\r\n              value={description}\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n                setError(\"\");\r\n              }}\r\n              onKeyDown={(ev) => {\r\n                if (\r\n                  ev.code === \"Space\" ||\r\n                  ev.code === \"ArrowUp\" ||\r\n                  ev.code === \"ArrowDown\" ||\r\n                  ev.code === \"ArrowLeft\" ||\r\n                  ev.code === \"ArrowRight\"\r\n                ) {\r\n                  ev.stopPropagation();\r\n                }\r\n              }}\r\n            />\r\n          </label>\r\n\r\n          <div className=\"team-date-container\">\r\n            {showUsers && (\r\n              <label>\r\n                Assignees:\r\n                <ul\r\n                  className=\"rpgui users-container\"\r\n                  onClick={() => setError(\"\")}\r\n                >\r\n                  {projectUsersList.map((user) => {\r\n                    const { id, name, avatar } = user;\r\n\r\n                    return (\r\n                      <User key={id} id={id} avatar={avatar} name={name} />\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </label>\r\n            )}\r\n\r\n            <label>\r\n              Priority:\r\n              <select\r\n                className=\"rpgui-dropdown\"\r\n                onChange={(e) => setPriority(e.target.value)}\r\n              >\r\n                <option value={0}>Low</option>\r\n                <option value={1}>Medium</option>\r\n                <option value={2}>High</option>\r\n              </select>\r\n            </label>\r\n\r\n            <div className=\"date\">\r\n              <label>\r\n                Start date:\r\n                <DatePicker\r\n                  onChange={setStartDate}\r\n                  value={startDate}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                End date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={endDate}\r\n                  minDate={new Date(startDate)}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"cancel-submit\">\r\n            <Button onClick={cancel} title={\"cancel\"}></Button>\r\n            <Button onClick={validate} title={\"submit\"}></Button>\r\n          </div>\r\n        </form>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\KanbanCard.js",["314","315"],"import React, { useState, useContext } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport \"./kanban.css\";\r\nimport \"nes.css/css/nes.min.css\";\r\nimport \"../rpgui.css\";\r\nimport classNames from \"classnames\";\r\nimport { AiFillWarning } from \"react-icons/ai\";\r\nimport KanbanTaskItem from \"./KanbanTaskItem\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nfunction KanbanCard(props) {\r\n  const { name, status, column, tasks } = props;\r\n  const { state } = useContext(stateContext);\r\n\r\n  const kanBanCardClass = classNames(\r\n    \"kanban-card\",\r\n    \"nes-container\",\r\n    \"is-rounded\",\r\n    { \"is-late\": status === 3 },\r\n    { \"to-do\": status === 0 },\r\n    { \"in-progress\": status === 1 },\r\n    { \"is-done\": status === 2 }\r\n  );\r\n\r\n  const tasksList = tasks.map((task) => {\r\n    const { id, name, description, priorityLevel, currentStatus, columnIndex } =\r\n      task;\r\n\r\n    return (\r\n      <KanbanTaskItem\r\n        key={id}\r\n        index={columnIndex}\r\n        id={id}\r\n        title={name}\r\n        description={description}\r\n        priority={priorityLevel}\r\n        currentStatus={currentStatus}\r\n        users={state.users}\r\n        taskTeams={state.taskTeams}\r\n      ></KanbanTaskItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Droppable droppableId={column}>\r\n      {(provided) => (\r\n        <div\r\n          className={kanBanCardClass}\r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n          id=\"kanban-card-id\"\r\n        >\r\n          <header className=\"title\">{name}</header>\r\n          {tasksList}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n}\r\n\r\nexport default KanbanCard;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\button\\Button.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\players\\index.js",["316"],"import Actor from '../actor';\r\nimport { useState } from 'react';\r\nimport useKeyPress from '../../hooks/useKeyPress';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  HIDE_MAP_GUIDE,\r\n  WALK,\r\n  WALK_IN_PLACE,\r\n  SET_MAP_GUIDE,\r\n  TOGGLE_MODAL_CAN_OPEN,\r\n} from '../../reducers/mapReducer';\r\nimport { directions } from '../../utils/constants';\r\nimport checkNextTile from '../../utils/checkNextTile';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\n\r\nexport default function Players({ socket }) {\r\n  const { leftMargin, topMargin } = useWindowDimensions();\r\n  const gifSearchOpen = useSelector((state) => state.gifSearchOpen);\r\n  const localUserState = useSelector((state) => {\r\n    return state.players[state.localID];\r\n  });\r\n\r\n  const playerListState = useSelector((state) => {\r\n    return state.players;\r\n  });\r\n  const localIdState = useSelector((state) => {\r\n    return state.localID;\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  function walk(dir) {\r\n    if (checkNextTile(dir, localUserState.x, localUserState.y)['action']) {\r\n      const actionAsset = checkNextTile(\r\n        dir,\r\n        localUserState.x,\r\n        localUserState.y\r\n      )['asset'];\r\n      dispatch(SET_MAP_GUIDE({ actionAsset }));\r\n    } else {\r\n      dispatch(HIDE_MAP_GUIDE());\r\n    }\r\n    if (checkNextTile(dir, localUserState.x, localUserState.y)['walk']) {\r\n      dispatch(WALK({ dir, id: localIdState }));\r\n      return {\r\n        type: 'WALK',\r\n        payload: JSON.stringify(localUserState),\r\n      };\r\n    }\r\n    dispatch(WALK_IN_PLACE({ dir, id: localIdState })); //this action is NOT broadcasted\r\n  }\r\n\r\n  useKeyPress((e) => {\r\n    // e.preventDefault();\r\n    if (\r\n      e.key === 'ArrowDown' ||\r\n      e.key === 'ArrowUp' ||\r\n      e.key === 'ArrowLeft' ||\r\n      e.key === 'ArrowRight'\r\n    ) {\r\n      walk(e.key);\r\n      return;\r\n    }\r\n    if (e.code === 'Space' && !gifSearchOpen) {\r\n      dispatch(TOGGLE_MODAL_CAN_OPEN());\r\n    }\r\n  });\r\n\r\n  const playerListArr = Object.keys(playerListState).map((key) => (\r\n    <Actor\r\n      key={key}\r\n      sprite={`/sprites/skins/${playerListState[key]['skin']}.png`}\r\n      dir={directions[playerListState[key]['dir']]}\r\n      step={playerListState[key]['step']}\r\n      position={{\r\n        x: playerListState[key]['x'] + leftMargin,\r\n        y: playerListState[key]['y'] + topMargin,\r\n      }}\r\n      displayName={playerListState[key]['name']}\r\n    />\r\n  ));\r\n  return <div>{playerListArr}</div>;\r\n}\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\userDashboard\\UserInfoCardData.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\TaskItemInfo.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\KanbanTaskItem.js",["317","318","319","320"],"import React, { useState } from 'react';\r\nimport { AiFillWarning } from 'react-icons/ai';\r\nimport TaskUser from '../users/TaskUser';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport classNames from 'classnames';\r\nimport KanbanTaskInfo from './KanbanTaskInfo';\r\n\r\nfunction KanbanTaskItem(props) {\r\n  const {\r\n    index,\r\n    id,\r\n    title,\r\n    description,\r\n    priority,\r\n    currentStatus,\r\n    users,\r\n    taskTeams\r\n  } = props;\r\n\r\n  const priorityClass = classNames(\r\n    'priority-icon',\r\n    { low: priority === 0 },\r\n    { medium: priority === 1 },\r\n    { high: priority === 2 }\r\n  );\r\n\r\n  const team = taskTeams.filter((team) => {\r\n    return team.taskId === id;\r\n  });\r\n\r\n  const usersList = [];\r\n\r\n  for (const member of team) {\r\n    for (const user of users) {\r\n      if (user.id === member.userId) {\r\n        usersList.push(user);\r\n      }\r\n    }\r\n  }\r\n\r\n  const usersListArray = usersList.map((user) => {\r\n    const { id, name, avatar } = user;\r\n    return <TaskUser key={id} id={id} avatar={avatar} name={name} />;\r\n  });\r\n\r\n  return (\r\n    <Draggable key={id} draggableId={`${id}`} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          className='task-item-container'\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <div className='task-item-header'>\r\n            {usersListArray.length <= 5 ? <div className='task-users'>{usersListArray}</div>:<div className='count-users'>{`${usersListArray.length} users`}</div>}\r\n            <div className={priorityClass}>\r\n              <AiFillWarning></AiFillWarning>\r\n            </div>\r\n          </div>\r\n          <div className='task-title'>\r\n            <h1>{title}</h1>\r\n            {/* <p>{description}</p> */}\r\n          </div>\r\n          <div className='dialog-button'>\r\n            <KanbanTaskInfo\r\n              title={title}\r\n              description={description}\r\n              id={id}\r\n            ></KanbanTaskInfo>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default KanbanTaskItem;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\DeleteTaskForm.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\tasks\\EditTaskForm.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\users\\User.js",["321"],"import React, { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function User(props) {\r\n  const { id, avatar, name } = props;\r\n  const [selected, setSelected] = useState(props.selected || false);\r\n\r\n  const toggleSelected = () => {\r\n    if (selected) {\r\n      setSelected(false);\r\n      return;\r\n    }\r\n    setSelected(true);\r\n  };\r\n\r\n  const userClass = classNames(\r\n    \"user-list-form\",\r\n    { \"selected\": selected },\r\n    { \"user-list--selected\": selected }\r\n  );\r\n\r\n  return (\r\n    <li className={userClass} id={id} onClick={toggleSelected}>\r\n      <img src={avatar} />\r\n      <p>{name}</p>\r\n    </li>\r\n  );\r\n}\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getTaskTeams.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\map\\MapTile.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\DeleteProjectForm.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getProjectTeamsForCard.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\projects\\EditProjectForm.js",["322","323"],"import React, { useState } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport User from \"../users/User\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport getPreselectedProjectTeams from \"../../helpers/getPreselectedProjectTeams\";\r\n\r\nfunction EditProjectForm(props) {\r\n  const [name, setName] = useState(props.name || \"\");\r\n  const [description, setDescription] = useState(props.description || \"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(props.startDate) || new Date()\r\n  );\r\n  const [endDate, setEndDate] = useState(new Date(props.endDate) || new Date());\r\n  const [showUsers, setShowUsers] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { id, state, onSave } = props;\r\n\r\n  const validate = () => {\r\n    if (!!!name) {\r\n      setError(\"Please enter a name\");\r\n      return;\r\n    }\r\n    if (!!!description) {\r\n      setError(\"Please enter a description\");\r\n      return;\r\n    }\r\n\r\n    const selectedUsers = document\r\n      .getElementById(makeId(id))\r\n      .getElementsByClassName(\"user-list--selected\");\r\n\r\n    const selectedUsersIDs = [];\r\n\r\n    for (const user of selectedUsers) {\r\n      selectedUsersIDs.push(user.id);\r\n    }\r\n\r\n    const project = {\r\n      name,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n      selectedUsers: selectedUsersIDs,\r\n    };\r\n\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    onSave(project, id);\r\n    document.getElementById(makeId(id)).close();\r\n  };\r\n\r\n  const cancel = () => {\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    document.getElementById(makeId(id)).close();\r\n  };\r\n\r\n  const makeId = (id) => {\r\n    return `dialog-dark-rounded-edit-project-${id}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <BiEdit\r\n          className=\"edit-button\"\r\n          onClick={() => {\r\n            setShowUsers(true);\r\n            document.getElementById(makeId(id)).showModal();\r\n          }}\r\n        ></BiEdit>\r\n      </div>\r\n      <dialog className=\"nes-dialog is-dark is-rounded\" id={makeId(id)}>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={(e) => e.preventDefault()}\r\n          method=\"dialog\"\r\n        >\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <div className='form-label'>\r\n            <label>\r\n              <p>Project name:</p>\r\n              <input\r\n                value={name}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              <p>Description:</p>\r\n              <textarea\r\n                value={description}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"team-date-container\">\r\n            {showUsers && (\r\n              <label>\r\n                Team:\r\n                <ul className=\"rpgui users-container\">\r\n                  {getPreselectedProjectTeams(state, id)}\r\n                </ul>\r\n              </label>\r\n            )}\r\n\r\n            <div className=\"date\">\r\n              <label>\r\n                Start date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={startDate}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                End date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={endDate}\r\n                  minDate={new Date(startDate)}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"cancel-submit\">\r\n            <Button onClick={cancel} title={\"cancel\"}></Button>\r\n            <Button onClick={validate} title={\"submit\"}></Button>\r\n          </div>\r\n        </form>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProjectForm;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\utils\\checkNextTile.js",["324","325"],"import { MAP_TABLE } from '../utils/constants';\r\nimport { initX, initY, stepSize } from '../utils/constants';\r\nfunction getNextTile(direction, x, y) {\r\n  //relative position related x and y\r\n  let position = { left: x, top: y };\r\n  let newPos;\r\n  //Map array coordinates:\r\n  let X;\r\n  let Y;\r\n  // console.log(\"direction :>> \", direction);\r\n  // console.log(\"postion :>> \", position);\r\n\r\n  switch (direction) {\r\n    case 'ArrowDown':\r\n      newPos = position.top + stepSize;\r\n      X = (position.left - (position.left % 32)) / 32;\r\n      Y = (newPos - (newPos % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    case 'ArrowLeft':\r\n      newPos = position.left - stepSize;\r\n      X = (newPos - (newPos % 32)) / 32;\r\n      Y = (position.top - (position.top % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    case 'ArrowRight':\r\n      newPos = position.left + stepSize;\r\n      X = (newPos - (newPos % 32)) / 32;\r\n      Y = (position.top - (position.top % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    case 'ArrowUp':\r\n      newPos = position.top - stepSize;\r\n      X = (position.left - (position.left % 32)) / 32;\r\n      Y = (newPos - (newPos % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    default:\r\n  }\r\n}\r\n\r\nexport default getNextTile;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\hooks\\useKeyPress.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\win98\\index.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\globe\\index.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\piano\\index.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\guitar\\index.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\sprites\\index.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\game\\index.js",["326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import React from 'react';\r\nimport './index.css';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\n\r\nfunction TetrisField(props) {\r\n  const { width } = useWindowDimensions();\r\n  var rows = [];\r\n  props.field.forEach(function (row) {\r\n    const cols = row.map((c) => (\r\n      <td className={' FancyBorder tdcol-' + c}> </td>\r\n    ));\r\n    rows.push(<tr>{cols}</tr>);\r\n  });\r\n  return (\r\n    <div className={' AlignCenter'}>\r\n      <h3\r\n        className={' WhiteText PlayField'}\r\n        style={{ width: `${width - 130}px` }}>\r\n        {' '}\r\n        Level:{props.level} Score:{props.score}{' '}\r\n        {props.gameOver && `  Good game, but it's over. Get back to work!  `}\r\n      </h3>\r\n      <table>\r\n        <tr>{rows}</tr>\r\n      </table>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Tetris extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLeftClick = this.handleLeftClick.bind(this);\r\n    this.handleRightClick = this.handleRightClick.bind(this);\r\n    this.handleFlipClick = this.handleFlipClick.bind(this);\r\n    this.handleDownClick = this.handleDownClick.bind(this);\r\n    this.handleNewGameClick = this.handleNewGameClick.bind(this);\r\n    this.handlePauseClick = this.handlePauseClick.bind(this);\r\n    var field = [];\r\n    for (var y = 0; y < props.ySize; y++) {\r\n      var row = [];\r\n      for (var x = 0; x < props.xSize; x++) {\r\n        row.push(0);\r\n      }\r\n      field.push(row);\r\n    }\r\n    var xStart = Math.floor(parseInt(props.xSize) / 2);\r\n    this.state = {\r\n      activeTileX: xStart,\r\n      activeTileY: 1,\r\n      activeTile: 1,\r\n      tileTurn: 0,\r\n      score: 0,\r\n      level: 1,\r\n      tileCount: 0,\r\n      gameOver: false,\r\n      pause: false,\r\n      field: field,\r\n      tiles: [\r\n        // 7 tiles each tile has 4 possible turnstates which are x/y offsets\r\n        [\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n        ], // 1 single square (not part of the game)\r\n        [\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n        ], // the 4-block\r\n        [\r\n          [\r\n            [0, -1],\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n          ],\r\n          [\r\n            [-1, 0],\r\n            [0, 0],\r\n            [1, 0],\r\n            [2, 0],\r\n          ],\r\n          [\r\n            [0, -1],\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n          ],\r\n          [\r\n            [-1, 0],\r\n            [0, 0],\r\n            [1, 0],\r\n            [2, 0],\r\n          ],\r\n        ], // the long one\r\n        [\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n          ],\r\n        ], // the T\r\n        [\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [1, 0],\r\n            [-1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [-1, 0],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [-1, 1],\r\n          ],\r\n        ], // the inverse L\r\n        [\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [-1, 0],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [-1, 0],\r\n            [-1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [-1, -1],\r\n          ],\r\n        ], // the L\r\n        [\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [-1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [-1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, -1],\r\n          ],\r\n        ], // the Z\r\n        [\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [0, -1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, -1],\r\n            [1, 0],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [0, -1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, -1],\r\n            [1, 0],\r\n            [1, 1],\r\n          ],\r\n        ], // the inverse Z\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    var timerId;\r\n    timerId = setInterval(\r\n      () => this.updateField('down'),\r\n      1000 - (this.state.level * 10 > 600 ? 600 : this.state.level * 10)\r\n    );\r\n    this.setState({ timerId: timerId });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.timerId);\r\n  }\r\n  updateField(command) {\r\n    if (this.state.gameOver || this.state.pause) {\r\n      return;\r\n    }\r\n    var xAdd = 0;\r\n    var yAdd = 0;\r\n    var turnAdd = 0;\r\n    var tile = this.state.activeTile;\r\n\r\n    if (command == 'left') {\r\n      xAdd = -1;\r\n    }\r\n    if (command == 'right') {\r\n      xAdd = 1;\r\n    }\r\n    if (command == 'turn') {\r\n      turnAdd = 1;\r\n    }\r\n    if (command == 'down') {\r\n      yAdd = 1;\r\n    }\r\n\r\n    var field = this.state.field;\r\n    var x = this.state.activeTileX;\r\n    var y = this.state.activeTileY;\r\n    var turn = this.state.tileTurn;\r\n    const tiles = this.state.tiles;\r\n\r\n    // remove actual tile from field to test for new insert position\r\n    field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = 0;\r\n    field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = 0;\r\n    field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = 0;\r\n    field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = 0;\r\n\r\n    // test if the move can be executed on actual field\r\n    var xAddValid = true;\r\n    if (xAdd != 0) {\r\n      for (var i = 0; i <= 3; i++) {\r\n        if (\r\n          x + xAdd + tiles[tile][turn][i][0] >= 0 &&\r\n          x + xAdd + tiles[tile][turn][i][0] < this.props.xSize\r\n        ) {\r\n          if (\r\n            field[y + tiles[tile][turn][i][1]][\r\n              x + xAdd + tiles[tile][turn][i][0]\r\n            ] != 0\r\n          ) {\r\n            xAddValid = false;\r\n          }\r\n        } else {\r\n          xAddValid = false;\r\n        }\r\n      }\r\n    }\r\n    if (xAddValid) {\r\n      x += xAdd;\r\n    }\r\n    //try the Turn\r\n    var newTurn = turn + turnAdd > 3 ? 0 : turn + turnAdd;\r\n    var turnValid = true;\r\n    if (turnAdd != 0) {\r\n      for (var i = 0; i <= 3; i++) {\r\n        if (\r\n          x + tiles[tile][newTurn][i][0] >= 0 &&\r\n          x + tiles[tile][newTurn][i][0] < this.props.xSize &&\r\n          y + tiles[tile][newTurn][i][1] >= 0 &&\r\n          y + tiles[tile][newTurn][i][1] < this.props.ySize\r\n        ) {\r\n          if (\r\n            field[y + tiles[tile][newTurn][i][1]][\r\n              x + tiles[tile][newTurn][i][0]\r\n            ] != 0\r\n          ) {\r\n            turnValid = false;\r\n          }\r\n        } else {\r\n          turnValid = false;\r\n        }\r\n      }\r\n    }\r\n    if (turnValid) {\r\n      turn = newTurn;\r\n    }\r\n    // try the y-Add.\r\n    var yAddValid = true;\r\n    if (yAdd != 0) {\r\n      for (var i = 0; i <= 3; i++) {\r\n        if (\r\n          y + yAdd + tiles[tile][turn][i][1] >= 0 &&\r\n          y + yAdd + tiles[tile][turn][i][1] < this.props.ySize\r\n        ) {\r\n          if (\r\n            field[y + yAdd + tiles[tile][turn][i][1]][\r\n              x + tiles[tile][turn][i][0]\r\n            ] != 0\r\n          ) {\r\n            yAddValid = false;\r\n          }\r\n        } else {\r\n          yAddValid = false;\r\n        }\r\n      }\r\n    }\r\n    if (yAddValid) {\r\n      y += yAdd;\r\n    }\r\n    // render the tile at new position\r\n    field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = tile;\r\n    field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = tile;\r\n    field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = tile;\r\n    field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = tile;\r\n\r\n    if (!yAddValid) {\r\n      // Moving Down was not possible -> remove completed Lines, add Score. find nextr tile and check for Game Over ...\r\n      for (var yr = this.props.ySize - 1; yr >= 0; yr--) {\r\n        var lineComplete = true;\r\n        for (var x = 0; x < this.props.xSize; x++) {\r\n          if (field[yr][x] == 0) {\r\n            lineComplete = false;\r\n          }\r\n        }\r\n        if (lineComplete) {\r\n          for (var ySrc = yr; yr > 0; yr--) {\r\n            for (var x = 0; x < this.props.xSize; x++) {\r\n              field[yr][x] = field[yr - 1][x];\r\n            }\r\n          }\r\n          yr = this.props.ySize; // check the array again after line removal\r\n        }\r\n      }\r\n      this.setState((prev) => ({\r\n        score: prev.score + 1 * prev.level,\r\n        tileCount: prev.tileCount + 1,\r\n        level: 1 + Math.floor(prev.tileCount / 10),\r\n      }));\r\n      var timerId;\r\n      clearInterval(this.state.timerId);\r\n      timerId = setInterval(\r\n        () => this.updateField('down'),\r\n        1000 - (this.state.level * 10 > 600 ? 600 : this.state.level * 10)\r\n      );\r\n      this.setState({ timerId: timerId });\r\n      // New Tile:\r\n      tile = Math.floor(Math.random() * 7 + 1);\r\n      x = parseInt(this.props.xSize) / 2;\r\n      y = 1;\r\n      turn = 0;\r\n      // Test for Game Over, can the new tile placed in field?\r\n      if (\r\n        field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] != 0 ||\r\n        field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] != 0 ||\r\n        field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] != 0 ||\r\n        field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] != 0\r\n      ) {\r\n        this.setState({ gameOver: true });\r\n      } else {\r\n        // Render New Tile and go on\r\n        field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = tile;\r\n        field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = tile;\r\n        field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = tile;\r\n        field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = tile;\r\n      }\r\n    }\r\n    this.setState((prev) => ({\r\n      field: field,\r\n      activeTileX: x,\r\n      activeTileY: y,\r\n      tileTurn: turn,\r\n      activeTile: tile,\r\n    }));\r\n  }\r\n  handleLeftClick() {\r\n    this.updateField('left');\r\n  }\r\n  handleRightClick() {\r\n    this.updateField('right');\r\n  }\r\n  handleFlipClick() {\r\n    this.updateField('turn');\r\n  }\r\n  handleDownClick() {\r\n    this.updateField('down');\r\n  }\r\n  handlePauseClick() {\r\n    this.setState((prev) => ({ pause: !prev.pause }));\r\n  }\r\n  handleNewGameClick() {\r\n    var field = [];\r\n    for (var y = 0; y < this.props.ySize; y++) {\r\n      var row = [];\r\n      for (var x = 0; x < this.props.xSize; x++) {\r\n        row.push(0);\r\n      }\r\n      field.push(row);\r\n    }\r\n    var xStart = Math.floor(parseInt(this.props.xSize) / 2);\r\n    this.setState((prev) => ({\r\n      activeTileX: xStart,\r\n      activeTileY: 1,\r\n      activeTile: 2,\r\n      tileTurn: 0,\r\n      score: 0,\r\n      level: 1,\r\n      tileCount: 0,\r\n      gameOver: false,\r\n      field: field,\r\n    }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {' '}\r\n        <table>\r\n          {' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>{' '}\r\n            <td>\r\n              <TetrisField\r\n                field={this.state.field}\r\n                gameOver={this.state.gameOver}\r\n                score={this.state.score}\r\n                level={this.state.level}\r\n                turn={this.state.tileTurn}\r\n              />\r\n            </td>{' '}\r\n          </tr>{' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>\r\n            <td className={'ButtonAlignCenter'}>\r\n              <button onClick={this.handleLeftClick}>Left</button>\r\n              <button onClick={this.handleFlipClick}>Flip</button>\r\n              <button onClick={this.handleRightClick}>Right</button>\r\n            </td>{' '}\r\n          </tr>{' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>\r\n            <td className={'ButtonAlignCenter'}>\r\n              <button onClick={this.handleDownClick}>Down</button>\r\n            </td>\r\n            <td> </td>{' '}\r\n          </tr>{' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>{' '}\r\n            <td>\r\n              <button onClick={this.handleNewGameClick}>New Game</button>\r\n              <button onClick={this.handlePauseClick}>Pause</button>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction TetrisComp() {\r\n  const { width, height } = useWindowDimensions();\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        width: `${width * 0.9}px`,\r\n        height: `${height * 0.9}px`,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n      }}>\r\n      <Tetris xSize=\"14\" ySize=\"20\"></Tetris>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TetrisComp;\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\users\\TaskUser.js",["346"],"import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function TaskUser(props) {\r\n  const {id, avatar} = props;\r\n\r\n  const userClass = classNames(\r\n    \"task-user-list\"\r\n  )\r\n\r\n  return (\r\n    <li className={userClass} id={id}>\r\n      <img src={avatar}/>\r\n    </li>\r\n  );\r\n};","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getProjectTeams.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\kanban\\KanbanTaskInfo.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\helpers\\getPreselectedProjectTeams.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\users\\ProjectUser.js",["347"],"import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default function ProjectUser(props) {\r\n  const {id, avatar, name} = props;\r\n\r\n  const userClass = classNames(\r\n    \"user-list\"\r\n  )\r\n\r\n  return (\r\n    <li className={userClass} id={id}>\r\n      <img src={avatar}/>\r\n      <p>{name}</p>\r\n    </li>\r\n  );\r\n};","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\actor\\index.js",["348","349"],"import Sprite from '../sprites';\r\nimport {\r\n  spriteDimensions,\r\n  spriteSizeFactorF,\r\n  spriteSizeFactorC,\r\n} from '../../utils/constants';\r\nimport './actor.css';\r\nimport { useSelector } from 'react-redux';\r\nimport useMapGuide from './../../hooks/useMapGuide';\r\n\r\nexport default function Actor({\r\n  sprite,\r\n  position = { x: 0, y: 0 },\r\n  step,\r\n  dir,\r\n  displayName,\r\n}) {\r\n  const { playerNearGuide } = useMapGuide();\r\n  const { h, w } = spriteDimensions;\r\n  const opacityStyle = { opacity: '0.5' };\r\n  let styleForDisplayName = {\r\n    position: 'absolute',\r\n    top: position.y - h * 0.8, //adjust position for display name above character\r\n    left: position.x - displayName.length - 8, //8 is an adjustment factor to display name on top of character\r\n  };\r\n  let styleForDisplayNameAtGuide = '';\r\n  if (playerNearGuide) {\r\n    styleForDisplayNameAtGuide = { ...styleForDisplayName, ...opacityStyle };\r\n  }\r\n\r\n  let nameToDisplay = displayName.match(/[^\\s]+/);\r\n  nameToDisplay = nameToDisplay.slice(0, 10);\r\n\r\n  return (\r\n    <div className=\"dimension\">\r\n      {styleForDisplayNameAtGuide !== '' ? (\r\n        <div style={styleForDisplayNameAtGuide}>{nameToDisplay}</div>\r\n      ) : (\r\n        <div style={styleForDisplayName}>{nameToDisplay}</div>\r\n      )}\r\n\r\n      <Sprite\r\n        zoom={\r\n          //check file name to apply different zoom level for character rendering\r\n          sprite.slice(-6, -5) === 'f' ? spriteSizeFactorF : spriteSizeFactorC\r\n        }\r\n        image={sprite}\r\n        data={{\r\n          x: step * w,\r\n          y: dir * h,\r\n          w,\r\n          h,\r\n        }}\r\n        position={position}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\piano\\SoundfontProvider.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\utils\\peerManager.js",[],"E:\\000gitRepositorios\\WorkCodeForge\\client\\src\\components\\video\\video.js",["350","351","352","353","354","355"],{"ruleId":"356","severity":1,"message":"357","line":4,"column":8,"nodeType":"358","messageId":"359","endLine":4,"endColumn":21},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"356","severity":1,"message":"364","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":26},{"ruleId":"356","severity":1,"message":"365","line":3,"column":3,"nodeType":"358","messageId":"359","endLine":3,"endColumn":13},{"ruleId":"356","severity":1,"message":"366","line":8,"column":10,"nodeType":"358","messageId":"359","endLine":8,"endColumn":15},{"ruleId":"356","severity":1,"message":"367","line":8,"column":17,"nodeType":"358","messageId":"359","endLine":8,"endColumn":22},{"ruleId":"368","severity":1,"message":"369","line":42,"column":6,"nodeType":"370","endLine":42,"endColumn":8,"suggestions":"371"},{"ruleId":"356","severity":1,"message":"372","line":2,"column":10,"nodeType":"358","messageId":"359","endLine":2,"endColumn":20},{"ruleId":"356","severity":1,"message":"373","line":2,"column":22,"nodeType":"358","messageId":"359","endLine":2,"endColumn":35},{"ruleId":"356","severity":1,"message":"374","line":3,"column":10,"nodeType":"358","messageId":"359","endLine":3,"endColumn":25},{"ruleId":"356","severity":1,"message":"375","line":3,"column":27,"nodeType":"358","messageId":"359","endLine":3,"endColumn":36},{"ruleId":"356","severity":1,"message":"376","line":4,"column":10,"nodeType":"358","messageId":"359","endLine":4,"endColumn":17},{"ruleId":"356","severity":1,"message":"377","line":5,"column":10,"nodeType":"358","messageId":"359","endLine":5,"endColumn":21},{"ruleId":"356","severity":1,"message":"378","line":6,"column":10,"nodeType":"358","messageId":"359","endLine":6,"endColumn":25},{"ruleId":"356","severity":1,"message":"379","line":6,"column":27,"nodeType":"358","messageId":"359","endLine":6,"endColumn":39},{"ruleId":"356","severity":1,"message":"380","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":25},{"ruleId":"356","severity":1,"message":"381","line":7,"column":27,"nodeType":"358","messageId":"359","endLine":7,"endColumn":45},{"ruleId":"356","severity":1,"message":"382","line":8,"column":25,"nodeType":"358","messageId":"359","endLine":8,"endColumn":29},{"ruleId":"356","severity":1,"message":"383","line":13,"column":8,"nodeType":"358","messageId":"359","endLine":13,"endColumn":13},{"ruleId":"356","severity":1,"message":"384","line":11,"column":8,"nodeType":"358","messageId":"359","endLine":11,"endColumn":15},{"ruleId":"356","severity":1,"message":"385","line":16,"column":9,"nodeType":"358","messageId":"359","endLine":16,"endColumn":22},{"ruleId":"356","severity":1,"message":"386","line":8,"column":8,"nodeType":"358","messageId":"359","endLine":8,"endColumn":14},{"ruleId":"356","severity":1,"message":"387","line":6,"column":10,"nodeType":"358","messageId":"359","endLine":6,"endColumn":19},{"ruleId":"356","severity":1,"message":"388","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":20},{"ruleId":"356","severity":1,"message":"389","line":10,"column":8,"nodeType":"358","messageId":"359","endLine":10,"endColumn":20},{"ruleId":"356","severity":1,"message":"390","line":15,"column":10,"nodeType":"358","messageId":"359","endLine":15,"endColumn":18},{"ruleId":"356","severity":1,"message":"391","line":16,"column":10,"nodeType":"358","messageId":"359","endLine":16,"endColumn":18},{"ruleId":"356","severity":1,"message":"392","line":17,"column":11,"nodeType":"358","messageId":"359","endLine":17,"endColumn":16},{"ruleId":"356","severity":1,"message":"393","line":17,"column":18,"nodeType":"358","messageId":"359","endLine":17,"endColumn":24},{"ruleId":"356","severity":1,"message":"394","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"386","line":8,"column":8,"nodeType":"358","messageId":"359","endLine":8,"endColumn":14},{"ruleId":"356","severity":1,"message":"394","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"364","line":1,"column":39,"nodeType":"358","messageId":"359","endLine":1,"endColumn":48},{"ruleId":"356","severity":1,"message":"395","line":6,"column":10,"nodeType":"358","messageId":"359","endLine":6,"endColumn":23},{"ruleId":"356","severity":1,"message":"374","line":3,"column":10,"nodeType":"358","messageId":"359","endLine":3,"endColumn":25},{"ruleId":"356","severity":1,"message":"392","line":8,"column":11,"nodeType":"358","messageId":"359","endLine":8,"endColumn":16},{"ruleId":"356","severity":1,"message":"393","line":8,"column":18,"nodeType":"358","messageId":"359","endLine":8,"endColumn":24},{"ruleId":"356","severity":1,"message":"396","line":8,"column":26,"nodeType":"358","messageId":"359","endLine":8,"endColumn":35},{"ruleId":"356","severity":1,"message":"397","line":8,"column":37,"nodeType":"358","messageId":"359","endLine":8,"endColumn":47},{"ruleId":"398","severity":1,"message":"399","line":145,"column":41,"nodeType":"400","messageId":"401","endLine":145,"endColumn":43},{"ruleId":"368","severity":1,"message":"402","line":32,"column":13,"nodeType":"400","endLine":35,"endColumn":4},{"ruleId":"368","severity":1,"message":"403","line":35,"column":6,"nodeType":"370","endLine":35,"endColumn":8,"suggestions":"404"},{"ruleId":"356","severity":1,"message":"364","line":2,"column":10,"nodeType":"358","messageId":"359","endLine":2,"endColumn":19},{"ruleId":"356","severity":1,"message":"394","line":2,"column":21,"nodeType":"358","messageId":"359","endLine":2,"endColumn":29},{"ruleId":"356","severity":1,"message":"405","line":6,"column":3,"nodeType":"358","messageId":"359","endLine":6,"endColumn":15},{"ruleId":"356","severity":1,"message":"406","line":7,"column":3,"nodeType":"358","messageId":"359","endLine":7,"endColumn":14},{"ruleId":"356","severity":1,"message":"374","line":13,"column":10,"nodeType":"358","messageId":"359","endLine":13,"endColumn":25},{"ruleId":"398","severity":1,"message":"399","line":40,"column":34,"nodeType":"400","messageId":"401","endLine":40,"endColumn":36},{"ruleId":"356","severity":1,"message":"364","line":1,"column":27,"nodeType":"358","messageId":"359","endLine":1,"endColumn":36},{"ruleId":"356","severity":1,"message":"394","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"395","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":23},{"ruleId":"356","severity":1,"message":"394","line":2,"column":10,"nodeType":"358","messageId":"359","endLine":2,"endColumn":18},{"ruleId":"356","severity":1,"message":"394","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"407","line":4,"column":10,"nodeType":"358","messageId":"359","endLine":4,"endColumn":25},{"ruleId":"356","severity":1,"message":"408","line":4,"column":27,"nodeType":"358","messageId":"359","endLine":4,"endColumn":36},{"ruleId":"356","severity":1,"message":"409","line":15,"column":5,"nodeType":"358","messageId":"359","endLine":15,"endColumn":18},{"ruleId":"410","severity":1,"message":"411","line":24,"column":7,"nodeType":"412","endLine":24,"endColumn":27},{"ruleId":"356","severity":1,"message":"413","line":4,"column":8,"nodeType":"358","messageId":"359","endLine":4,"endColumn":12},{"ruleId":"356","severity":1,"message":"414","line":11,"column":21,"nodeType":"358","messageId":"359","endLine":11,"endColumn":33},{"ruleId":"356","severity":1,"message":"366","line":2,"column":10,"nodeType":"358","messageId":"359","endLine":2,"endColumn":15},{"ruleId":"356","severity":1,"message":"367","line":2,"column":17,"nodeType":"358","messageId":"359","endLine":2,"endColumn":22},{"ruleId":"415","severity":1,"message":"416","line":293,"column":17,"nodeType":"417","messageId":"418","endLine":293,"endColumn":19},{"ruleId":"415","severity":1,"message":"416","line":296,"column":17,"nodeType":"417","messageId":"418","endLine":296,"endColumn":19},{"ruleId":"415","severity":1,"message":"416","line":299,"column":17,"nodeType":"417","messageId":"418","endLine":299,"endColumn":19},{"ruleId":"415","severity":1,"message":"416","line":302,"column":17,"nodeType":"417","messageId":"418","endLine":302,"endColumn":19},{"ruleId":"415","severity":1,"message":"419","line":320,"column":14,"nodeType":"417","messageId":"418","endLine":320,"endColumn":16},{"ruleId":"415","severity":1,"message":"419","line":329,"column":15,"nodeType":"417","messageId":"418","endLine":329,"endColumn":17},{"ruleId":"415","severity":1,"message":"419","line":344,"column":17,"nodeType":"417","messageId":"418","endLine":344,"endColumn":19},{"ruleId":"420","severity":1,"message":"421","line":345,"column":16,"nodeType":"358","messageId":"422","endLine":345,"endColumn":17},{"ruleId":"415","severity":1,"message":"419","line":355,"column":15,"nodeType":"417","messageId":"418","endLine":355,"endColumn":17},{"ruleId":"415","severity":1,"message":"419","line":369,"column":14,"nodeType":"417","messageId":"418","endLine":369,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":370,"column":16,"nodeType":"358","messageId":"422","endLine":370,"endColumn":17},{"ruleId":"415","severity":1,"message":"419","line":378,"column":15,"nodeType":"417","messageId":"418","endLine":378,"endColumn":17},{"ruleId":"420","severity":1,"message":"423","line":400,"column":18,"nodeType":"358","messageId":"422","endLine":400,"endColumn":19},{"ruleId":"415","severity":1,"message":"416","line":401,"column":28,"nodeType":"417","messageId":"418","endLine":401,"endColumn":30},{"ruleId":"356","severity":1,"message":"424","line":406,"column":20,"nodeType":"358","messageId":"359","endLine":406,"endColumn":24},{"ruleId":"420","severity":1,"message":"423","line":407,"column":22,"nodeType":"358","messageId":"422","endLine":407,"endColumn":23},{"ruleId":"415","severity":1,"message":"419","line":433,"column":73,"nodeType":"417","messageId":"418","endLine":433,"endColumn":75},{"ruleId":"415","severity":1,"message":"419","line":434,"column":73,"nodeType":"417","messageId":"418","endLine":434,"endColumn":75},{"ruleId":"415","severity":1,"message":"419","line":435,"column":73,"nodeType":"417","messageId":"418","endLine":435,"endColumn":75},{"ruleId":"415","severity":1,"message":"419","line":436,"column":73,"nodeType":"417","messageId":"418","endLine":436,"endColumn":75},{"ruleId":"410","severity":1,"message":"411","line":13,"column":7,"nodeType":"412","endLine":13,"endColumn":26},{"ruleId":"410","severity":1,"message":"411","line":13,"column":7,"nodeType":"412","endLine":13,"endColumn":26},{"ruleId":"356","severity":1,"message":"425","line":8,"column":10,"nodeType":"358","messageId":"359","endLine":8,"endColumn":21},{"ruleId":"426","severity":1,"message":"427","line":37,"column":21,"nodeType":"358","messageId":"428","endLine":37,"endColumn":47},{"ruleId":"356","severity":1,"message":"429","line":2,"column":8,"nodeType":"358","messageId":"359","endLine":2,"endColumn":10},{"ruleId":"356","severity":1,"message":"430","line":3,"column":8,"nodeType":"358","messageId":"359","endLine":3,"endColumn":12},{"ruleId":"356","severity":1,"message":"431","line":92,"column":17,"nodeType":"358","messageId":"359","endLine":92,"endColumn":25},{"ruleId":"356","severity":1,"message":"432","line":95,"column":10,"nodeType":"358","messageId":"359","endLine":95,"endColumn":18},{"ruleId":"356","severity":1,"message":"433","line":101,"column":9,"nodeType":"358","messageId":"359","endLine":101,"endColumn":17},{"ruleId":"368","severity":1,"message":"434","line":337,"column":6,"nodeType":"370","endLine":337,"endColumn":8,"suggestions":"435"},"no-unused-vars","'StateProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["436"],"no-negated-in-lhs",["437"],"'useEffect' is defined but never used.","'directions' is defined but never used.","'initX' is defined but never used.","'initY' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.current_project'. Either include it or remove the dependency array.","ArrayExpression",["438"],"'AiFillHome' is defined but never used.","'AiFillMessage' is defined but never used.","'FaClipboardList' is defined but never used.","'FaSpotify' is defined but never used.","'MdGroup' is defined but never used.","'GrLineChart' is defined but never used.","'BsFillAlarmFill' is defined but never used.","'BsKanbanFill' is defined but never used.","'RiDashboardFill' is defined but never used.","'RiLogoutCircleFill' is defined but never used.","'Link' is defined but never used.","'Login' is defined but never used.","'MainNav' is defined but never used.","'gifSearchOpen' is assigned a value but never used.","'Button' is defined but never used.","'FaUserAlt' is defined but never used.","'FcPieChart' is defined but never used.","'UserInfoCard' is defined but never used.","'projects' is assigned a value but never used.","'meetings' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","'useState' is defined but never used.","'AiFillWarning' is defined but never used.","'topMargin' is assigned a value but never used.","'leftMargin' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["439"],"'ANNOUNCEMENT' is defined but never used.","'SEND_DIRECT' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'currentStatus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'User' is defined but never used.","'setStartDate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'i' is already defined.","redeclared","'x' is already defined.","'ySrc' is assigned a value but never used.","'useSelector' is defined but never used.","react/style-prop-object","Style prop value must be an object","stylePropNotObject","'io' is defined but never used.","'Peer' is defined but never used.","'setPeers' is assigned a value but never used.","'isActive' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMediaStream'. Either include it or remove the dependency array.",["440"],"no-global-assign","no-unsafe-negation",{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},"Update the dependencies array to be: [state.current_project]",{"range":"447","text":"448"},"Update the dependencies array to be: [id]",{"range":"449","text":"450"},"Update the dependencies array to be: [getMediaStream]",{"range":"451","text":"452"},[1115,1117],"[state.current_project]",[1082,1084],"[id]",[9590,9592],"[getMediaStream]"]