{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\components\\\\tasks\\\\TaskRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { stateContext } from \"../providers/StateProvider\";\nimport { IoMdWarning } from \"react-icons/io\";\nimport \"./tasks.css\";\nimport \"../rpgui.css\";\nimport \"nes.css/css/nes.min.css\";\nimport classNames from \"classnames\";\nimport EditTaskForm from \"./EditTaskForm\";\nimport getTaskTeams from \"../../helpers/getTaskTeams\";\nimport DeleteTaskForm from \"./DeleteTaskForm\";\nimport TaskItemInfo from './TaskItemInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskRow(props) {\n  _s();\n\n  const {\n    state,\n    editTask,\n    updateTaskStatus,\n    updateTaskPriority,\n    deleteTask\n  } = useContext(stateContext);\n\n  const formatDate = date => {\n    return date.split(\"T\")[0];\n  };\n\n  const {\n    id,\n    name,\n    description,\n    status,\n    priority,\n    startDate,\n    endDate\n  } = props;\n  const taskUsersListArray = getTaskTeams(state, id);\n  const priorityClass = classNames(\"priority\", {\n    low: priority === 0\n  }, {\n    medium: priority === 1\n  }, {\n    high: priority === 2\n  });\n  const statusClass = classNames(\"status\", {\n    \"to-do\": props.status === 0\n  }, {\n    \"progress-status\": props.status === 1\n  }, {\n    \"is-done\": props.status === 2\n  }, {\n    \"is-late\": props.status === 3\n  });\n\n  const statusToText = status => {\n    if (status === 0) return \"Todo\";\n    if (status === 1) return \"In Progress\";\n    if (status === 2) return \"Done\";\n    if (status === 3) return \"Late\";\n  };\n\n  const toggleStatus = status => {\n    if (status === 0) return 1;\n    if (status === 1) return 2;\n    if (status === 2) return 3;\n    if (status === 3) return 0;\n  };\n\n  const togglePriority = priority => {\n    if (priority === 0) return 1;\n    if (priority === 1) return 2;\n    if (priority === 2) return 0;\n  };\n\n  const newStatus = toggleStatus(status);\n  const newPriority = togglePriority(priority);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-icons\",\n        children: [name, state.current_project !== 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-delete\",\n          children: [/*#__PURE__*/_jsxDEV(EditTaskForm, {\n            state: state,\n            id: id,\n            name: name,\n            description: description,\n            priority: priority,\n            startDate: startDate,\n            endDate: endDate,\n            onSave: editTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DeleteTaskForm, {\n            id: id,\n            onConfirm: deleteTask,\n            className: \"delete-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), taskUsersListArray.length <= 4 ? /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"task-user-container\",\n      children: taskUsersListArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(TaskItemInfo, {\n        id: id,\n        users: taskUsersListArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 109\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 105\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: statusClass,\n      onClick: () => updateTaskStatus(newStatus, id),\n      children: statusToText(status)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: priorityClass,\n      onClick: () => updateTaskPriority(newPriority, id),\n      children: /*#__PURE__*/_jsxDEV(IoMdWarning, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formatDate(startDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: formatDate(endDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskRow, \"djmahQIH+MMX0SIFizwQ8beSq3o=\");\n\n_c = TaskRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskRow\");","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/components/tasks/TaskRow.js"],"names":["React","useContext","stateContext","IoMdWarning","classNames","EditTaskForm","getTaskTeams","DeleteTaskForm","TaskItemInfo","TaskRow","props","state","editTask","updateTaskStatus","updateTaskPriority","deleteTask","formatDate","date","split","id","name","description","status","priority","startDate","endDate","taskUsersListArray","priorityClass","low","medium","high","statusClass","statusToText","toggleStatus","togglePriority","newStatus","newPriority","current_project","length"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { stateContext } from \"../providers/StateProvider\";\r\nimport { IoMdWarning } from \"react-icons/io\";\r\nimport \"./tasks.css\";\r\nimport \"../rpgui.css\";\r\nimport \"nes.css/css/nes.min.css\";\r\nimport classNames from \"classnames\";\r\nimport EditTaskForm from \"./EditTaskForm\";\r\nimport getTaskTeams from \"../../helpers/getTaskTeams\";\r\nimport DeleteTaskForm from \"./DeleteTaskForm\";\r\nimport TaskItemInfo from './TaskItemInfo';\r\n\r\nexport default function TaskRow(props) {\r\n  const { state, editTask, updateTaskStatus, updateTaskPriority, deleteTask } =\r\n    useContext(stateContext);\r\n\r\n  const formatDate = (date) => {\r\n    return date.split(\"T\")[0];\r\n  };\r\n\r\n  const { id, name, description, status, priority, startDate, endDate } = props;\r\n\r\n  const taskUsersListArray = getTaskTeams(state, id);\r\n\r\n  const priorityClass = classNames(\r\n    \"priority\",\r\n    { low: priority === 0 },\r\n    { medium: priority === 1 },\r\n    { high: priority === 2 }\r\n  );\r\n\r\n  const statusClass = classNames(\r\n    \"status\",\r\n    { \"to-do\": props.status === 0 },\r\n    { \"progress-status\": props.status === 1 },\r\n    { \"is-done\": props.status === 2 },\r\n    { \"is-late\": props.status === 3 }\r\n  );\r\n\r\n  const statusToText = (status) => {\r\n    if (status === 0) return \"Todo\";\r\n    if (status === 1) return \"In Progress\";\r\n    if (status === 2) return \"Done\";\r\n    if (status === 3) return \"Late\";\r\n  };\r\n\r\n  const toggleStatus = (status) => {\r\n    if (status === 0) return 1;\r\n    if (status === 1) return 2;\r\n    if (status === 2) return 3;\r\n    if (status === 3) return 0;\r\n  };\r\n\r\n  const togglePriority = (priority) => {\r\n    if (priority === 0) return 1;\r\n    if (priority === 1) return 2;\r\n    if (priority === 2) return 0;\r\n  };\r\n\r\n  const newStatus = toggleStatus(status);\r\n  const newPriority = togglePriority(priority);\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <div className=\"name-icons\">\r\n          {name}\r\n          {state.current_project !== 1 && (\r\n            <div className=\"edit-delete\">\r\n              <EditTaskForm\r\n                state={state}\r\n                id={id}\r\n                name={name}\r\n                description={description}\r\n                priority={priority}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                onSave={editTask}\r\n              />\r\n              <DeleteTaskForm\r\n                id={id}\r\n                onConfirm={deleteTask}\r\n                className=\"delete-icon\"\r\n              ></DeleteTaskForm>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </td>\r\n      {taskUsersListArray.length <= 4 ? <td className=\"task-user-container\">{taskUsersListArray}</td> : <td><TaskItemInfo id={id} users={taskUsersListArray}></TaskItemInfo></td>}\r\n      <td\r\n        className={statusClass}\r\n        onClick={() => updateTaskStatus(newStatus, id)}\r\n      >\r\n        {statusToText(status)}\r\n      </td>\r\n      <td\r\n        className={priorityClass}\r\n        onClick={() => updateTaskPriority(newPriority, id)}\r\n      >\r\n        <IoMdWarning className=\"icon\" />\r\n      </td>\r\n      <td>{formatDate(startDate)}</td>\r\n      <td>{formatDate(endDate)}</td>\r\n    </tr>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}