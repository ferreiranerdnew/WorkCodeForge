{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\components\\\\game\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport './index.css';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TetrisField(props) {\n  _s();\n\n  const {\n    width\n  } = useWindowDimensions();\n  var rows = [];\n  props.field.forEach(function (row) {\n    const cols = row.map(c => /*#__PURE__*/_jsxDEV(\"td\", {\n      className: ' FancyBorder tdcol-' + c,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this));\n    rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: cols\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ' AlignCenter',\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: ' WhiteText PlayField',\n      style: {\n        width: `${width - 130}px`\n      },\n      children: [' ', \"Level:\", props.level, \" Score:\", props.score, ' ', props.gameOver && `  Good game, but it's over. Get back to work!  `]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TetrisField, \"ryR7mLr8YBgJ6dEcE7angTe4Nyw=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c = TetrisField;\n\nclass Tetris extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLeftClick = this.handleLeftClick.bind(this);\n    this.handleRightClick = this.handleRightClick.bind(this);\n    this.handleFlipClick = this.handleFlipClick.bind(this);\n    this.handleDownClick = this.handleDownClick.bind(this);\n    this.handleNewGameClick = this.handleNewGameClick.bind(this);\n    this.handlePauseClick = this.handlePauseClick.bind(this);\n    var field = [];\n\n    for (var y = 0; y < props.ySize; y++) {\n      var row = [];\n\n      for (var x = 0; x < props.xSize; x++) {\n        row.push(0);\n      }\n\n      field.push(row);\n    }\n\n    var xStart = Math.floor(parseInt(props.xSize) / 2);\n    this.state = {\n      activeTileX: xStart,\n      activeTileY: 1,\n      activeTile: 1,\n      tileTurn: 0,\n      score: 0,\n      level: 1,\n      tileCount: 0,\n      gameOver: false,\n      pause: false,\n      field: field,\n      tiles: [// 7 tiles each tile has 4 possible turnstates which are x/y offsets\n      [[[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0], [0, 0]]], // 1 single square (not part of the game)\n      [[[0, 0], [1, 0], [0, 1], [1, 1]], [[0, 0], [1, 0], [0, 1], [1, 1]], [[0, 0], [1, 0], [0, 1], [1, 1]], [[0, 0], [1, 0], [0, 1], [1, 1]]], // the 4-block\n      [[[0, -1], [0, 0], [0, 1], [0, 2]], [[-1, 0], [0, 0], [1, 0], [2, 0]], [[0, -1], [0, 0], [0, 1], [0, 2]], [[-1, 0], [0, 0], [1, 0], [2, 0]]], // the long one\n      [[[0, 0], [-1, 0], [1, 0], [0, -1]], [[0, 0], [1, 0], [0, 1], [0, -1]], [[0, 0], [-1, 0], [1, 0], [0, 1]], [[0, 0], [-1, 0], [0, 1], [0, -1]]], // the T\n      [[[0, 0], [-1, 0], [1, 0], [-1, -1]], [[0, 0], [0, 1], [0, -1], [1, -1]], [[0, 0], [1, 0], [-1, 0], [1, 1]], [[0, 0], [0, 1], [0, -1], [-1, 1]]], // the inverse L\n      [[[0, 0], [1, 0], [-1, 0], [1, -1]], [[0, 0], [0, 1], [0, -1], [1, 1]], [[0, 0], [1, 0], [-1, 0], [-1, 1]], [[0, 0], [0, 1], [0, -1], [-1, -1]]], // the L\n      [[[0, 0], [1, 0], [0, -1], [-1, -1]], [[0, 0], [1, 0], [0, 1], [1, -1]], [[0, 0], [1, 0], [0, -1], [-1, -1]], [[0, 0], [1, 0], [0, 1], [1, -1]]], // the Z\n      [[[0, 0], [-1, 0], [0, -1], [1, -1]], [[0, 0], [0, -1], [1, 0], [1, 1]], [[0, 0], [-1, 0], [0, -1], [1, -1]], [[0, 0], [0, -1], [1, 0], [1, 1]]] // the inverse Z\n      ]\n    };\n  }\n\n  componentDidMount() {\n    var timerId;\n    timerId = setInterval(() => this.updateField('down'), 1000 - (this.state.level * 10 > 600 ? 600 : this.state.level * 10));\n    this.setState({\n      timerId: timerId\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId);\n  }\n\n  updateField(command) {\n    if (this.state.gameOver || this.state.pause) {\n      return;\n    }\n\n    var xAdd = 0;\n    var yAdd = 0;\n    var turnAdd = 0;\n    var tile = this.state.activeTile;\n\n    if (command == 'left') {\n      xAdd = -1;\n    }\n\n    if (command == 'right') {\n      xAdd = 1;\n    }\n\n    if (command == 'turn') {\n      turnAdd = 1;\n    }\n\n    if (command == 'down') {\n      yAdd = 1;\n    }\n\n    var field = this.state.field;\n    var x = this.state.activeTileX;\n    var y = this.state.activeTileY;\n    var turn = this.state.tileTurn;\n    const tiles = this.state.tiles; // remove actual tile from field to test for new insert position\n\n    field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = 0;\n    field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = 0;\n    field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = 0;\n    field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = 0; // test if the move can be executed on actual field\n\n    var xAddValid = true;\n\n    if (xAdd != 0) {\n      for (var i = 0; i <= 3; i++) {\n        if (x + xAdd + tiles[tile][turn][i][0] >= 0 && x + xAdd + tiles[tile][turn][i][0] < this.props.xSize) {\n          if (field[y + tiles[tile][turn][i][1]][x + xAdd + tiles[tile][turn][i][0]] != 0) {\n            xAddValid = false;\n          }\n        } else {\n          xAddValid = false;\n        }\n      }\n    }\n\n    if (xAddValid) {\n      x += xAdd;\n    } //try the Turn\n\n\n    var newTurn = turn + turnAdd > 3 ? 0 : turn + turnAdd;\n    var turnValid = true;\n\n    if (turnAdd != 0) {\n      for (var i = 0; i <= 3; i++) {\n        if (x + tiles[tile][newTurn][i][0] >= 0 && x + tiles[tile][newTurn][i][0] < this.props.xSize && y + tiles[tile][newTurn][i][1] >= 0 && y + tiles[tile][newTurn][i][1] < this.props.ySize) {\n          if (field[y + tiles[tile][newTurn][i][1]][x + tiles[tile][newTurn][i][0]] != 0) {\n            turnValid = false;\n          }\n        } else {\n          turnValid = false;\n        }\n      }\n    }\n\n    if (turnValid) {\n      turn = newTurn;\n    } // try the y-Add.\n\n\n    var yAddValid = true;\n\n    if (yAdd != 0) {\n      for (var i = 0; i <= 3; i++) {\n        if (y + yAdd + tiles[tile][turn][i][1] >= 0 && y + yAdd + tiles[tile][turn][i][1] < this.props.ySize) {\n          if (field[y + yAdd + tiles[tile][turn][i][1]][x + tiles[tile][turn][i][0]] != 0) {\n            yAddValid = false;\n          }\n        } else {\n          yAddValid = false;\n        }\n      }\n    }\n\n    if (yAddValid) {\n      y += yAdd;\n    } // render the tile at new position\n\n\n    field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = tile;\n    field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = tile;\n    field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = tile;\n    field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = tile;\n\n    if (!yAddValid) {\n      // Moving Down was not possible -> remove completed Lines, add Score. find nextr tile and check for Game Over ...\n      for (var yr = this.props.ySize - 1; yr >= 0; yr--) {\n        var lineComplete = true;\n\n        for (var x = 0; x < this.props.xSize; x++) {\n          if (field[yr][x] == 0) {\n            lineComplete = false;\n          }\n        }\n\n        if (lineComplete) {\n          for (var ySrc = yr; yr > 0; yr--) {\n            for (var x = 0; x < this.props.xSize; x++) {\n              field[yr][x] = field[yr - 1][x];\n            }\n          }\n\n          yr = this.props.ySize; // check the array again after line removal\n        }\n      }\n\n      this.setState(prev => ({\n        score: prev.score + 1 * prev.level,\n        tileCount: prev.tileCount + 1,\n        level: 1 + Math.floor(prev.tileCount / 10)\n      }));\n      var timerId;\n      clearInterval(this.state.timerId);\n      timerId = setInterval(() => this.updateField('down'), 1000 - (this.state.level * 10 > 600 ? 600 : this.state.level * 10));\n      this.setState({\n        timerId: timerId\n      }); // New Tile:\n\n      tile = Math.floor(Math.random() * 7 + 1);\n      x = parseInt(this.props.xSize) / 2;\n      y = 1;\n      turn = 0; // Test for Game Over, can the new tile placed in field?\n\n      if (field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] != 0 || field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] != 0 || field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] != 0 || field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] != 0) {\n        this.setState({\n          gameOver: true\n        });\n      } else {\n        // Render New Tile and go on\n        field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = tile;\n        field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = tile;\n        field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = tile;\n        field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = tile;\n      }\n    }\n\n    this.setState(prev => ({\n      field: field,\n      activeTileX: x,\n      activeTileY: y,\n      tileTurn: turn,\n      activeTile: tile\n    }));\n  }\n\n  handleLeftClick() {\n    this.updateField('left');\n  }\n\n  handleRightClick() {\n    this.updateField('right');\n  }\n\n  handleFlipClick() {\n    this.updateField('turn');\n  }\n\n  handleDownClick() {\n    this.updateField('down');\n  }\n\n  handlePauseClick() {\n    this.setState(prev => ({\n      pause: !prev.pause\n    }));\n  }\n\n  handleNewGameClick() {\n    var field = [];\n\n    for (var y = 0; y < this.props.ySize; y++) {\n      var row = [];\n\n      for (var x = 0; x < this.props.xSize; x++) {\n        row.push(0);\n      }\n\n      field.push(row);\n    }\n\n    var xStart = Math.floor(parseInt(this.props.xSize) / 2);\n    this.setState(prev => ({\n      activeTileX: xStart,\n      activeTileY: 1,\n      activeTile: 2,\n      tileTurn: 0,\n      score: 0,\n      level: 1,\n      tileCount: 0,\n      gameOver: false,\n      field: field\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [' ', /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [' ', /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(TetrisField, {\n              field: this.state.field,\n              gameOver: this.state.gameOver,\n              score: this.state.score,\n              level: this.state.level,\n              turn: this.state.tileTurn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: 'ButtonAlignCenter',\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleLeftClick,\n              children: \"Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleFlipClick,\n              children: \"Flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleRightClick,\n              children: \"Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: 'ButtonAlignCenter',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleDownClick,\n              children: \"Down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleNewGameClick,\n              children: \"New Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handlePauseClick,\n              children: \"Pause\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction TetrisComp() {\n  _s2();\n\n  const {\n    width,\n    height\n  } = useWindowDimensions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: `${width * 0.9}px`,\n      height: `${height * 0.9}px`,\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Tetris, {\n      xSize: \"14\",\n      ySize: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TetrisComp, \"hZg34DXQMoj2f5F9O/uvYVrpq/c=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c2 = TetrisComp;\nexport default TetrisComp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TetrisField\");\n$RefreshReg$(_c2, \"TetrisComp\");","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/components/game/index.js"],"names":["React","useWindowDimensions","TetrisField","props","width","rows","field","forEach","row","cols","map","c","push","level","score","gameOver","children","Tetris","Component","constructor","handleLeftClick","bind","handleRightClick","handleFlipClick","handleDownClick","handleNewGameClick","handlePauseClick","y","ySize","x","xSize","xStart","Math","floor","parseInt","state","activeTileX","activeTileY","activeTile","tileTurn","tileCount","pause","tiles","componentDidMount","timerId","setInterval","updateField","setState","componentWillUnmount","clearInterval","command","xAdd","yAdd","turnAdd","tile","turn","xAddValid","i","newTurn","turnValid","yAddValid","yr","lineComplete","ySrc","prev","random","render","TetrisComp","height","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\n\r\nfunction TetrisField(props) {\r\n  const { width } = useWindowDimensions();\r\n  var rows = [];\r\n  props.field.forEach(function (row) {\r\n    const cols = row.map((c) => (\r\n      <td className={' FancyBorder tdcol-' + c}> </td>\r\n    ));\r\n    rows.push(<tr>{cols}</tr>);\r\n  });\r\n  return (\r\n    <div className={' AlignCenter'}>\r\n      <h3\r\n        className={' WhiteText PlayField'}\r\n        style={{ width: `${width - 130}px` }}>\r\n        {' '}\r\n        Level:{props.level} Score:{props.score}{' '}\r\n        {props.gameOver && `  Good game, but it's over. Get back to work!  `}\r\n      </h3>\r\n      <table>\r\n        <tr>{rows}</tr>\r\n      </table>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Tetris extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLeftClick = this.handleLeftClick.bind(this);\r\n    this.handleRightClick = this.handleRightClick.bind(this);\r\n    this.handleFlipClick = this.handleFlipClick.bind(this);\r\n    this.handleDownClick = this.handleDownClick.bind(this);\r\n    this.handleNewGameClick = this.handleNewGameClick.bind(this);\r\n    this.handlePauseClick = this.handlePauseClick.bind(this);\r\n    var field = [];\r\n    for (var y = 0; y < props.ySize; y++) {\r\n      var row = [];\r\n      for (var x = 0; x < props.xSize; x++) {\r\n        row.push(0);\r\n      }\r\n      field.push(row);\r\n    }\r\n    var xStart = Math.floor(parseInt(props.xSize) / 2);\r\n    this.state = {\r\n      activeTileX: xStart,\r\n      activeTileY: 1,\r\n      activeTile: 1,\r\n      tileTurn: 0,\r\n      score: 0,\r\n      level: 1,\r\n      tileCount: 0,\r\n      gameOver: false,\r\n      pause: false,\r\n      field: field,\r\n      tiles: [\r\n        // 7 tiles each tile has 4 possible turnstates which are x/y offsets\r\n        [\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n            [0, 0],\r\n          ],\r\n        ], // 1 single square (not part of the game)\r\n        [\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, 1],\r\n          ],\r\n        ], // the 4-block\r\n        [\r\n          [\r\n            [0, -1],\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n          ],\r\n          [\r\n            [-1, 0],\r\n            [0, 0],\r\n            [1, 0],\r\n            [2, 0],\r\n          ],\r\n          [\r\n            [0, -1],\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n          ],\r\n          [\r\n            [-1, 0],\r\n            [0, 0],\r\n            [1, 0],\r\n            [2, 0],\r\n          ],\r\n        ], // the long one\r\n        [\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n          ],\r\n        ], // the T\r\n        [\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [1, 0],\r\n            [-1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [-1, 0],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [-1, 1],\r\n          ],\r\n        ], // the inverse L\r\n        [\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [-1, 0],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [-1, 0],\r\n            [-1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, -1],\r\n            [-1, -1],\r\n          ],\r\n        ], // the L\r\n        [\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [-1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, -1],\r\n            [-1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [1, 0],\r\n            [0, 1],\r\n            [1, -1],\r\n          ],\r\n        ], // the Z\r\n        [\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [0, -1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, -1],\r\n            [1, 0],\r\n            [1, 1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [0, -1],\r\n            [1, -1],\r\n          ],\r\n          [\r\n            [0, 0],\r\n            [0, -1],\r\n            [1, 0],\r\n            [1, 1],\r\n          ],\r\n        ], // the inverse Z\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    var timerId;\r\n    timerId = setInterval(\r\n      () => this.updateField('down'),\r\n      1000 - (this.state.level * 10 > 600 ? 600 : this.state.level * 10)\r\n    );\r\n    this.setState({ timerId: timerId });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.timerId);\r\n  }\r\n  updateField(command) {\r\n    if (this.state.gameOver || this.state.pause) {\r\n      return;\r\n    }\r\n    var xAdd = 0;\r\n    var yAdd = 0;\r\n    var turnAdd = 0;\r\n    var tile = this.state.activeTile;\r\n\r\n    if (command == 'left') {\r\n      xAdd = -1;\r\n    }\r\n    if (command == 'right') {\r\n      xAdd = 1;\r\n    }\r\n    if (command == 'turn') {\r\n      turnAdd = 1;\r\n    }\r\n    if (command == 'down') {\r\n      yAdd = 1;\r\n    }\r\n\r\n    var field = this.state.field;\r\n    var x = this.state.activeTileX;\r\n    var y = this.state.activeTileY;\r\n    var turn = this.state.tileTurn;\r\n    const tiles = this.state.tiles;\r\n\r\n    // remove actual tile from field to test for new insert position\r\n    field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = 0;\r\n    field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = 0;\r\n    field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = 0;\r\n    field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = 0;\r\n\r\n    // test if the move can be executed on actual field\r\n    var xAddValid = true;\r\n    if (xAdd != 0) {\r\n      for (var i = 0; i <= 3; i++) {\r\n        if (\r\n          x + xAdd + tiles[tile][turn][i][0] >= 0 &&\r\n          x + xAdd + tiles[tile][turn][i][0] < this.props.xSize\r\n        ) {\r\n          if (\r\n            field[y + tiles[tile][turn][i][1]][\r\n              x + xAdd + tiles[tile][turn][i][0]\r\n            ] != 0\r\n          ) {\r\n            xAddValid = false;\r\n          }\r\n        } else {\r\n          xAddValid = false;\r\n        }\r\n      }\r\n    }\r\n    if (xAddValid) {\r\n      x += xAdd;\r\n    }\r\n    //try the Turn\r\n    var newTurn = turn + turnAdd > 3 ? 0 : turn + turnAdd;\r\n    var turnValid = true;\r\n    if (turnAdd != 0) {\r\n      for (var i = 0; i <= 3; i++) {\r\n        if (\r\n          x + tiles[tile][newTurn][i][0] >= 0 &&\r\n          x + tiles[tile][newTurn][i][0] < this.props.xSize &&\r\n          y + tiles[tile][newTurn][i][1] >= 0 &&\r\n          y + tiles[tile][newTurn][i][1] < this.props.ySize\r\n        ) {\r\n          if (\r\n            field[y + tiles[tile][newTurn][i][1]][\r\n              x + tiles[tile][newTurn][i][0]\r\n            ] != 0\r\n          ) {\r\n            turnValid = false;\r\n          }\r\n        } else {\r\n          turnValid = false;\r\n        }\r\n      }\r\n    }\r\n    if (turnValid) {\r\n      turn = newTurn;\r\n    }\r\n    // try the y-Add.\r\n    var yAddValid = true;\r\n    if (yAdd != 0) {\r\n      for (var i = 0; i <= 3; i++) {\r\n        if (\r\n          y + yAdd + tiles[tile][turn][i][1] >= 0 &&\r\n          y + yAdd + tiles[tile][turn][i][1] < this.props.ySize\r\n        ) {\r\n          if (\r\n            field[y + yAdd + tiles[tile][turn][i][1]][\r\n              x + tiles[tile][turn][i][0]\r\n            ] != 0\r\n          ) {\r\n            yAddValid = false;\r\n          }\r\n        } else {\r\n          yAddValid = false;\r\n        }\r\n      }\r\n    }\r\n    if (yAddValid) {\r\n      y += yAdd;\r\n    }\r\n    // render the tile at new position\r\n    field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = tile;\r\n    field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = tile;\r\n    field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = tile;\r\n    field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = tile;\r\n\r\n    if (!yAddValid) {\r\n      // Moving Down was not possible -> remove completed Lines, add Score. find nextr tile and check for Game Over ...\r\n      for (var yr = this.props.ySize - 1; yr >= 0; yr--) {\r\n        var lineComplete = true;\r\n        for (var x = 0; x < this.props.xSize; x++) {\r\n          if (field[yr][x] == 0) {\r\n            lineComplete = false;\r\n          }\r\n        }\r\n        if (lineComplete) {\r\n          for (var ySrc = yr; yr > 0; yr--) {\r\n            for (var x = 0; x < this.props.xSize; x++) {\r\n              field[yr][x] = field[yr - 1][x];\r\n            }\r\n          }\r\n          yr = this.props.ySize; // check the array again after line removal\r\n        }\r\n      }\r\n      this.setState((prev) => ({\r\n        score: prev.score + 1 * prev.level,\r\n        tileCount: prev.tileCount + 1,\r\n        level: 1 + Math.floor(prev.tileCount / 10),\r\n      }));\r\n      var timerId;\r\n      clearInterval(this.state.timerId);\r\n      timerId = setInterval(\r\n        () => this.updateField('down'),\r\n        1000 - (this.state.level * 10 > 600 ? 600 : this.state.level * 10)\r\n      );\r\n      this.setState({ timerId: timerId });\r\n      // New Tile:\r\n      tile = Math.floor(Math.random() * 7 + 1);\r\n      x = parseInt(this.props.xSize) / 2;\r\n      y = 1;\r\n      turn = 0;\r\n      // Test for Game Over, can the new tile placed in field?\r\n      if (\r\n        field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] != 0 ||\r\n        field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] != 0 ||\r\n        field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] != 0 ||\r\n        field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] != 0\r\n      ) {\r\n        this.setState({ gameOver: true });\r\n      } else {\r\n        // Render New Tile and go on\r\n        field[y + tiles[tile][turn][0][1]][x + tiles[tile][turn][0][0]] = tile;\r\n        field[y + tiles[tile][turn][1][1]][x + tiles[tile][turn][1][0]] = tile;\r\n        field[y + tiles[tile][turn][2][1]][x + tiles[tile][turn][2][0]] = tile;\r\n        field[y + tiles[tile][turn][3][1]][x + tiles[tile][turn][3][0]] = tile;\r\n      }\r\n    }\r\n    this.setState((prev) => ({\r\n      field: field,\r\n      activeTileX: x,\r\n      activeTileY: y,\r\n      tileTurn: turn,\r\n      activeTile: tile,\r\n    }));\r\n  }\r\n  handleLeftClick() {\r\n    this.updateField('left');\r\n  }\r\n  handleRightClick() {\r\n    this.updateField('right');\r\n  }\r\n  handleFlipClick() {\r\n    this.updateField('turn');\r\n  }\r\n  handleDownClick() {\r\n    this.updateField('down');\r\n  }\r\n  handlePauseClick() {\r\n    this.setState((prev) => ({ pause: !prev.pause }));\r\n  }\r\n  handleNewGameClick() {\r\n    var field = [];\r\n    for (var y = 0; y < this.props.ySize; y++) {\r\n      var row = [];\r\n      for (var x = 0; x < this.props.xSize; x++) {\r\n        row.push(0);\r\n      }\r\n      field.push(row);\r\n    }\r\n    var xStart = Math.floor(parseInt(this.props.xSize) / 2);\r\n    this.setState((prev) => ({\r\n      activeTileX: xStart,\r\n      activeTileY: 1,\r\n      activeTile: 2,\r\n      tileTurn: 0,\r\n      score: 0,\r\n      level: 1,\r\n      tileCount: 0,\r\n      gameOver: false,\r\n      field: field,\r\n    }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {' '}\r\n        <table>\r\n          {' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>{' '}\r\n            <td>\r\n              <TetrisField\r\n                field={this.state.field}\r\n                gameOver={this.state.gameOver}\r\n                score={this.state.score}\r\n                level={this.state.level}\r\n                turn={this.state.tileTurn}\r\n              />\r\n            </td>{' '}\r\n          </tr>{' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>\r\n            <td className={'ButtonAlignCenter'}>\r\n              <button onClick={this.handleLeftClick}>Left</button>\r\n              <button onClick={this.handleFlipClick}>Flip</button>\r\n              <button onClick={this.handleRightClick}>Right</button>\r\n            </td>{' '}\r\n          </tr>{' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>\r\n            <td className={'ButtonAlignCenter'}>\r\n              <button onClick={this.handleDownClick}>Down</button>\r\n            </td>\r\n            <td> </td>{' '}\r\n          </tr>{' '}\r\n          <tr>\r\n            {' '}\r\n            <td> </td>{' '}\r\n            <td>\r\n              <button onClick={this.handleNewGameClick}>New Game</button>\r\n              <button onClick={this.handlePauseClick}>Pause</button>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction TetrisComp() {\r\n  const { width, height } = useWindowDimensions();\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        width: `${width * 0.9}px`,\r\n        height: `${height * 0.9}px`,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n      }}>\r\n      <Tetris xSize=\"14\" ySize=\"20\"></Tetris>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TetrisComp;\r\n"]},"metadata":{},"sourceType":"module"}