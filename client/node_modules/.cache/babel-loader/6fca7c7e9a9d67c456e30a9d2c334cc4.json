{"ast":null,"code":"var styles = new Map();\nexport function addStyle(name, rules) {\n  if (styles.get(name)) {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.innerHTML = rules;\n  style.setAttribute('type', 'text/css');\n  style.setAttribute('id', 'ReactGiphySearchbox-' + name);\n  document.head.appendChild(style);\n  styles.set(name, style);\n}\nexport function useStyle(name, rules) {\n  addStyle(name, rules);\n}\n\nif (module.hot) {\n  module.hot.dispose(function () {\n    styles.forEach(function (style) {\n      if (document.head.contains(style)) {\n        document.head.removeChild(style);\n      }\n    });\n    styles.clear();\n  });\n}","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/node_modules/react-giphy-searchbox/es/style/useStyle.js"],"names":["styles","Map","addStyle","name","rules","get","style","document","createElement","innerHTML","setAttribute","head","appendChild","set","useStyle","module","hot","dispose","forEach","contains","removeChild","clear"],"mappings":"AAAA,IAAIA,MAAM,GAAG,IAAIC,GAAJ,EAAb;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AACpC,MAAIJ,MAAM,CAACK,GAAP,CAAWF,IAAX,CAAJ,EAAsB;AACpB;AACD;;AACD,MAAIG,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACAF,EAAAA,KAAK,CAACG,SAAN,GAAkBL,KAAlB;AACAE,EAAAA,KAAK,CAACI,YAAN,CAAmB,MAAnB,EAA2B,UAA3B;AACAJ,EAAAA,KAAK,CAACI,YAAN,CAAmB,IAAnB,EAAyB,yBAAyBP,IAAlD;AACAI,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,KAA1B;AACAN,EAAAA,MAAM,CAACa,GAAP,CAAWV,IAAX,EAAiBG,KAAjB;AACD;AAED,OAAO,SAASQ,QAAT,CAAkBX,IAAlB,EAAwBC,KAAxB,EAA+B;AACpCF,EAAAA,QAAQ,CAACC,IAAD,EAAOC,KAAP,CAAR;AACD;;AAED,IAAIW,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,OAAX,CAAmB,YAAY;AAC7BjB,IAAAA,MAAM,CAACkB,OAAP,CAAe,UAAUZ,KAAV,EAAiB;AAC9B,UAAIC,QAAQ,CAACI,IAAT,CAAcQ,QAAd,CAAuBb,KAAvB,CAAJ,EAAmC;AACjCC,QAAAA,QAAQ,CAACI,IAAT,CAAcS,WAAd,CAA0Bd,KAA1B;AACD;AACF,KAJD;AAKAN,IAAAA,MAAM,CAACqB,KAAP;AACD,GAPD;AAQD","sourcesContent":["var styles = new Map();\n\nexport function addStyle(name, rules) {\n  if (styles.get(name)) {\n    return;\n  }\n  var style = document.createElement('style');\n  style.innerHTML = rules;\n  style.setAttribute('type', 'text/css');\n  style.setAttribute('id', 'ReactGiphySearchbox-' + name);\n  document.head.appendChild(style);\n  styles.set(name, style);\n}\n\nexport function useStyle(name, rules) {\n  addStyle(name, rules);\n}\n\nif (module.hot) {\n  module.hot.dispose(function () {\n    styles.forEach(function (style) {\n      if (document.head.contains(style)) {\n        document.head.removeChild(style);\n      }\n    });\n    styles.clear();\n  });\n}"]},"metadata":{},"sourceType":"module"}