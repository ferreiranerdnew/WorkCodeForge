{"ast":null,"code":"import { createReducer, createAction } from '@reduxjs/toolkit';\nimport { directions, modifier, maxSteps, playerTemplate } from '../utils/constants';\nimport { initX, initY } from '../utils/constants';\nconst initialState = {\n  localID: 'local',\n  localSocketId: null,\n  user: {\n    id: '',\n    //id_from_db\n    name: '',\n    avatar: ''\n  },\n  players: {// [id_from_db]: {\n    //   id: 1,\n    //   isJoined: true,\n    //   x: initX * 32,\n    //   y: initY * 32,\n    //   dir: \"ArrowDown\",\n    //   step: 0,\n    //   name: \"local user\",\n    //   skin: \"f1\",\n    //   socketId: \"20digitsofnonesense\"\n    // },\n  },\n  mapGuide: {\n    userDashboard: false,\n    projectDashboard: false,\n    kanban: false,\n    ganttChart: false,\n    taskList: false,\n    piano: false,\n    guitar: false,\n    arcade: false,\n    typeWritter: false,\n    tetris: false,\n    globe: false,\n    reception: false,\n    win98: false\n  },\n  mapRoute: {\n    modalCanOpen: false,\n    routeName: null\n  },\n  video: {\n    localSocketId: '',\n    peers: [],\n    //[{peerId: peerObj}]\n    socketArr: [] //for rendering\n\n  },\n  outgoingGif: {\n    senderName: '',\n    receiverName: null,\n    //broadcast if null\n    senderAvatar: '',\n    gifObj: null,\n    receiverSocketId: null,\n    senderSocketId: null\n  },\n  incomingGif: {\n    senderName: '',\n    senderAvatar: '',\n    gifObj: null,\n    receiverName: null\n  },\n  gifSearchOpen: false\n};\nexport const SET_USER = createAction('SET_USER');\nexport const WALK = createAction('WALK');\nexport const UPDATE_OTHERS = createAction('UPDATE_OTHERS');\nexport const SELECT_AVATAR = createAction('SELECT_AVATAR');\nexport const WALK_IN_PLACE = createAction('WALK_IN_PLACE');\nexport const SET_MAP_GUIDE = createAction('SET_MAP_GUIDE');\nexport const HIDE_MAP_GUIDE = createAction('HIDE_MAP_GUIDE');\nexport const TOGGLE_MODAL_CAN_OPEN = createAction('TOGGLE_MODAL_CAN_OPEN');\nexport const TOGGLE_GIF_SEARCH_OPEN = createAction('TOGGLE_GIF_SEARCH_OPEN');\nexport const JOIN_VIDEO = createAction('JOIN_VIDEO');\nexport const SET_VIDEO_PARTICIPANTS = createAction('SET_VIDEO_PARTICIPANTS');\nexport const SET_SOCKETID = createAction('SET_SOCKETID');\nexport const USER_DISCONNECT = createAction('USER_DISCONNECT');\nexport const ANNOUNCEMENT = createAction('ANNOUNCEMENT');\nexport const RECEIVED_ANNOUNCEMENT = createAction('RECEIVED_ANNOUNCEMENT');\nexport const SEND_DIRECT = createAction('SEND_DIRECT');\nexport const RECEIVE_DIRECT = createAction('RECEIVE_DIRECT');\nexport const CLEAR_INCOMING = createAction('CLEAR_INCOMING');\nexport const mapReducer = createReducer(initialState, builder => {\n  //SET_USER: save user in global state and init meeting room rendering params\n  builder.addCase(SET_USER, (state, action) => {\n    state.user.name = action.payload.name;\n    state.user.avatar = action.payload.avatar;\n    const id = action.payload.id;\n    state.localID = id;\n    state.user.id = id;\n    state.players[id] = { ...playerTemplate\n    };\n    state.players[id]['id'] = id;\n    state.players[id]['name'] = action.payload.name;\n\n    if (!state.localSocketId) {\n      state.players[id]['socketId'] = state.localSocketId;\n    }\n  }); //WALK: handle movement animation (turning and walking)\n  //WALK: animação do movimento do cabo (girando e andando\n\n  builder.addCase(WALK, (state, action) => {\n    const id = action.payload.id;\n    const dir = action.payload.dir;\n    let newX, newY, newDir; //check if walking\n\n    if (state['players'][id]['dir'] === dir) {\n      newX = state.players[id]['x'] + modifier[dir]['x'];\n      newY = state.players[id]['y'] + modifier[dir]['y'];\n    } else {\n      // else turning\n      newDir = dir;\n    }\n\n    const newStep = state.players[id]['step'] < maxSteps - 1 ? state.players[id]['step'] + 1 : 0; // console.log(\"id :>> \", id);\n    // console.log(\"dir :>> \", dir);\n    // console.log(\"directions[dir] :>> \", directions[dir]);\n    // console.log(\"newX :>> \", newX);\n    // console.log(\"newY :>> \", newX);\n    // console.log(\"newDir :>> \", newX);\n\n    state.players[id].x = newX ? newX : state.players[id]['x'];\n    state.players[id].y = newY ? newY : state.players[id]['y'];\n    state.players[id].dir = newDir ? newDir : state.players[id].dir;\n    state.players[id].step = newStep;\n    state.players[id].socketId = state.localSocketId;\n    return state;\n  });\n  builder.addCase(WALK_IN_PLACE, (state, action) => {\n    const id = action.payload.id;\n    const dir = action.payload.dir;\n    let newDir;\n\n    if (state['players'][id]['dir'] !== dir) {\n      newDir = dir;\n    }\n\n    const newStep = state.players[id]['step'] < maxSteps - 1 ? state.players[id]['step'] + 1 : 0;\n    state.players[id].dir = newDir ? newDir : state.players[id].dir;\n    state.players[id].step = newStep;\n    return state;\n  });\n  builder.addCase(SET_MAP_GUIDE, (state, action) => {\n    state.mapGuide[action.payload.actionAsset] = true;\n    state.mapRoute.routeName = action.payload.actionAsset;\n  });\n  builder.addCase(HIDE_MAP_GUIDE, (state, action) => {\n    for (let key in state.mapGuide) {\n      state.mapGuide[key] = false;\n    }\n\n    state.mapRoute.modalCanOpen = false;\n    state.mapRoute.routeName = null;\n  });\n  builder.addCase(TOGGLE_MODAL_CAN_OPEN, (state, action) => {\n    state.mapRoute.modalCanOpen = !state.mapRoute.modalCanOpen;\n  });\n  builder.addCase(TOGGLE_GIF_SEARCH_OPEN, (state, action) => {\n    state.gifSearchOpen = !state.gifSearchOpen;\n  });\n  builder.addCase(UPDATE_OTHERS, (state, action) => {\n    if (action.payload.id !== state.user.id) {\n      state.players[action.payload.id] = action.payload;\n    }\n  });\n  builder.addCase(SELECT_AVATAR, (state, action) => {\n    state.players[state.localID].skin = action.payload.skin;\n  });\n  builder.addCase(JOIN_VIDEO, (state, action) => {//do nothing!\n  });\n  builder.addCase(SET_VIDEO_PARTICIPANTS, (state, action) => {\n    state.video.socketArr = action.payload;\n  });\n  builder.addCase(SET_SOCKETID, (state, action) => {\n    state.localSocketId = action.payload.id;\n\n    if (state.players[state.localID] !== undefined) {\n      state.players[state.localID]['socketId'] = action.payload.id;\n    }\n  });\n  builder.addCase(USER_DISCONNECT, (state, action) => {\n    const disconnectedId = action.payload;\n\n    for (let key in state.players) {\n      if (state.players[key]['socketId'] === disconnectedId) {\n        delete state.players[key];\n        break;\n      }\n    }\n  });\n  builder.addCase(RECEIVED_ANNOUNCEMENT, (state, action) => {\n    state.incomingGif.senderName = action.payload.senderName;\n    state.incomingGif.senderAvatar = action.payload.senderAvatar;\n    state.incomingGif.gifObj = action.payload.gifObj;\n    state.incomingGif.receiverName = null;\n  });\n  builder.addCase(ANNOUNCEMENT, (state, action) => {\n    state.outgoingGif.senderName = state.user.name;\n    state.outgoingGif.senderAvatar = state.user.avatar;\n    state.outgoingGif.gifObj = action.payload.gifObj;\n    state.outgoingGif.receiverName = null;\n  });\n  builder.addCase(SEND_DIRECT, (state, action) => {\n    state.outgoingGif.senderName = state.user.name;\n    state.outgoingGif.senderAvatar = state.user.avatar;\n    state.outgoingGif.gifObj = action.payload.gifObj;\n    state.outgoingGif.receiverName = action.payload.receiverName;\n    state.outgoingGif.senderSocketId = state.localSocketId;\n\n    for (let key in state.players) {\n      if (state.players[key]['name'] === action.payload.receiverName) {\n        state.outgoingGif.receiverSocketId = state.players[key]['socketId'];\n        break;\n      }\n    }\n  });\n  builder.addCase(RECEIVE_DIRECT, (state, action) => {\n    state.incomingGif.senderName = action.payload.senderName;\n    state.incomingGif.senderAvatar = action.payload.senderAvatar;\n    state.incomingGif.gifObj = action.payload.gifObj;\n    state.incomingGif.receiverName = action.payload.receiverName;\n  });\n  builder.addCase(CLEAR_INCOMING, (state, action) => {\n    state.incomingGif.senderName = '';\n    state.incomingGif.senderAvatar = '';\n    state.incomingGif.gifObj = null;\n    state.incomingGif.receiverName = '';\n  });\n});","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/reducers/mapReducer_old.js"],"names":["createReducer","createAction","directions","modifier","maxSteps","playerTemplate","initX","initY","initialState","localID","localSocketId","user","id","name","avatar","players","mapGuide","userDashboard","projectDashboard","kanban","ganttChart","taskList","piano","guitar","arcade","typeWritter","tetris","globe","reception","win98","mapRoute","modalCanOpen","routeName","video","peers","socketArr","outgoingGif","senderName","receiverName","senderAvatar","gifObj","receiverSocketId","senderSocketId","incomingGif","gifSearchOpen","SET_USER","WALK","UPDATE_OTHERS","SELECT_AVATAR","WALK_IN_PLACE","SET_MAP_GUIDE","HIDE_MAP_GUIDE","TOGGLE_MODAL_CAN_OPEN","TOGGLE_GIF_SEARCH_OPEN","JOIN_VIDEO","SET_VIDEO_PARTICIPANTS","SET_SOCKETID","USER_DISCONNECT","ANNOUNCEMENT","RECEIVED_ANNOUNCEMENT","SEND_DIRECT","RECEIVE_DIRECT","CLEAR_INCOMING","mapReducer","builder","addCase","state","action","payload","dir","newX","newY","newDir","newStep","x","y","step","socketId","actionAsset","key","skin","undefined","disconnectedId"],"mappings":"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","sourcesContent":["import { createReducer, createAction } from '@reduxjs/toolkit';\r\nimport {\r\n  directions,\r\n  modifier,\r\n  maxSteps,\r\n  playerTemplate,\r\n} from '../utils/constants';\r\nimport { initX, initY } from '../utils/constants';\r\n\r\nconst initialState = {\r\n  localID: 'local',\r\n  localSocketId: null,\r\n  user: {\r\n    id: '', //id_from_db\r\n    name: '',\r\n    avatar: '',\r\n  },\r\n  players: {\r\n    // [id_from_db]: {\r\n    //   id: 1,\r\n    //   isJoined: true,\r\n    //   x: initX * 32,\r\n    //   y: initY * 32,\r\n    //   dir: \"ArrowDown\",\r\n    //   step: 0,\r\n    //   name: \"local user\",\r\n    //   skin: \"f1\",\r\n    //   socketId: \"20digitsofnonesense\"\r\n    // },\r\n  },\r\n  mapGuide: {\r\n    userDashboard: false,\r\n    projectDashboard: false,\r\n    kanban: false,\r\n    ganttChart: false,\r\n    taskList: false,\r\n    piano: false,\r\n    guitar: false,\r\n    arcade: false,\r\n    typeWritter: false,\r\n    tetris: false,\r\n    globe: false,\r\n    reception: false,\r\n    win98: false,\r\n  },\r\n  mapRoute: {\r\n    modalCanOpen: false,\r\n    routeName: null,\r\n  },\r\n  video: {\r\n    localSocketId: '',\r\n    peers: [], //[{peerId: peerObj}]\r\n    socketArr: [], //for rendering\r\n  },\r\n  outgoingGif: {\r\n    senderName: '',\r\n    receiverName: null, //broadcast if null\r\n    senderAvatar: '',\r\n    gifObj: null,\r\n    receiverSocketId: null,\r\n    senderSocketId: null,\r\n  },\r\n  incomingGif: {\r\n    senderName: '',\r\n    senderAvatar: '',\r\n    gifObj: null,\r\n    receiverName: null,\r\n  },\r\n  gifSearchOpen: false,\r\n};\r\nexport const SET_USER = createAction('SET_USER');\r\nexport const WALK = createAction('WALK');\r\nexport const UPDATE_OTHERS = createAction('UPDATE_OTHERS');\r\nexport const SELECT_AVATAR = createAction('SELECT_AVATAR');\r\nexport const WALK_IN_PLACE = createAction('WALK_IN_PLACE');\r\nexport const SET_MAP_GUIDE = createAction('SET_MAP_GUIDE');\r\nexport const HIDE_MAP_GUIDE = createAction('HIDE_MAP_GUIDE');\r\nexport const TOGGLE_MODAL_CAN_OPEN = createAction('TOGGLE_MODAL_CAN_OPEN');\r\nexport const TOGGLE_GIF_SEARCH_OPEN = createAction('TOGGLE_GIF_SEARCH_OPEN');\r\nexport const JOIN_VIDEO = createAction('JOIN_VIDEO');\r\nexport const SET_VIDEO_PARTICIPANTS = createAction('SET_VIDEO_PARTICIPANTS');\r\nexport const SET_SOCKETID = createAction('SET_SOCKETID');\r\nexport const USER_DISCONNECT = createAction('USER_DISCONNECT');\r\nexport const ANNOUNCEMENT = createAction('ANNOUNCEMENT');\r\nexport const RECEIVED_ANNOUNCEMENT = createAction('RECEIVED_ANNOUNCEMENT');\r\nexport const SEND_DIRECT = createAction('SEND_DIRECT');\r\nexport const RECEIVE_DIRECT = createAction('RECEIVE_DIRECT');\r\nexport const CLEAR_INCOMING = createAction('CLEAR_INCOMING');\r\n\r\nexport const mapReducer = createReducer(initialState, (builder) => {\r\n  //SET_USER: save user in global state and init meeting room rendering params\r\n  builder.addCase(SET_USER, (state, action) => {\r\n    state.user.name = action.payload.name;\r\n    state.user.avatar = action.payload.avatar;\r\n    const id = action.payload.id;\r\n    state.localID = id;\r\n    state.user.id = id;\r\n    state.players[id] = { ...playerTemplate };\r\n    state.players[id]['id'] = id;\r\n    state.players[id]['name'] = action.payload.name;\r\n    if (!state.localSocketId) {\r\n      state.players[id]['socketId'] = state.localSocketId;\r\n    }\r\n  });\r\n\r\n  //WALK: handle movement animation (turning and walking)\r\n  //WALK: animação do movimento do cabo (girando e andando\r\n  builder.addCase(WALK, (state, action) => {\r\n    const id = action.payload.id;\r\n    const dir = action.payload.dir;\r\n    let newX, newY, newDir;\r\n    //check if walking\r\n    if (state['players'][id]['dir'] === dir) {\r\n      newX = state.players[id]['x'] + modifier[dir]['x'];\r\n      newY = state.players[id]['y'] + modifier[dir]['y'];\r\n    } else {\r\n      // else turning\r\n      newDir = dir;\r\n    }\r\n    const newStep =\r\n      state.players[id]['step'] < maxSteps - 1\r\n        ? state.players[id]['step'] + 1\r\n        : 0;\r\n\r\n    // console.log(\"id :>> \", id);\r\n    // console.log(\"dir :>> \", dir);\r\n    // console.log(\"directions[dir] :>> \", directions[dir]);\r\n    // console.log(\"newX :>> \", newX);\r\n    // console.log(\"newY :>> \", newX);\r\n    // console.log(\"newDir :>> \", newX);\r\n\r\n    state.players[id].x = newX ? newX : state.players[id]['x'];\r\n    state.players[id].y = newY ? newY : state.players[id]['y'];\r\n    state.players[id].dir = newDir ? newDir : state.players[id].dir;\r\n    state.players[id].step = newStep;\r\n    state.players[id].socketId = state.localSocketId;\r\n    return state;\r\n  });\r\n\r\n  builder.addCase(WALK_IN_PLACE, (state, action) => {\r\n    const id = action.payload.id;\r\n    const dir = action.payload.dir;\r\n    let newDir;\r\n    if (state['players'][id]['dir'] !== dir) {\r\n      newDir = dir;\r\n    }\r\n    const newStep =\r\n      state.players[id]['step'] < maxSteps - 1\r\n        ? state.players[id]['step'] + 1\r\n        : 0;\r\n    state.players[id].dir = newDir ? newDir : state.players[id].dir;\r\n    state.players[id].step = newStep;\r\n    return state;\r\n  });\r\n\r\n  builder.addCase(SET_MAP_GUIDE, (state, action) => {\r\n    state.mapGuide[action.payload.actionAsset] = true;\r\n    state.mapRoute.routeName = action.payload.actionAsset;\r\n  });\r\n  builder.addCase(HIDE_MAP_GUIDE, (state, action) => {\r\n    for (let key in state.mapGuide) {\r\n      state.mapGuide[key] = false;\r\n    }\r\n    state.mapRoute.modalCanOpen = false;\r\n    state.mapRoute.routeName = null;\r\n  });\r\n\r\n  builder.addCase(TOGGLE_MODAL_CAN_OPEN, (state, action) => {\r\n    state.mapRoute.modalCanOpen = !state.mapRoute.modalCanOpen;\r\n  });\r\n\r\n  builder.addCase(TOGGLE_GIF_SEARCH_OPEN, (state, action) => {\r\n    state.gifSearchOpen = !state.gifSearchOpen;\r\n  });\r\n\r\n  builder.addCase(UPDATE_OTHERS, (state, action) => {\r\n    if (action.payload.id !== state.user.id) {\r\n      state.players[action.payload.id] = action.payload;\r\n    }\r\n  });\r\n\r\n  builder.addCase(SELECT_AVATAR, (state, action) => {\r\n    state.players[state.localID].skin = action.payload.skin;\r\n  });\r\n  builder.addCase(JOIN_VIDEO, (state, action) => {\r\n    //do nothing!\r\n  });\r\n  builder.addCase(SET_VIDEO_PARTICIPANTS, (state, action) => {\r\n    state.video.socketArr = action.payload;\r\n  });\r\n  builder.addCase(SET_SOCKETID, (state, action) => {\r\n    state.localSocketId = action.payload.id;\r\n    if (state.players[state.localID] !== undefined) {\r\n      state.players[state.localID]['socketId'] = action.payload.id;\r\n    }\r\n  });\r\n  builder.addCase(USER_DISCONNECT, (state, action) => {\r\n    const disconnectedId = action.payload;\r\n    for (let key in state.players) {\r\n      if (state.players[key]['socketId'] === disconnectedId) {\r\n        delete state.players[key];\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  builder.addCase(RECEIVED_ANNOUNCEMENT, (state, action) => {\r\n    state.incomingGif.senderName = action.payload.senderName;\r\n    state.incomingGif.senderAvatar = action.payload.senderAvatar;\r\n    state.incomingGif.gifObj = action.payload.gifObj;\r\n    state.incomingGif.receiverName = null;\r\n  });\r\n  builder.addCase(ANNOUNCEMENT, (state, action) => {\r\n    state.outgoingGif.senderName = state.user.name;\r\n    state.outgoingGif.senderAvatar = state.user.avatar;\r\n    state.outgoingGif.gifObj = action.payload.gifObj;\r\n    state.outgoingGif.receiverName = null;\r\n  });\r\n  builder.addCase(SEND_DIRECT, (state, action) => {\r\n    state.outgoingGif.senderName = state.user.name;\r\n    state.outgoingGif.senderAvatar = state.user.avatar;\r\n    state.outgoingGif.gifObj = action.payload.gifObj;\r\n    state.outgoingGif.receiverName = action.payload.receiverName;\r\n    state.outgoingGif.senderSocketId = state.localSocketId;\r\n    for (let key in state.players) {\r\n      if (state.players[key]['name'] === action.payload.receiverName) {\r\n        state.outgoingGif.receiverSocketId = state.players[key]['socketId'];\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  builder.addCase(RECEIVE_DIRECT, (state, action) => {\r\n    state.incomingGif.senderName = action.payload.senderName;\r\n    state.incomingGif.senderAvatar = action.payload.senderAvatar;\r\n    state.incomingGif.gifObj = action.payload.gifObj;\r\n    state.incomingGif.receiverName = action.payload.receiverName;\r\n  });\r\n  builder.addCase(CLEAR_INCOMING, (state, action) => {\r\n    state.incomingGif.senderName = '';\r\n    state.incomingGif.senderAvatar = '';\r\n    state.incomingGif.gifObj = null;\r\n    state.incomingGif.receiverName = '';\r\n  });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}