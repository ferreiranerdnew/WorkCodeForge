{"ast":null,"code":"// src/reducers/mapReducer.js\nimport { combineReducers } from 'redux'; // === TIPOS DE AÇÃO PARA MAPA ===\n\nexport const SHOW_MAP_GUIDE = 'SHOW_MAP_GUIDE';\nexport const HIDE_MAP_GUIDE = 'HIDE_MAP_GUIDE';\nexport const SET_MAP_CENTER = 'SET_MAP_CENTER';\nexport const SET_MAP_ZOOM = 'SET_MAP_ZOOM';\nexport const TOGGLE_MAP_LAYER = 'TOGGLE_MAP_LAYER';\nexport const SET_MAP_MARKERS = 'SET_MAP_MARKERS';\nexport const ADD_MAP_MARKER = 'ADD_MAP_MARKER';\nexport const REMOVE_MAP_MARKER = 'REMOVE_MAP_MARKER';\nexport const UPDATE_MAP_MARKER = 'UPDATE_MAP_MARKER'; // === TIPOS DE AÇÃO PARA COMUNICAÇÃO ===\n\nexport const SET_ONLINE_USERS = 'SET_ONLINE_USERS';\nexport const ADD_ONLINE_USER = 'ADD_ONLINE_USER';\nexport const REMOVE_ONLINE_USER = 'REMOVE_ONLINE_USER';\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\nexport const RECEIVE_PRIVATE_MESSAGE = 'RECEIVE_PRIVATE_MESSAGE';\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\nexport const RECEIVE_TYPING_STATUS = 'RECEIVE_TYPING_STATUS';\nexport const RECEIVE_USER_JOINED = 'RECEIVE_USER_JOINED';\nexport const RECEIVE_USER_LEFT = 'RECEIVE_USER_LEFT';\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'; // === TIPOS DE AÇÃO PARA AVATAR/USUÁRIO ===\n\nexport const SELECT_AVATAR = 'SELECT_AVATAR';\nexport const SET_USER_NAME = 'SET_USER_NAME';\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES'; // === ESTADO INICIAL PARA MAPA ===\n\nconst mapInitialState = {\n  // Configurações do mapa\n  showGuide: false,\n  center: {\n    lat: -22.2086,\n    lng: -47.5988\n  },\n  // Coordenadas de Araraquara, SP\n  zoom: 14,\n  // Camadas do mapa\n  layers: {\n    satellite: false,\n    terrain: false,\n    traffic: false,\n    markers: true\n  },\n  // Marcadores\n  markers: [],\n  // Configurações visuais\n  mapStyle: 'default',\n  showControls: true,\n  showScale: true\n}; // === ESTADO INICIAL PARA COMUNICAÇÃO ===\n\nconst communicationInitialState = {\n  // Usuários online\n  onlineUsers: [],\n  // Mensagens\n  messages: [],\n  privateMessages: [],\n  // Status de digitação\n  typingUsers: [],\n  // Notificações\n  notifications: [],\n  // Configurações de chat\n  chatSettings: {\n    soundEnabled: true,\n    notificationsEnabled: true,\n    showOnlineUsers: true,\n    maxMessages: 100\n  }\n}; // === ESTADO INICIAL PARA USUÁRIO ===\n\nconst userInitialState = {\n  selectedAvatar: null,\n  userName: '',\n  preferences: {\n    theme: 'light',\n    language: 'pt-BR',\n    notifications: true\n  }\n}; // === REDUCER PARA MAPA ===\n\nconst mapReducer = (state = mapInitialState, action) => {\n  switch (action.type) {\n    case SHOW_MAP_GUIDE:\n      return { ...state,\n        showGuide: true\n      };\n\n    case HIDE_MAP_GUIDE:\n      return { ...state,\n        showGuide: false\n      };\n\n    case SET_MAP_CENTER:\n      return { ...state,\n        center: action.payload\n      };\n\n    case SET_MAP_ZOOM:\n      return { ...state,\n        zoom: action.payload\n      };\n\n    case TOGGLE_MAP_LAYER:\n      return { ...state,\n        layers: { ...state.layers,\n          [action.payload]: !state.layers[action.payload]\n        }\n      };\n\n    case SET_MAP_MARKERS:\n      return { ...state,\n        markers: Array.isArray(action.payload) ? action.payload : []\n      };\n\n    case ADD_MAP_MARKER:\n      return { ...state,\n        markers: [...state.markers, {\n          id: action.payload.id || `marker_${Date.now()}`,\n          ...action.payload\n        }]\n      };\n\n    case REMOVE_MAP_MARKER:\n      return { ...state,\n        markers: state.markers.filter(marker => marker.id !== action.payload)\n      };\n\n    case UPDATE_MAP_MARKER:\n      return { ...state,\n        markers: state.markers.map(marker => marker.id === action.payload.id ? { ...marker,\n          ...action.payload\n        } : marker)\n      };\n\n    default:\n      return state;\n  }\n}; // === REDUCER PARA COMUNICAÇÃO ===\n\n\nconst communicationReducer = (state = communicationInitialState, action) => {\n  switch (action.type) {\n    // === USUÁRIOS ONLINE ===\n    case SET_ONLINE_USERS:\n      return { ...state,\n        onlineUsers: Array.isArray(action.payload) ? action.payload : []\n      };\n\n    case ADD_ONLINE_USER:\n      return { ...state,\n        onlineUsers: [...state.onlineUsers.filter(user => user.id !== action.payload.id), action.payload]\n      };\n\n    case REMOVE_ONLINE_USER:\n      return { ...state,\n        onlineUsers: state.onlineUsers.filter(user => user.id !== action.payload)\n      };\n\n    case UPDATE_USER_STATUS:\n      return { ...state,\n        onlineUsers: state.onlineUsers.map(user => user.id === action.payload.userId ? { ...user,\n          status: action.payload.status,\n          lastSeen: action.payload.lastSeen\n        } : user)\n      };\n    // === MENSAGENS ===\n\n    case RECEIVE_MESSAGE:\n      const newMessage = { ...action.payload,\n        id: action.payload.id || `msg_${Date.now()}_${Math.random()}`,\n        timestamp: action.payload.timestamp || Date.now()\n      };\n      return { ...state,\n        messages: [...state.messages.slice(-state.chatSettings.maxMessages + 1), newMessage]\n      };\n\n    case RECEIVE_PRIVATE_MESSAGE:\n      const newPrivateMessage = { ...action.payload,\n        id: action.payload.id || `private_${Date.now()}_${Math.random()}`,\n        timestamp: action.payload.timestamp || Date.now()\n      };\n      return { ...state,\n        privateMessages: [...state.privateMessages.slice(-state.chatSettings.maxMessages + 1), newPrivateMessage]\n      };\n\n    case CLEAR_MESSAGES:\n      return { ...state,\n        messages: [],\n        privateMessages: []\n      };\n    // === STATUS DE DIGITAÇÃO ===\n\n    case RECEIVE_TYPING_STATUS:\n      const {\n        userId,\n        userName,\n        isTyping\n      } = action.payload;\n\n      if (isTyping) {\n        return { ...state,\n          typingUsers: [...state.typingUsers.filter(user => user.userId !== userId), {\n            userId,\n            userName,\n            isTyping: true,\n            timestamp: Date.now()\n          }]\n        };\n      } else {\n        return { ...state,\n          typingUsers: state.typingUsers.filter(user => user.userId !== userId)\n        };\n      }\n\n    // === NOTIFICAÇÕES ===\n\n    case RECEIVE_USER_JOINED:\n    case RECEIVE_USER_LEFT:\n      const notification = {\n        id: `notification_${Date.now()}_${Math.random()}`,\n        type: action.type === RECEIVE_USER_JOINED ? 'user_joined' : 'user_left',\n        message: action.payload.message,\n        userId: action.payload.userId,\n        timestamp: action.payload.timestamp || Date.now()\n      };\n      return { ...state,\n        notifications: [...state.notifications.slice(-19), notification]\n      };\n\n    case ADD_NOTIFICATION:\n      return { ...state,\n        notifications: [...state.notifications.slice(-19), {\n          id: action.payload.id || `notification_${Date.now()}`,\n          ...action.payload,\n          timestamp: action.payload.timestamp || Date.now()\n        }]\n      };\n\n    case REMOVE_NOTIFICATION:\n      return { ...state,\n        notifications: state.notifications.filter(notif => notif.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}; // === REDUCER PARA USUÁRIO ===\n\n\nconst userReducer = (state = userInitialState, action) => {\n  switch (action.type) {\n    case SELECT_AVATAR:\n      return { ...state,\n        selectedAvatar: action.payload\n      };\n\n    case SET_USER_NAME:\n      return { ...state,\n        userName: action.payload\n      };\n\n    case SET_USER_PREFERENCES:\n      return { ...state,\n        preferences: { ...state.preferences,\n          ...action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}; // === REDUCER COMBINADO ===\n\n\nconst rootReducer = combineReducers({\n  map: mapReducer,\n  communication: communicationReducer,\n  user: userReducer\n});\nexport default rootReducer; // === SELETORES PARA MAPA ===\n\nexport const selectMapGuideVisible = state => {\n  var _state$map;\n\n  return ((_state$map = state.map) === null || _state$map === void 0 ? void 0 : _state$map.showGuide) || false;\n};\nexport const selectMapCenter = state => {\n  var _state$map2;\n\n  return ((_state$map2 = state.map) === null || _state$map2 === void 0 ? void 0 : _state$map2.center) || {\n    lat: -22.2086,\n    lng: -47.5988\n  };\n};\nexport const selectMapZoom = state => {\n  var _state$map3;\n\n  return ((_state$map3 = state.map) === null || _state$map3 === void 0 ? void 0 : _state$map3.zoom) || 14;\n};\nexport const selectMapLayers = state => {\n  var _state$map4;\n\n  return ((_state$map4 = state.map) === null || _state$map4 === void 0 ? void 0 : _state$map4.layers) || {};\n};\nexport const selectMapMarkers = state => {\n  var _state$map5;\n\n  return ((_state$map5 = state.map) === null || _state$map5 === void 0 ? void 0 : _state$map5.markers) || [];\n}; // === SELETORES PARA COMUNICAÇÃO ===\n\nexport const selectOnlineUsers = state => {\n  var _state$communication;\n\n  return ((_state$communication = state.communication) === null || _state$communication === void 0 ? void 0 : _state$communication.onlineUsers) || [];\n};\nexport const selectMessages = state => {\n  var _state$communication2;\n\n  return ((_state$communication2 = state.communication) === null || _state$communication2 === void 0 ? void 0 : _state$communication2.messages) || [];\n};\nexport const selectPrivateMessages = state => {\n  var _state$communication3;\n\n  return ((_state$communication3 = state.communication) === null || _state$communication3 === void 0 ? void 0 : _state$communication3.privateMessages) || [];\n};\nexport const selectTypingUsers = state => {\n  var _state$communication4;\n\n  return ((_state$communication4 = state.communication) === null || _state$communication4 === void 0 ? void 0 : _state$communication4.typingUsers) || [];\n};\nexport const selectNotifications = state => {\n  var _state$communication5;\n\n  return ((_state$communication5 = state.communication) === null || _state$communication5 === void 0 ? void 0 : _state$communication5.notifications) || [];\n};\nexport const selectChatSettings = state => {\n  var _state$communication6;\n\n  return ((_state$communication6 = state.communication) === null || _state$communication6 === void 0 ? void 0 : _state$communication6.chatSettings) || {};\n}; // === SELETORES PARA USUÁRIO ===\n\nexport const selectSelectedAvatar = state => {\n  var _state$user;\n\n  return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.selectedAvatar) || null;\n};\nexport const selectUserName = state => {\n  var _state$user2;\n\n  return ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.userName) || '';\n};\nexport const selectUserPreferences = state => {\n  var _state$user3;\n\n  return ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.preferences) || {};\n}; // Seletor para mensagens privadas de um usuário específico\n\nexport const selectPrivateMessagesWithUser = (state, userId) => {\n  var _state$socket;\n\n  const messages = selectPrivateMessages(state);\n  const currentUserId = (_state$socket = state.socket) === null || _state$socket === void 0 ? void 0 : _state$socket.id;\n  return messages.filter(msg => msg.senderId === userId && msg.recipientId === currentUserId || msg.senderId === currentUserId && msg.recipientId === userId);\n}; // Seletor para usuários online excluindo o usuário atual\n\nexport const selectOtherOnlineUsers = state => {\n  var _state$socket2;\n\n  const onlineUsers = selectOnlineUsers(state);\n  const currentUserId = (_state$socket2 = state.socket) === null || _state$socket2 === void 0 ? void 0 : _state$socket2.id;\n  return onlineUsers.filter(user => user.id !== currentUserId);\n}; // === ACTION CREATORS PARA MAPA ===\n\nexport const showMapGuide = () => ({\n  type: SHOW_MAP_GUIDE\n});\nexport const hideMapGuide = () => ({\n  type: HIDE_MAP_GUIDE\n});\nexport const setMapCenter = center => ({\n  type: SET_MAP_CENTER,\n  payload: center\n});\nexport const setMapZoom = zoom => ({\n  type: SET_MAP_ZOOM,\n  payload: zoom\n});\nexport const toggleMapLayer = layerName => ({\n  type: TOGGLE_MAP_LAYER,\n  payload: layerName\n});\nexport const setMapMarkers = markers => ({\n  type: SET_MAP_MARKERS,\n  payload: markers\n});\nexport const addMapMarker = marker => ({\n  type: ADD_MAP_MARKER,\n  payload: marker\n});\nexport const removeMapMarker = markerId => ({\n  type: REMOVE_MAP_MARKER,\n  payload: markerId\n});\nexport const updateMapMarker = marker => ({\n  type: UPDATE_MAP_MARKER,\n  payload: marker\n}); // === ACTION CREATORS PARA COMUNICAÇÃO ===\n\nexport const setOnlineUsers = users => ({\n  type: SET_ONLINE_USERS,\n  payload: users\n});\nexport const addOnlineUser = user => ({\n  type: ADD_ONLINE_USER,\n  payload: user\n});\nexport const removeOnlineUser = userId => ({\n  type: REMOVE_ONLINE_USER,\n  payload: userId\n});\nexport const receiveMessage = message => ({\n  type: RECEIVE_MESSAGE,\n  payload: message\n});\nexport const receivePrivateMessage = message => ({\n  type: RECEIVE_PRIVATE_MESSAGE,\n  payload: message\n});\nexport const updateUserStatus = (userId, status, lastSeen) => ({\n  type: UPDATE_USER_STATUS,\n  payload: {\n    userId,\n    status,\n    lastSeen\n  }\n});\nexport const receiveTypingStatus = (userId, userName, isTyping) => ({\n  type: RECEIVE_TYPING_STATUS,\n  payload: {\n    userId,\n    userName,\n    isTyping\n  }\n});\nexport const clearMessages = () => ({\n  type: CLEAR_MESSAGES\n});\nexport const addNotification = notification => ({\n  type: ADD_NOTIFICATION,\n  payload: notification\n});\nexport const removeNotification = notificationId => ({\n  type: REMOVE_NOTIFICATION,\n  payload: notificationId\n}); // === ACTION CREATORS PARA USUÁRIO ===\n\nexport const selectAvatar = avatar => ({\n  type: SELECT_AVATAR,\n  payload: avatar\n});\nexport const setUserName = name => ({\n  type: SET_USER_NAME,\n  payload: name\n});\nexport const setUserPreferences = preferences => ({\n  type: SET_USER_PREFERENCES,\n  payload: preferences\n});","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/reducers/mapReducer.js"],"names":["combineReducers","SHOW_MAP_GUIDE","HIDE_MAP_GUIDE","SET_MAP_CENTER","SET_MAP_ZOOM","TOGGLE_MAP_LAYER","SET_MAP_MARKERS","ADD_MAP_MARKER","REMOVE_MAP_MARKER","UPDATE_MAP_MARKER","SET_ONLINE_USERS","ADD_ONLINE_USER","REMOVE_ONLINE_USER","RECEIVE_MESSAGE","RECEIVE_PRIVATE_MESSAGE","UPDATE_USER_STATUS","RECEIVE_TYPING_STATUS","RECEIVE_USER_JOINED","RECEIVE_USER_LEFT","CLEAR_MESSAGES","ADD_NOTIFICATION","REMOVE_NOTIFICATION","SELECT_AVATAR","SET_USER_NAME","SET_USER_PREFERENCES","mapInitialState","showGuide","center","lat","lng","zoom","layers","satellite","terrain","traffic","markers","mapStyle","showControls","showScale","communicationInitialState","onlineUsers","messages","privateMessages","typingUsers","notifications","chatSettings","soundEnabled","notificationsEnabled","showOnlineUsers","maxMessages","userInitialState","selectedAvatar","userName","preferences","theme","language","mapReducer","state","action","type","payload","Array","isArray","id","Date","now","filter","marker","map","communicationReducer","user","userId","status","lastSeen","newMessage","Math","random","timestamp","slice","newPrivateMessage","isTyping","notification","message","notif","userReducer","rootReducer","communication","selectMapGuideVisible","selectMapCenter","selectMapZoom","selectMapLayers","selectMapMarkers","selectOnlineUsers","selectMessages","selectPrivateMessages","selectTypingUsers","selectNotifications","selectChatSettings","selectSelectedAvatar","selectUserName","selectUserPreferences","selectPrivateMessagesWithUser","currentUserId","socket","msg","senderId","recipientId","selectOtherOnlineUsers","showMapGuide","hideMapGuide","setMapCenter","setMapZoom","toggleMapLayer","layerName","setMapMarkers","addMapMarker","removeMapMarker","markerId","updateMapMarker","setOnlineUsers","users","addOnlineUser","removeOnlineUser","receiveMessage","receivePrivateMessage","updateUserStatus","receiveTypingStatus","clearMessages","addNotification","removeNotification","notificationId","selectAvatar","avatar","setUserName","name","setUserPreferences"],"mappings":"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","sourcesContent":["// src/reducers/mapReducer.js\r\nimport { combineReducers } from 'redux';\r\n\r\n// === TIPOS DE AÇÃO PARA MAPA ===\r\nexport const SHOW_MAP_GUIDE = 'SHOW_MAP_GUIDE';\r\nexport const HIDE_MAP_GUIDE = 'HIDE_MAP_GUIDE';\r\nexport const SET_MAP_CENTER = 'SET_MAP_CENTER';\r\nexport const SET_MAP_ZOOM = 'SET_MAP_ZOOM';\r\nexport const TOGGLE_MAP_LAYER = 'TOGGLE_MAP_LAYER';\r\nexport const SET_MAP_MARKERS = 'SET_MAP_MARKERS';\r\nexport const ADD_MAP_MARKER = 'ADD_MAP_MARKER';\r\nexport const REMOVE_MAP_MARKER = 'REMOVE_MAP_MARKER';\r\nexport const UPDATE_MAP_MARKER = 'UPDATE_MAP_MARKER';\r\n\r\n// === TIPOS DE AÇÃO PARA COMUNICAÇÃO ===\r\nexport const SET_ONLINE_USERS = 'SET_ONLINE_USERS';\r\nexport const ADD_ONLINE_USER = 'ADD_ONLINE_USER';\r\nexport const REMOVE_ONLINE_USER = 'REMOVE_ONLINE_USER';\r\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\r\nexport const RECEIVE_PRIVATE_MESSAGE = 'RECEIVE_PRIVATE_MESSAGE';\r\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\r\nexport const RECEIVE_TYPING_STATUS = 'RECEIVE_TYPING_STATUS';\r\nexport const RECEIVE_USER_JOINED = 'RECEIVE_USER_JOINED';\r\nexport const RECEIVE_USER_LEFT = 'RECEIVE_USER_LEFT';\r\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\r\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\r\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION';\r\n\r\n// === TIPOS DE AÇÃO PARA AVATAR/USUÁRIO ===\r\nexport const SELECT_AVATAR = 'SELECT_AVATAR';\r\nexport const SET_USER_NAME = 'SET_USER_NAME';\r\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\r\n\r\n// === ESTADO INICIAL PARA MAPA ===\r\nconst mapInitialState = {\r\n  // Configurações do mapa\r\n  showGuide: false,\r\n  center: { lat: -22.2086, lng: -47.5988 }, // Coordenadas de Araraquara, SP\r\n  zoom: 14,\r\n  \r\n  // Camadas do mapa\r\n  layers: {\r\n    satellite: false,\r\n    terrain: false,\r\n    traffic: false,\r\n    markers: true\r\n  },\r\n  \r\n  // Marcadores\r\n  markers: [],\r\n  \r\n  // Configurações visuais\r\n  mapStyle: 'default',\r\n  showControls: true,\r\n  showScale: true\r\n};\r\n\r\n// === ESTADO INICIAL PARA COMUNICAÇÃO ===\r\nconst communicationInitialState = {\r\n  // Usuários online\r\n  onlineUsers: [],\r\n  \r\n  // Mensagens\r\n  messages: [],\r\n  privateMessages: [],\r\n  \r\n  // Status de digitação\r\n  typingUsers: [],\r\n  \r\n  // Notificações\r\n  notifications: [],\r\n  \r\n  // Configurações de chat\r\n  chatSettings: {\r\n    soundEnabled: true,\r\n    notificationsEnabled: true,\r\n    showOnlineUsers: true,\r\n    maxMessages: 100\r\n  }\r\n};\r\n\r\n// === ESTADO INICIAL PARA USUÁRIO ===\r\nconst userInitialState = {\r\n  selectedAvatar: null,\r\n  userName: '',\r\n  preferences: {\r\n    theme: 'light',\r\n    language: 'pt-BR',\r\n    notifications: true\r\n  }\r\n};\r\n\r\n// === REDUCER PARA MAPA ===\r\nconst mapReducer = (state = mapInitialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MAP_GUIDE:\r\n      return {\r\n        ...state,\r\n        showGuide: true\r\n      };\r\n\r\n    case HIDE_MAP_GUIDE:\r\n      return {\r\n        ...state,\r\n        showGuide: false\r\n      };\r\n\r\n    case SET_MAP_CENTER:\r\n      return {\r\n        ...state,\r\n        center: action.payload\r\n      };\r\n\r\n    case SET_MAP_ZOOM:\r\n      return {\r\n        ...state,\r\n        zoom: action.payload\r\n      };\r\n\r\n    case TOGGLE_MAP_LAYER:\r\n      return {\r\n        ...state,\r\n        layers: {\r\n          ...state.layers,\r\n          [action.payload]: !state.layers[action.payload]\r\n        }\r\n      };\r\n\r\n    case SET_MAP_MARKERS:\r\n      return {\r\n        ...state,\r\n        markers: Array.isArray(action.payload) ? action.payload : []\r\n      };\r\n\r\n    case ADD_MAP_MARKER:\r\n      return {\r\n        ...state,\r\n        markers: [\r\n          ...state.markers,\r\n          {\r\n            id: action.payload.id || `marker_${Date.now()}`,\r\n            ...action.payload\r\n          }\r\n        ]\r\n      };\r\n\r\n    case REMOVE_MAP_MARKER:\r\n      return {\r\n        ...state,\r\n        markers: state.markers.filter(marker => marker.id !== action.payload)\r\n      };\r\n\r\n    case UPDATE_MAP_MARKER:\r\n      return {\r\n        ...state,\r\n        markers: state.markers.map(marker =>\r\n          marker.id === action.payload.id\r\n            ? { ...marker, ...action.payload }\r\n            : marker\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// === REDUCER PARA COMUNICAÇÃO ===\r\nconst communicationReducer = (state = communicationInitialState, action) => {\r\n  switch (action.type) {\r\n    // === USUÁRIOS ONLINE ===\r\n    case SET_ONLINE_USERS:\r\n      return {\r\n        ...state,\r\n        onlineUsers: Array.isArray(action.payload) ? action.payload : []\r\n      };\r\n\r\n    case ADD_ONLINE_USER:\r\n      return {\r\n        ...state,\r\n        onlineUsers: [\r\n          ...state.onlineUsers.filter(user => user.id !== action.payload.id),\r\n          action.payload\r\n        ]\r\n      };\r\n\r\n    case REMOVE_ONLINE_USER:\r\n      return {\r\n        ...state,\r\n        onlineUsers: state.onlineUsers.filter(user => user.id !== action.payload)\r\n      };\r\n\r\n    case UPDATE_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        onlineUsers: state.onlineUsers.map(user =>\r\n          user.id === action.payload.userId\r\n            ? { ...user, status: action.payload.status, lastSeen: action.payload.lastSeen }\r\n            : user\r\n        )\r\n      };\r\n\r\n    // === MENSAGENS ===\r\n    case RECEIVE_MESSAGE:\r\n      const newMessage = {\r\n        ...action.payload,\r\n        id: action.payload.id || `msg_${Date.now()}_${Math.random()}`,\r\n        timestamp: action.payload.timestamp || Date.now()\r\n      };\r\n      \r\n      return {\r\n        ...state,\r\n        messages: [\r\n          ...state.messages.slice(-state.chatSettings.maxMessages + 1),\r\n          newMessage\r\n        ]\r\n      };\r\n\r\n    case RECEIVE_PRIVATE_MESSAGE:\r\n      const newPrivateMessage = {\r\n        ...action.payload,\r\n        id: action.payload.id || `private_${Date.now()}_${Math.random()}`,\r\n        timestamp: action.payload.timestamp || Date.now()\r\n      };\r\n      \r\n      return {\r\n        ...state,\r\n        privateMessages: [\r\n          ...state.privateMessages.slice(-state.chatSettings.maxMessages + 1),\r\n          newPrivateMessage\r\n        ]\r\n      };\r\n\r\n    case CLEAR_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: [],\r\n        privateMessages: []\r\n      };\r\n\r\n    // === STATUS DE DIGITAÇÃO ===\r\n    case RECEIVE_TYPING_STATUS:\r\n      const { userId, userName, isTyping } = action.payload;\r\n      \r\n      if (isTyping) {\r\n        return {\r\n          ...state,\r\n          typingUsers: [\r\n            ...state.typingUsers.filter(user => user.userId !== userId),\r\n            { userId, userName, isTyping: true, timestamp: Date.now() }\r\n          ]\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          typingUsers: state.typingUsers.filter(user => user.userId !== userId)\r\n        };\r\n      }\r\n\r\n    // === NOTIFICAÇÕES ===\r\n    case RECEIVE_USER_JOINED:\r\n    case RECEIVE_USER_LEFT:\r\n      const notification = {\r\n        id: `notification_${Date.now()}_${Math.random()}`,\r\n        type: action.type === RECEIVE_USER_JOINED ? 'user_joined' : 'user_left',\r\n        message: action.payload.message,\r\n        userId: action.payload.userId,\r\n        timestamp: action.payload.timestamp || Date.now()\r\n      };\r\n      \r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications.slice(-19),\r\n          notification\r\n        ]\r\n      };\r\n\r\n    case ADD_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications.slice(-19),\r\n          {\r\n            id: action.payload.id || `notification_${Date.now()}`,\r\n            ...action.payload,\r\n            timestamp: action.payload.timestamp || Date.now()\r\n          }\r\n        ]\r\n      };\r\n\r\n    case REMOVE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(notif => notif.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// === REDUCER PARA USUÁRIO ===\r\nconst userReducer = (state = userInitialState, action) => {\r\n  switch (action.type) {\r\n    case SELECT_AVATAR:\r\n      return {\r\n        ...state,\r\n        selectedAvatar: action.payload\r\n      };\r\n\r\n    case SET_USER_NAME:\r\n      return {\r\n        ...state,\r\n        userName: action.payload\r\n      };\r\n\r\n    case SET_USER_PREFERENCES:\r\n      return {\r\n        ...state,\r\n        preferences: {\r\n          ...state.preferences,\r\n          ...action.payload\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// === REDUCER COMBINADO ===\r\nconst rootReducer = combineReducers({\r\n  map: mapReducer,\r\n  communication: communicationReducer,\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// === SELETORES PARA MAPA ===\r\nexport const selectMapGuideVisible = (state) => state.map?.showGuide || false;\r\nexport const selectMapCenter = (state) => state.map?.center || { lat: -22.2086, lng: -47.5988 };\r\nexport const selectMapZoom = (state) => state.map?.zoom || 14;\r\nexport const selectMapLayers = (state) => state.map?.layers || {};\r\nexport const selectMapMarkers = (state) => state.map?.markers || [];\r\n\r\n// === SELETORES PARA COMUNICAÇÃO ===\r\nexport const selectOnlineUsers = (state) => state.communication?.onlineUsers || [];\r\nexport const selectMessages = (state) => state.communication?.messages || [];\r\nexport const selectPrivateMessages = (state) => state.communication?.privateMessages || [];\r\nexport const selectTypingUsers = (state) => state.communication?.typingUsers || [];\r\nexport const selectNotifications = (state) => state.communication?.notifications || [];\r\nexport const selectChatSettings = (state) => state.communication?.chatSettings || {};\r\n\r\n// === SELETORES PARA USUÁRIO ===\r\nexport const selectSelectedAvatar = (state) => state.user?.selectedAvatar || null;\r\nexport const selectUserName = (state) => state.user?.userName || '';\r\nexport const selectUserPreferences = (state) => state.user?.preferences || {};\r\n\r\n// Seletor para mensagens privadas de um usuário específico\r\nexport const selectPrivateMessagesWithUser = (state, userId) => {\r\n  const messages = selectPrivateMessages(state);\r\n  const currentUserId = state.socket?.id;\r\n  \r\n  return messages.filter(msg => \r\n    (msg.senderId === userId && msg.recipientId === currentUserId) ||\r\n    (msg.senderId === currentUserId && msg.recipientId === userId)\r\n  );\r\n};\r\n\r\n// Seletor para usuários online excluindo o usuário atual\r\nexport const selectOtherOnlineUsers = (state) => {\r\n  const onlineUsers = selectOnlineUsers(state);\r\n  const currentUserId = state.socket?.id;\r\n  \r\n  return onlineUsers.filter(user => user.id !== currentUserId);\r\n};\r\n\r\n// === ACTION CREATORS PARA MAPA ===\r\nexport const showMapGuide = () => ({\r\n  type: SHOW_MAP_GUIDE\r\n});\r\n\r\nexport const hideMapGuide = () => ({\r\n  type: HIDE_MAP_GUIDE\r\n});\r\n\r\nexport const setMapCenter = (center) => ({\r\n  type: SET_MAP_CENTER,\r\n  payload: center\r\n});\r\n\r\nexport const setMapZoom = (zoom) => ({\r\n  type: SET_MAP_ZOOM,\r\n  payload: zoom\r\n});\r\n\r\nexport const toggleMapLayer = (layerName) => ({\r\n  type: TOGGLE_MAP_LAYER,\r\n  payload: layerName\r\n});\r\n\r\nexport const setMapMarkers = (markers) => ({\r\n  type: SET_MAP_MARKERS,\r\n  payload: markers\r\n});\r\n\r\nexport const addMapMarker = (marker) => ({\r\n  type: ADD_MAP_MARKER,\r\n  payload: marker\r\n});\r\n\r\nexport const removeMapMarker = (markerId) => ({\r\n  type: REMOVE_MAP_MARKER,\r\n  payload: markerId\r\n});\r\n\r\nexport const updateMapMarker = (marker) => ({\r\n  type: UPDATE_MAP_MARKER,\r\n  payload: marker\r\n});\r\n\r\n// === ACTION CREATORS PARA COMUNICAÇÃO ===\r\nexport const setOnlineUsers = (users) => ({\r\n  type: SET_ONLINE_USERS,\r\n  payload: users\r\n});\r\n\r\nexport const addOnlineUser = (user) => ({\r\n  type: ADD_ONLINE_USER,\r\n  payload: user\r\n});\r\n\r\nexport const removeOnlineUser = (userId) => ({\r\n  type: REMOVE_ONLINE_USER,\r\n  payload: userId\r\n});\r\n\r\nexport const receiveMessage = (message) => ({\r\n  type: RECEIVE_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const receivePrivateMessage = (message) => ({\r\n  type: RECEIVE_PRIVATE_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const updateUserStatus = (userId, status, lastSeen) => ({\r\n  type: UPDATE_USER_STATUS,\r\n  payload: { userId, status, lastSeen }\r\n});\r\n\r\nexport const receiveTypingStatus = (userId, userName, isTyping) => ({\r\n  type: RECEIVE_TYPING_STATUS,\r\n  payload: { userId, userName, isTyping }\r\n});\r\n\r\nexport const clearMessages = () => ({\r\n  type: CLEAR_MESSAGES\r\n});\r\n\r\nexport const addNotification = (notification) => ({\r\n  type: ADD_NOTIFICATION,\r\n  payload: notification\r\n});\r\n\r\nexport const removeNotification = (notificationId) => ({\r\n  type: REMOVE_NOTIFICATION,\r\n  payload: notificationId\r\n});\r\n\r\n// === ACTION CREATORS PARA USUÁRIO ===\r\nexport const selectAvatar = (avatar) => ({\r\n  type: SELECT_AVATAR,\r\n  payload: avatar\r\n});\r\n\r\nexport const setUserName = (name) => ({\r\n  type: SET_USER_NAME,\r\n  payload: name\r\n});\r\n\r\nexport const setUserPreferences = (preferences) => ({\r\n  type: SET_USER_PREFERENCES,\r\n  payload: preferences\r\n});"]},"metadata":{},"sourceType":"module"}