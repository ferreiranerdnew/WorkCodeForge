{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar react = require('@emotion/react');\n\nvar react$1 = require('react');\n\nvar range = _interopDefault(require('lodash.range'));\n\nvar uniqueId = _interopDefault(require('lodash.uniqueid'));\n\nvar classNames = _interopDefault(require('classnames'));\n\nvar note = require('@tonaljs/note');\n\nvar interval = require('@tonaljs/interval');\n\nvar color = _interopDefault(require('color'));\n\nvar keyboardKey = require('keyboard-key');\n\nvar useLayoutEffect = typeof window !== 'undefined' ? react$1.useLayoutEffect : react$1.useEffect;\n\nfunction set(array, pos, item) {\n  var newArray = array.slice(0);\n  newArray[pos] = item;\n  return newArray;\n}\n\nvar makeTheme = function makeTheme(theme) {\n  return theme;\n};\n\nvar spanishTheme = /*#__PURE__*/makeTheme({\n  description: 'A typical Spanish guitar with a brown fretboard and golden details',\n  color: '#333333',\n  nut: {\n    color: '#fffacd'\n  },\n  fret: {\n    color: '#9e6429',\n    separator: {\n      color: '#daa520',\n      shadow: true\n    },\n    counter: {\n      color: '#606c76'\n    }\n  },\n  string: {\n    color: function color() {\n      return '#eeeeee';\n    }\n  },\n  finger: {\n    text: {\n      color: '#606c76'\n    },\n    color: 'white'\n  }\n});\n\nvar sw = function sw(theme) {\n  return theme.fret.separator.width === 'md' ? 0.7 : 0.3;\n};\n\nvar stringHeight = 3.33125;\n\nvar getStyles = function (theme) {\n  return react.css({\n    fontFamily: \"'Roboto', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    position: 'relative',\n    boxSizing: 'border-box',\n    maxWidth: '100%',\n    overflowY: 'auto',\n    borderTopColor: theme.color,\n    borderTopStyle: 'solid',\n    borderTopWidth: '0.5em',\n    overscrollBehaviorX: 'none',\n    '&.lefty': {\n      direction: 'rtl',\n      '.marker': {\n        transform: 'scale(-1, 1)'\n      },\n      '.mute': {\n        left: 'auto',\n        right: 0\n      }\n    },\n    '*, *::before, *::after': {\n      boxSizing: 'border-box'\n    },\n    '.frets': {\n      display: 'flex',\n      position: 'relative',\n      '.fret': {\n        width: '10em',\n        flexShrink: 0,\n        position: 'relative',\n        '&.nut,&.mute': {\n          width: '7em'\n        },\n        '&.mute': {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        }\n      }\n    },\n    '.frame': {\n      height: '2em',\n      '.counter': {\n        fontWeight: 'bold',\n        color: theme.fret.counter.color\n      },\n      '.fret': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: theme.color\n      }\n    },\n    '.strings': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      position: 'relative',\n      minHeight: stringHeight * 3 + \"em\",\n      '.string': {\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        '.fret': {\n          display: 'flex',\n          alignItems: 'center',\n          '.actual-string': {\n            transition: 'opacity ease-in-out 0.1s',\n            content: '\"\"',\n            width: '100%',\n            height: '0.65em',\n            position: 'absolute',\n            left: '0'\n          },\n          label: {\n            fontSize: '1em',\n            width: '100%',\n            height: stringHeight + \"em\",\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            margin: 0\n          },\n          '&:hover input:not(:disabled):not(:checked) ~ .finger': {\n            opacity: 0.5\n          },\n          'input:not(:disabled)': {\n            height: '100%',\n            width: '100%'\n          },\n          'input:not(:disabled),input:not(:disabled) ~ .finger': {\n            cursor: 'pointer'\n          },\n          input: {\n            position: 'absolute',\n            margin: 0,\n            opacity: 0,\n            '&:checked ~ .finger': {\n              opacity: 1\n            },\n            '&:focus:not(:disabled) ~ .finger': {\n              boxShadow: '0 0 0 0.2em rgba(66, 153, 225, 0.5)'\n            }\n          },\n          '&.mute': {\n            'input:checked ~ .finger': {\n              opacity: 0\n            },\n            'input:focus ~ .finger,&:hover input:checked ~ .finger': {\n              opacity: 0.5\n            }\n          }\n        }\n      }\n    },\n    '.fretboard': {\n      position: 'absolute',\n      left: '0',\n      right: '0',\n      top: '0',\n      bottom: '0',\n      '.fret': {\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        justifyContent: 'end',\n        backgroundColor: theme.fret.color,\n        '&.nut': {\n          backgroundColor: theme.nut.color\n        },\n        '&:not(.nut)::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '0',\n          bottom: '0',\n          width: sw(theme) + \"em\",\n          backgroundColor: theme.fret.separator.color,\n          borderRight: theme.fret.separator.shadow ? \"solid \" + sw(theme) / 2 + \"em \" + color(theme.fret.separator.color).darken(0.1) : 0,\n          borderRadius: theme.fret.separator.radius ? '3px' : 0,\n          display: 'inline-block'\n        },\n        '.marker': {\n          position: 'absolute',\n          left: '0',\n          right: '0',\n          top: '0',\n          bottom: '0',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }\n      }\n    },\n    '.finger': {\n      color: theme.finger.text.color,\n      transition: 'opacity ease-in-out 0.1s',\n      background: theme.finger.color,\n      width: '5em',\n      padding: '0',\n      height: 3.5 / 1.5 + \"em\",\n      borderRadius: '20px',\n      borderBottom: \"solid 0.2em \" + color(theme.finger.color).darken(0.35),\n      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.16), 0 1px 2px rgba(0, 0, 0, 0.23)',\n      fontWeight: 'bold',\n      opacity: 0,\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative'\n    },\n    '.sr-only': {\n      position: 'absolute',\n      width: '1px',\n      height: '1px',\n      padding: 0,\n      margin: '-1px',\n      overflow: 'hidden',\n      clip: 'rect(0, 0, 0, 0)',\n      whiteSpace: 'nowrap',\n      borderWidth: 0\n    }\n  });\n};\n/** @jsx jsx */\n\n\nfunction getRenderFingerSpn(tuning) {\n  return function (string, fret) {\n    var _get = note.get(note.fromMidiSharps(tuning[string] + fret)),\n        letter = _get.letter,\n        acc = _get.acc,\n        oct = _get.oct;\n\n    return react.jsx(\"span\", null, letter, acc === '#' ? '♯' : acc === 'b' ? '♭' : '', react.jsx(\"sub\", {\n      \"aria-label\": \"octave \" + oct\n    }, oct));\n  };\n}\n\nvar mod = function mod(n, m) {\n  return (m + n % m) % m;\n};\n\nfunction getRenderFingerRelative(tuning, root) {\n  return function (string, fret) {\n    return react.jsx(react$1.Fragment, null, range(12).map(interval.fromSemitones)[mod(tuning[string] + fret - root, 12)]);\n  };\n}\n\nfunction Frets(props) {\n  var _props$frets = props.frets,\n      from = _props$frets.from,\n      amount = _props$frets.amount;\n  return react.jsx(\"div\", {\n    className: classNames(props.className, 'frets'),\n    onMouseEnter: props.onMouseEnter\n  }, props.currentFret !== undefined && react.jsx(\"div\", {\n    className: \"fret mute\",\n    style: {\n      zIndex: props.currentFret === -1 ? 1 : undefined\n    }\n  }, props.children == null ? void 0 : props.children(-1)), range(from, from + amount + 1).map(function (fret) {\n    return react.jsx(\"div\", {\n      className: classNames('fret', {\n        nut: fret === 0\n      }),\n      key: fret\n    }, props.children == null ? void 0 : props.children(fret));\n  }));\n}\n\nfunction Guitar(props) {\n  var _props$strings = props.strings,\n      strings = _props$strings === void 0 ? [] : _props$strings,\n      _props$frets2 = props.frets,\n      frets = _props$frets2 === void 0 ? {\n    from: 0,\n    amount: 22\n  } : _props$frets2,\n      _props$lefty = props.lefty,\n      lefty = _props$lefty === void 0 ? false : _props$lefty,\n      _props$center = props.center,\n      center = _props$center === void 0 ? false : _props$center,\n      renderFinger = props.renderFinger,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? spanishTheme : _props$theme,\n      playOnHover = props.playOnHover;\n  var id = react$1.useMemo(function () {\n    return props.id || uniqueId('guitar-');\n  }, [props.id]);\n  var styles = react$1.useMemo(function () {\n    return getStyles(theme);\n  }, [theme]);\n  var ref = react$1.useRef(null);\n\n  var focusString = function focusString(string, fret) {\n    var _ref$current, _ref$current$querySel;\n\n    if (fret === void 0) {\n      fret = strings[string];\n    }\n\n    return (_ref$current = ref.current) == null ? void 0 : _ref$current.querySelector == null ? void 0 : (_ref$current$querySel = _ref$current.querySelector(\"input[name=\\\"\" + id + \"-string-\" + string + \"\\\"][value=\\\"\" + fret + \"\\\"]\")) == null ? void 0 : _ref$current$querySel.focus();\n  };\n\n  var releaseString = function releaseString(string) {\n    return pressString(string, strings[string] === 0 ? -1 : 0);\n  };\n\n  var pressString = function pressString(string, fret) {\n    focusString(string, fret);\n    props.onChange == null ? void 0 : props.onChange(set(strings, string, fret));\n  };\n\n  var getNavigationDelta = function getNavigationDelta(e) {\n    switch (keyboardKey.getKey(e)) {\n      case 'ArrowDown':\n        return {\n          x: 0,\n          y: 1\n        };\n\n      case 'ArrowUp':\n        return {\n          x: 0,\n          y: -1\n        };\n\n      case 'ArrowRight':\n        return {\n          x: lefty ? -1 : 1,\n          y: 0\n        };\n\n      case 'ArrowLeft':\n        return {\n          x: lefty ? 1 : -1,\n          y: 0\n        };\n\n      default:\n        return null;\n    }\n  };\n\n  useLayoutEffect(function () {\n    var fretsNode = ref.current;\n\n    if (center && fretsNode) {\n      var children = fretsNode.querySelectorAll('.fret');\n      var pressedFrets = strings.filter(function (fret) {\n        return fret > 0;\n      });\n      var minFret = Math.min.apply(Math, pressedFrets);\n      var maxFret = Math.max.apply(Math, pressedFrets);\n      var toFret = minFret + Math.floor((maxFret - minFret) / 2);\n      var fretNode = children[toFret];\n\n      if (fretNode) {\n        fretsNode.scrollLeft = fretNode.offsetLeft - fretsNode.offsetWidth / 2 + fretNode.offsetWidth / 2;\n      }\n    }\n  }, [ref, strings, center, lefty]);\n\n  var _useState = react$1.useState(0),\n      focusedString = _useState[0],\n      setFocusedString = _useState[1];\n\n  return react.jsx(\"div\", {\n    id: id,\n    ref: ref,\n    css: styles,\n    className: classNames('guitar', {\n      lefty: lefty\n    }, props.className),\n    onKeyDown: function onKeyDown(e) {\n      var delta = getNavigationDelta(e.nativeEvent);\n\n      if (delta) {\n        var string = mod(focusedString + delta.y, strings.length);\n        var fret = strings[string] + delta.x;\n        pressString(string, fret > frets.from + frets.amount ? -1 : fret < -1 ? frets.from + frets.amount : fret);\n        e.preventDefault();\n      }\n    }\n  }, react.jsx(\"div\", {\n    className: \"sr-only\"\n  }, \"This is a guitar with \", strings.length, \" strings and \", frets.amount, \" frets, starting from \", frets.from, \". Its theme describes it as:\", ' ', theme.description, \".\", props.onChange && react.jsx(\"span\", null, \"Once you focus on a string you will be able to navigate strings and frets using the arrow keys.\"), props.onPlay && react.jsx(\"span\", null, \"When a specific string is focused you can play it by pressing 'p'.\")), react.jsx(\"div\", {\n    className: \"sr-only\",\n    role: \"status\"\n  }, \"Current fretting: \", strings.join(', '), \".\"), react.jsx(\"div\", {\n    className: \"strings\"\n  }, react.jsx(Frets, {\n    className: \"fretboard\",\n    frets: frets\n  }, theme.fret.marker ? function (fret) {\n    return react.jsx(\"div\", {\n      className: \"marker\"\n    }, theme.fret.marker == null ? void 0 : theme.fret.marker(fret));\n  } : undefined), strings.map(function (currentFret, string) {\n    return react.jsx(\"fieldset\", {\n      key: string,\n      className: \"string\"\n    }, react.jsx(\"legend\", {\n      className: \"sr-only\"\n    }, \"String \", string + 1, \".\", ' ', currentFret === -1 && 'This string is muted.'), react.jsx(Frets, {\n      currentFret: currentFret,\n      frets: frets,\n      onMouseEnter: function onMouseEnter() {\n        return playOnHover && (props.onPlay == null ? void 0 : props.onPlay(string));\n      }\n    }, function (fret) {\n      return react.jsx(\"label\", null, react.jsx(\"span\", {\n        className: \"sr-only\"\n      }, \"Fret \", fret, \" \", fret === -1 && '(Mute)', \".\"), fret >= 0 && react.jsx(\"span\", {\n        className: \"actual-string\",\n        style: {\n          opacity: currentFret === -1 ? 0.2 : 1,\n          borderBottom: \"solid 0.2em \" + color(theme.string.color(string)).darken(0.35),\n          backgroundColor: theme.string.color(string)\n        }\n      }), react.jsx(\"input\", {\n        disabled: !props.onChange,\n        type: \"radio\",\n        name: id + \"-string-\" + string,\n        value: fret,\n        checked: currentFret === fret,\n        onChange: function onChange(e) {\n          props.onChange == null ? void 0 : props.onChange(set(strings, string, fret));\n          e.target.focus();\n        },\n        onClick: function onClick() {\n          return fret === currentFret && releaseString(string);\n        },\n        onKeyDown: function onKeyDown(e) {\n          switch (e.keyCode) {\n            case 80:\n              props.onPlay == null ? void 0 : props.onPlay(string);\n              break;\n\n            case 13:\n              releaseString(string);\n              e.preventDefault();\n          }\n        },\n        onFocus: function onFocus() {\n          return setFocusedString(string);\n        }\n      }), react.jsx(\"span\", {\n        className: \"finger\"\n      }, renderFinger == null ? void 0 : renderFinger(string, fret === -1 ? 0 : fret)));\n    }));\n  })), react.jsx(Frets, {\n    className: \"frame\",\n    frets: frets\n  }, function (fret) {\n    return fret !== 0 ? react.jsx(\"span\", {\n      className: \"counter\"\n    }, fret) : null;\n  }));\n}\n\nexports.default = Guitar;\nexports.getRenderFingerRelative = getRenderFingerRelative;\nexports.getRenderFingerSpn = getRenderFingerSpn;\nexports.spanishTheme = spanishTheme;","map":{"version":3,"sources":["../src/hooks/layoutEffect.ts","../src/util/arrays.ts","../src/util/theme.ts","../src/styles/index.ts","../src/index.tsx"],"names":["useLayoutEffect","useEffect","set","array","pos","item","newArray","makeTheme","description","color","nut","fret","separator","shadow","counter","string","finger","text","sw","theme","stringHeight","css","fontFamily","position","boxSizing","maxWidth","overflowY","borderTopColor","borderTopStyle","borderTopWidth","overscrollBehaviorX","direction","transform","left","right","display","width","flexShrink","top","height","fontWeight","alignItems","justifyContent","background","flexDirection","minHeight","margin","padding","border","transition","content","label","fontSize","opacity","cursor","input","boxShadow","bottom","backgroundColor","borderRight","borderRadius","borderBottom","overflow","clip","whiteSpace","borderWidth","getRenderFingerSpn","tuning","letter","acc","oct","get","fromMidiSharps","jsx","mod","m","n","getRenderFingerRelative","root","Fragment","range","fromSemitones","from","amount","props","className","classNames","onMouseEnter","style","zIndex","undefined","children","key","Guitar","strings","frets","lefty","center","renderFinger","playOnHover","id","useMemo","uniqueId","styles","getStyles","ref","useRef","focusString","releaseString","pressString","getNavigationDelta","getKey","x","y","fretsNode","pressedFrets","minFret","Math","maxFret","toFret","fretNode","focusedString","setFocusedString","useState","onKeyDown","delta","e","length","role","Frets","marker","currentFret","disabled","onChange","type","name","value","checked","onClick","onFocus"],"mappings":"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","sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nexport default typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","export function set<T>(array: T[], pos: number, item: T): T[] {\n  const newArray = array.slice(0)\n  newArray[pos] = item\n  return newArray\n}\n","export type Theme = {\n  description: string\n  color: string\n  nut: { color: string }\n  fret: {\n    color: string\n    separator: {\n      color: string\n      radius?: boolean\n      shadow?: boolean\n      width?: 'sm' | 'md'\n    }\n    marker?: (fret: number) => JSX.Element | null\n    counter: { color: string }\n  }\n  string: { color: (string: number) => string }\n  finger: { text: { color: string }; color: string }\n}\nconst makeTheme = (theme: Theme) => theme\n\nexport default makeTheme({\n  description:\n    'A typical Spanish guitar with a brown fretboard and golden details',\n  color: '#333333',\n  nut: { color: '#fffacd' },\n  fret: {\n    color: '#9e6429',\n    separator: { color: '#daa520', shadow: true },\n    counter: { color: '#606c76' },\n  },\n  string: { color: () => '#eeeeee' },\n  finger: { text: { color: '#606c76' }, color: 'white' },\n})\n","import { css } from '@emotion/react'\nimport { Theme } from '..'\nimport color from 'color'\n\nconst sw = (theme: Theme) => (theme.fret.separator.width === 'md' ? 0.7 : 0.3)\nconst stringHeight = 3.33125\n\nexport default (theme: Theme) =>\n  css({\n    fontFamily: \"'Roboto', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    position: 'relative',\n    boxSizing: 'border-box',\n    maxWidth: '100%',\n    overflowY: 'auto',\n    borderTopColor: theme.color,\n    borderTopStyle: 'solid',\n    borderTopWidth: '0.5em',\n    overscrollBehaviorX: 'none',\n\n    '&.lefty': {\n      direction: 'rtl',\n      '.marker': {\n        transform: 'scale(-1, 1)',\n      },\n      '.mute': {\n        left: 'auto',\n        right: 0,\n      },\n    },\n\n    '*, *::before, *::after': {\n      boxSizing: 'border-box',\n    },\n\n    '.frets': {\n      display: 'flex',\n      position: 'relative',\n      '.fret': {\n        width: '10em',\n        flexShrink: 0,\n        position: 'relative',\n        '&.nut,&.mute': {\n          width: '7em',\n        },\n        '&.mute': {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        },\n      },\n    },\n\n    '.frame': {\n      height: '2em',\n      '.counter': {\n        fontWeight: 'bold',\n        color: theme.fret.counter.color,\n      },\n      '.fret': {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: theme.color,\n      },\n    },\n\n    '.strings': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      position: 'relative',\n      minHeight: `${stringHeight * 3}em`,\n\n      '.string': {\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        '.fret': {\n          display: 'flex',\n          alignItems: 'center',\n\n          '.actual-string': {\n            transition: 'opacity ease-in-out 0.1s',\n            content: '\"\"',\n            width: '100%',\n            height: '0.65em',\n            position: 'absolute',\n            left: '0',\n          },\n\n          label: {\n            fontSize: '1em',\n            width: '100%',\n            height: `${stringHeight}em`,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            margin: 0,\n          },\n\n          '&:hover input:not(:disabled):not(:checked) ~ .finger': {\n            opacity: 0.5,\n          },\n\n          'input:not(:disabled)': {\n            height: '100%',\n            width: '100%',\n          },\n\n          'input:not(:disabled),input:not(:disabled) ~ .finger': {\n            cursor: 'pointer',\n          },\n\n          input: {\n            position: 'absolute',\n            margin: 0,\n            opacity: 0,\n            '&:checked ~ .finger': {\n              opacity: 1,\n            },\n            '&:focus:not(:disabled) ~ .finger': {\n              boxShadow: '0 0 0 0.2em rgba(66, 153, 225, 0.5)',\n            },\n          },\n          '&.mute': {\n            'input:checked ~ .finger': {\n              opacity: 0,\n            },\n            'input:focus ~ .finger,&:hover input:checked ~ .finger': {\n              opacity: 0.5,\n            },\n          },\n        },\n      },\n    },\n\n    '.fretboard': {\n      position: 'absolute',\n      left: '0',\n      right: '0',\n      top: '0',\n      bottom: '0',\n      '.fret': {\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        justifyContent: 'end',\n        backgroundColor: theme.fret.color,\n        '&.nut': {\n          backgroundColor: theme.nut.color,\n        },\n        '&:not(.nut)::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '0',\n          bottom: '0',\n          width: `${sw(theme)}em`,\n          backgroundColor: theme.fret.separator.color,\n          borderRight: theme.fret.separator.shadow\n            ? `solid ${sw(theme) / 2}em ${color(\n                theme.fret.separator.color\n              ).darken(0.1)}`\n            : 0,\n          borderRadius: theme.fret.separator.radius ? '3px' : 0,\n          display: 'inline-block',\n        },\n        '.marker': {\n          position: 'absolute',\n          left: '0',\n          right: '0',\n          top: '0',\n          bottom: '0',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n      },\n    },\n\n    '.finger': {\n      color: theme.finger.text.color,\n      transition: 'opacity ease-in-out 0.1s',\n      background: theme.finger.color,\n      width: '5em',\n      padding: '0',\n      height: `${3.5 / 1.5}em`,\n      borderRadius: '20px',\n      borderBottom: `solid 0.2em ${color(theme.finger.color).darken(0.35)}`,\n      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.16), 0 1px 2px rgba(0, 0, 0, 0.23)',\n      fontWeight: 'bold',\n      opacity: 0,\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n    },\n\n    '.sr-only': {\n      position: 'absolute',\n      width: '1px',\n      height: '1px',\n      padding: 0,\n      margin: '-1px',\n      overflow: 'hidden',\n      clip: 'rect(0, 0, 0, 0)',\n      whiteSpace: 'nowrap',\n      borderWidth: 0,\n    },\n  })\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react'\nimport { useRef, Fragment, useMemo, ReactElement, useState } from 'react'\nimport useLayoutEffect from './hooks/layoutEffect'\nimport range from 'lodash.range'\nimport uniqueId from 'lodash.uniqueid'\nimport { set } from './util/arrays'\nimport classNames from 'classnames'\nimport { get, fromMidiSharps } from '@tonaljs/note'\nimport { fromSemitones } from '@tonaljs/interval'\nimport spanishTheme, { Theme } from './util/theme'\nimport getStyles from './styles'\nimport color from 'color'\nimport { getKey } from 'keyboard-key'\n\nexport { spanishTheme, Theme }\n\nexport function getRenderFingerSpn(tuning: number[]) {\n  return (string: number, fret: number) => {\n    const { letter, acc, oct } = get(fromMidiSharps(tuning[string] + fret))\n    return (\n      <span>\n        {letter}\n        {acc === '#' ? '♯' : acc === 'b' ? '♭' : ''}\n        <sub aria-label={`octave ${oct}`}>{oct}</sub>\n      </span>\n    )\n  }\n}\n\nconst mod = (n: number, m: number) => (m + (n % m)) % m\n\nexport function getRenderFingerRelative(tuning: number[], root: number) {\n  return (string: number, fret: number) => (\n    <Fragment>\n      {range(12).map(fromSemitones)[mod(tuning[string] + fret - root, 12)]}\n    </Fragment>\n  )\n}\n\nfunction Frets(props: {\n  className?: string\n  currentFret?: number\n  frets: {\n    from: number\n    amount: number\n  }\n  children?: (fret: number) => ReactElement | ReactElement[] | null\n  onMouseEnter?: () => void\n}) {\n  const { from, amount } = props.frets\n  return (\n    <div\n      className={classNames(props.className, 'frets')}\n      onMouseEnter={props.onMouseEnter}\n    >\n      {props.currentFret !== undefined && (\n        <div\n          className=\"fret mute\"\n          style={{ zIndex: props.currentFret === -1 ? 1 : undefined }}\n        >\n          {props.children?.(-1)}\n        </div>\n      )}\n      {range(from, from + amount + 1).map((fret) => (\n        <div className={classNames('fret', { nut: fret === 0 })} key={fret}>\n          {props.children?.(fret)}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default function Guitar(props: {\n  id?: string\n  className?: string\n  strings?: number[]\n  frets?: {\n    from: number\n    amount: number\n  }\n  lefty?: boolean\n  center?: boolean\n  renderFinger?: (string: number, fret: number) => JSX.Element\n  theme?: Theme\n  playOnHover?: boolean\n  onChange?: (strings: number[]) => void\n  onPlay?: (string: number) => void\n}) {\n  const {\n    strings = [],\n    frets = { from: 0, amount: 22 },\n    lefty = false,\n    center = false,\n    renderFinger,\n    theme = spanishTheme,\n    playOnHover,\n  } = props\n  const id = useMemo(() => props.id || uniqueId('guitar-'), [props.id])\n  const styles = useMemo(() => getStyles(theme), [theme])\n  const ref = useRef(null as HTMLDivElement | null)\n  const focusString = (string: number, fret: number = strings[string]) =>\n    ref.current\n      ?.querySelector?.<HTMLInputElement>(\n        `input[name=\"${id}-string-${string}\"][value=\"${fret}\"]`\n      )\n      ?.focus()\n  const releaseString = (string: number) =>\n    pressString(string, strings[string] === 0 ? -1 : 0)\n  const pressString = (string: number, fret: number) => {\n    focusString(string, fret)\n    props.onChange?.(set(strings, string, fret))\n  }\n  const getNavigationDelta = (e: KeyboardEvent) => {\n    switch (getKey(e)) {\n      case 'ArrowDown':\n        return { x: 0, y: 1 }\n      case 'ArrowUp':\n        return { x: 0, y: -1 }\n      case 'ArrowRight':\n        return { x: lefty ? -1 : 1, y: 0 }\n      case 'ArrowLeft':\n        return { x: lefty ? 1 : -1, y: 0 }\n      default:\n        return null\n    }\n  }\n  useLayoutEffect(() => {\n    const fretsNode = ref.current\n    if (center && fretsNode) {\n      const children = fretsNode.querySelectorAll('.fret')\n      const pressedFrets = strings.filter((fret) => fret > 0)\n      const minFret = Math.min.apply(Math, pressedFrets)\n      const maxFret = Math.max.apply(Math, pressedFrets)\n      const toFret = minFret + Math.floor((maxFret - minFret) / 2)\n      const fretNode = children[toFret] as HTMLElement | undefined\n      if (fretNode) {\n        fretsNode.scrollLeft =\n          fretNode.offsetLeft -\n          fretsNode.offsetWidth / 2 +\n          fretNode.offsetWidth / 2\n      }\n    }\n  }, [ref, strings, center, lefty])\n  const [focusedString, setFocusedString] = useState(0)\n  return (\n    <div\n      id={id}\n      ref={ref}\n      css={styles}\n      className={classNames('guitar', { lefty }, props.className)}\n      onKeyDown={(e) => {\n        const delta = getNavigationDelta(e.nativeEvent)\n        if (delta) {\n          const string = mod(focusedString + delta.y, strings.length)\n          const fret = strings[string] + delta.x\n          pressString(\n            string,\n            fret > frets.from + frets.amount\n              ? -1\n              : fret < -1\n              ? frets.from + frets.amount\n              : fret\n          )\n          e.preventDefault()\n        }\n      }}\n    >\n      <div className=\"sr-only\">\n        This is a guitar with {strings.length} strings and {frets.amount} frets,\n        starting from {frets.from}. Its theme describes it as:{' '}\n        {theme.description}.\n        {props.onChange && (\n          <span>\n            Once you focus on a string you will be able to navigate strings and\n            frets using the arrow keys.\n          </span>\n        )}\n        {props.onPlay && (\n          <span>\n            When a specific string is focused you can play it by pressing 'p'.\n          </span>\n        )}\n      </div>\n      <div className=\"sr-only\" role=\"status\">\n        Current fretting: {strings.join(', ')}.\n      </div>\n      <div className=\"strings\">\n        <Frets className=\"fretboard\" frets={frets}>\n          {theme.fret.marker\n            ? (fret) => (\n                <div className=\"marker\">{theme.fret.marker?.(fret)}</div>\n              )\n            : undefined}\n        </Frets>\n        {strings.map((currentFret, string) => (\n          <fieldset key={string} className=\"string\">\n            <legend className=\"sr-only\">\n              String {string + 1}.{' '}\n              {currentFret === -1 && 'This string is muted.'}\n            </legend>\n            <Frets\n              currentFret={currentFret}\n              frets={frets}\n              onMouseEnter={() => playOnHover && props.onPlay?.(string)}\n            >\n              {(fret) => (\n                <label>\n                  <span className=\"sr-only\">\n                    Fret {fret} {fret === -1 && '(Mute)'}.\n                  </span>\n                  {fret >= 0 && (\n                    <span\n                      className=\"actual-string\"\n                      style={{\n                        opacity: currentFret === -1 ? 0.2 : 1,\n                        borderBottom: `solid 0.2em ${color(\n                          theme.string.color(string)\n                        ).darken(0.35)}`,\n                        backgroundColor: theme.string.color(string),\n                      }}\n                    />\n                  )}\n                  <input\n                    disabled={!props.onChange}\n                    type=\"radio\"\n                    name={`${id}-string-${string}`}\n                    value={fret}\n                    checked={currentFret === fret}\n                    onChange={(e) => {\n                      props.onChange?.(set(strings, string, fret))\n                      e.target.focus()\n                    }}\n                    onClick={() =>\n                      fret === currentFret && releaseString(string)\n                    }\n                    onKeyDown={(e) => {\n                      switch (e.keyCode) {\n                        case 80:\n                          props.onPlay?.(string)\n                          break\n                        case 13:\n                          releaseString(string)\n                          e.preventDefault()\n                      }\n                    }}\n                    onFocus={() => setFocusedString(string)}\n                  />\n                  <span className=\"finger\">\n                    {renderFinger?.(string, fret === -1 ? 0 : fret)}\n                  </span>\n                </label>\n              )}\n            </Frets>\n          </fieldset>\n        ))}\n      </div>\n      <Frets className=\"frame\" frets={frets}>\n        {(fret) =>\n          fret !== 0 ? <span className=\"counter\">{fret}</span> : null\n        }\n      </Frets>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}