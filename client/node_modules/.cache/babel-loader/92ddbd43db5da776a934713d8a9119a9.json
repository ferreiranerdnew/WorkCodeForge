{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\components\\\\projects\\\\ProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '../button/Button';\nimport DatePicker from 'react-date-picker';\nimport User from '../users/User';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectForm(props) {\n  _s();\n\n  const userState = useSelector(state => {\n    // console.log(\"state:\", state);\n    return state.user;\n  });\n  const [name, setName] = useState(props.name || '');\n  const [description, setDescription] = useState(props.description || '');\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [showUsers, setShowUsers] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    usersList,\n    onSave\n  } = props;\n\n  const validate = () => {\n    if (!!!name) {\n      setError('Please enter a name');\n      return;\n    }\n\n    if (!!!description) {\n      setError('Please enter a description');\n      return;\n    }\n\n    const selectedUsers = document.getElementsByClassName('user-list--selected');\n    const selectedUsersIDs = [];\n\n    for (const user of selectedUsers) {\n      selectedUsersIDs.push(parseInt(user.id));\n    }\n\n    const project = {\n      creatorID: userState.id,\n      name,\n      description,\n      startDate,\n      endDate,\n      users: selectedUsersIDs\n    };\n    setName('');\n    setDescription('');\n    setStartDate(new Date());\n    setEndDate(new Date());\n    setShowUsers(false);\n    setError('');\n    onSave(project);\n    document.getElementById('dialog-dark-rounded').close();\n  };\n\n  const cancel = () => {\n    setName('');\n    setDescription('');\n    setStartDate(new Date());\n    setEndDate(new Date());\n    setShowUsers(false);\n    setError('');\n    document.getElementById('dialog-dark-rounded').close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: () => {\n        setShowUsers(true);\n        document.getElementById('dialog-dark-rounded').showModal();\n      },\n      title: 'NEW'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: \"nes-dialog is-dark is-rounded\",\n      id: \"dialog-dark-rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        autoComplete: \"off\",\n        onSubmit: e => e.preventDefault(),\n        method: \"dialog\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Project name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: name,\n              type: \"text\",\n              onChange: e => {\n                setName(e.target.value);\n                setError('');\n              },\n              onKeyDown: ev => {\n                if (ev.code === 'Space' || ev.code === 'ArrowUp' || ev.code === 'ArrowDown' || ev.code === 'ArrowLeft' || ev.code === 'ArrowRight') {\n                  ev.stopPropagation();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: description,\n              type: \"text\",\n              onChange: e => {\n                setDescription(e.target.value);\n                setError('');\n              },\n              onKeyDown: ev => {\n                if (ev.code === 'Space' || ev.code === 'ArrowUp' || ev.code === 'ArrowDown' || ev.code === 'ArrowLeft' || ev.code === 'ArrowRight') {\n                  ev.stopPropagation();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-date-container\",\n          children: [showUsers && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Choose your team:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"rpgui users-container\",\n              children: usersList.map(user => {\n                if (user.id !== userState.id) {\n                  const {\n                    id,\n                    name,\n                    avatar\n                  } = user;\n                  return /*#__PURE__*/_jsxDEV(User, {\n                    id: id,\n                    avatar: avatar,\n                    name: name\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 25\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setStartDate,\n                value: startDate,\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setEndDate,\n                value: endDate,\n                minDate: new Date(startDate),\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cancel-submit\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancel,\n            title: 'cancel'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: validate,\n            title: 'submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectForm, \"nVBs8Nt8UMXPJ6q102zFZdGVqvo=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProjectForm;\nexport default ProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/components/projects/ProjectForm.js"],"names":["React","useState","Button","DatePicker","User","useSelector","ProjectForm","props","userState","state","user","name","setName","description","setDescription","startDate","setStartDate","Date","endDate","setEndDate","showUsers","setShowUsers","error","setError","usersList","onSave","validate","selectedUsers","document","getElementsByClassName","selectedUsersIDs","push","parseInt","id","project","creatorID","users","getElementById","close","cancel","showModal","e","preventDefault","target","value","ev","code","stopPropagation","map","avatar"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '../button/Button';\r\nimport DatePicker from 'react-date-picker';\r\nimport User from '../users/User';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction ProjectForm(props) {\r\n  const userState = useSelector((state) => {\r\n    // console.log(\"state:\", state);\r\n    return state.user;\r\n  });\r\n\r\n  const [name, setName] = useState(props.name || '');\r\n  const [description, setDescription] = useState(props.description || '');\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [showUsers, setShowUsers] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const { usersList, onSave } = props;\r\n\r\n  const validate = () => {\r\n    if (!!!name) {\r\n      setError('Please enter a name');\r\n      return;\r\n    }\r\n    if (!!!description) {\r\n      setError('Please enter a description');\r\n      return;\r\n    }\r\n\r\n    const selectedUsers = document.getElementsByClassName(\r\n      'user-list--selected'\r\n    );\r\n\r\n    const selectedUsersIDs = [];\r\n\r\n    for (const user of selectedUsers) {\r\n      selectedUsersIDs.push(parseInt(user.id));\r\n    }\r\n\r\n    const project = {\r\n      creatorID: userState.id,\r\n      name,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n      users: selectedUsersIDs\r\n    };\r\n\r\n    setName('');\r\n    setDescription('');\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError('');\r\n    onSave(project);\r\n    document.getElementById('dialog-dark-rounded').close();\r\n  };\r\n\r\n  const cancel = () => {\r\n    setName('');\r\n    setDescription('');\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError('');\r\n    document.getElementById('dialog-dark-rounded').close();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type='button'\r\n        onClick={() => {\r\n          setShowUsers(true);\r\n          document.getElementById('dialog-dark-rounded').showModal();\r\n        }}\r\n        title={'NEW'}\r\n      ></Button>\r\n      <dialog\r\n        className='nes-dialog is-dark is-rounded'\r\n        id='dialog-dark-rounded'\r\n      >\r\n        <form\r\n          className='form'\r\n          autoComplete='off'\r\n          onSubmit={(e) => e.preventDefault()}\r\n          method='dialog'\r\n        >\r\n          {error && <p className='error'>{error}</p>}\r\n          <div className='form-label'>\r\n            <label>\r\n              <p>Project name:</p>\r\n              <input\r\n                value={name}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              <p>Description:</p>\r\n              <textarea\r\n                value={description}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className='team-date-container'>\r\n            {showUsers && (\r\n              <label>\r\n                Choose your team:\r\n                <ul className='rpgui users-container'>\r\n                  {usersList.map((user) => {\r\n                    if (user.id !== userState.id) {\r\n                      const { id, name, avatar } = user;\r\n                      return (\r\n                        <User key={id} id={id} avatar={avatar} name={name} />\r\n                      );\r\n                    }\r\n                  })}\r\n                </ul>\r\n              </label>\r\n            )}\r\n\r\n            <div className='date'>\r\n              <label>\r\n                Start date:\r\n                <DatePicker\r\n                  onChange={setStartDate}\r\n                  value={startDate}\r\n                  className='date-size'\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                End date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={endDate}\r\n                  minDate={new Date(startDate)}\r\n                  className='date-size'\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className='cancel-submit'>\r\n            <Button onClick={cancel} title={'cancel'}></Button>\r\n            <Button onClick={validate} title={'submit'}></Button>\r\n          </div>\r\n        </form>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectForm;\r\n"]},"metadata":{},"sourceType":"module"}