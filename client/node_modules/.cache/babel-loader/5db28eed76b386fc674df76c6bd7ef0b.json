{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\components\\\\tasks\\\\TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../button/Button\";\nimport DatePicker from \"react-date-picker\";\nimport User from \"../users/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskForm(props) {\n  _s();\n\n  const [name, setName] = useState(props.name || \"\");\n  const [description, setDescription] = useState(props.description || \"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [priority, setPriority] = useState(0);\n  const [showUsers, setShowUsers] = useState(false);\n  const [error, setError] = useState(\"\");\n  const {\n    state,\n    onSave,\n    projectID\n  } = props;\n  const team = state.projectTeams.filter(team => {\n    return team.projectId === state.current_project;\n  });\n  const projectUsersList = [];\n\n  for (const member of team) {\n    for (const user of state.users) {\n      if (user.id === member.userId) {\n        projectUsersList.push(user);\n      }\n    }\n  }\n\n  const validate = () => {\n    if (!!!name) {\n      setError(\"Please enter a name\");\n      return;\n    }\n\n    if (!!!description) {\n      setError(\"Please enter a description\");\n      return;\n    }\n\n    const selectedUsers = document.getElementById(\"dialog-dark-rounded\").getElementsByClassName(\"user-list--selected\");\n    const selectedUsersIDs = [];\n\n    for (const user of selectedUsers) {\n      selectedUsersIDs.push(parseInt(user.id));\n    }\n\n    if (selectedUsersIDs.length === 0) {\n      setError(\"Please select at least one assignee\");\n      return;\n    }\n\n    const task = {\n      project_id: projectID,\n      sprint_id: null,\n      name,\n      description,\n      startDate,\n      endDate,\n      priority_level: priority,\n      users: selectedUsersIDs\n    };\n    setName(\"\");\n    setDescription(\"\");\n    setStartDate(new Date());\n    setEndDate(new Date());\n    setShowUsers(false);\n    setError(\"\");\n    onSave(task);\n    document.getElementById(\"dialog-dark-rounded\").close();\n  };\n\n  const cancel = () => {\n    setName(\"\");\n    setDescription(\"\");\n    setStartDate(new Date());\n    setEndDate(new Date());\n    setShowUsers(false);\n    setError(\"\");\n    document.getElementById(\"dialog-dark-rounded\").close();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.current_project !== 1 && /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      className: \"nes-btn is-primary\",\n      onClick: () => {\n        setShowUsers(true);\n        document.getElementById(\"dialog-dark-rounded\").showModal();\n      },\n      title: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: \"nes-dialog is-dark is-rounded\",\n      id: \"dialog-dark-rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        autoComplete: \"off\",\n        onSubmit: e => e.preventDefault(),\n        method: \"dialog\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            type: \"text\",\n            onChange: e => {\n              setName(e.target.value);\n              setError(\"\");\n            },\n            onKeyDown: ev => {\n              if (ev.code === \"Space\" || ev.code === \"ArrowUp\" || ev.code === \"ArrowDown\" || ev.code === \"ArrowLeft\" || ev.code === \"ArrowRight\") {\n                ev.stopPropagation();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            type: \"text\",\n            onChange: e => {\n              setDescription(e.target.value);\n              setError(\"\");\n            },\n            onKeyDown: ev => {\n              if (ev.code === \"Space\" || ev.code === \"ArrowUp\" || ev.code === \"ArrowDown\" || ev.code === \"ArrowLeft\" || ev.code === \"ArrowRight\") {\n                ev.stopPropagation();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-date-container\",\n          children: [showUsers && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Assignees:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"rpgui users-container\",\n              onClick: () => setError(\"\"),\n              children: projectUsersList.map(user => {\n                const {\n                  id,\n                  name,\n                  avatar\n                } = user;\n                return /*#__PURE__*/_jsxDEV(User, {\n                  id: id,\n                  avatar: avatar,\n                  name: name\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"rpgui-dropdown\",\n              onChange: e => setPriority(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 2,\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setStartDate,\n                value: startDate,\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setEndDate,\n                value: endDate,\n                minDate: new Date(startDate),\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cancel-submit\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancel,\n            title: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: validate,\n            title: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskForm, \"pbkP2gh7+27NNtCb6hgYJMTW98w=\");\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/components/tasks/TaskForm.js"],"names":["React","useState","useEffect","Button","DatePicker","User","TaskForm","props","name","setName","description","setDescription","startDate","setStartDate","Date","endDate","setEndDate","priority","setPriority","showUsers","setShowUsers","error","setError","state","onSave","projectID","team","projectTeams","filter","projectId","current_project","projectUsersList","member","user","users","id","userId","push","validate","selectedUsers","document","getElementById","getElementsByClassName","selectedUsersIDs","parseInt","length","task","project_id","sprint_id","priority_level","close","cancel","showModal","e","preventDefault","target","value","ev","code","stopPropagation","map","avatar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACM,KAAK,CAACC,IAAN,IAAc,EAAf,CAAhC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACM,KAAK,CAACG,WAAN,IAAqB,EAAtB,CAA9C;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAIa,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAIa,IAAJ,EAAD,CAAtC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEsB,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,MAA+BlB,KAArC;AAEA,QAAMmB,IAAI,GAAGH,KAAK,CAACI,YAAN,CAAmBC,MAAnB,CAA2BF,IAAD,IAAU;AAC/C,WAAOA,IAAI,CAACG,SAAL,KAAmBN,KAAK,CAACO,eAAhC;AACD,GAFY,CAAb;AAIA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,OAAK,MAAMC,MAAX,IAAqBN,IAArB,EAA2B;AACzB,SAAK,MAAMO,IAAX,IAAmBV,KAAK,CAACW,KAAzB,EAAgC;AAC9B,UAAID,IAAI,CAACE,EAAL,KAAYH,MAAM,CAACI,MAAvB,EAA+B;AAC7BL,QAAAA,gBAAgB,CAACM,IAAjB,CAAsBJ,IAAtB;AACD;AACF;AACF;;AAED,QAAMK,QAAQ,GAAG,MAAM;AACrB,QAAI,CAAC,CAAC,CAAC9B,IAAP,EAAa;AACXc,MAAAA,QAAQ,CAAC,qBAAD,CAAR;AACA;AACD;;AACD,QAAI,CAAC,CAAC,CAACZ,WAAP,EAAoB;AAClBY,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACA;AACD;;AAED,UAAMiB,aAAa,GAAGC,QAAQ,CAC3BC,cADmB,CACJ,qBADI,EAEnBC,sBAFmB,CAEI,qBAFJ,CAAtB;AAIA,UAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAAK,MAAMV,IAAX,IAAmBM,aAAnB,EAAkC;AAChCI,MAAAA,gBAAgB,CAACN,IAAjB,CAAsBO,QAAQ,CAACX,IAAI,CAACE,EAAN,CAA9B;AACD;;AAED,QAAIQ,gBAAgB,CAACE,MAAjB,KAA4B,CAAhC,EAAmC;AACjCvB,MAAAA,QAAQ,CAAC,qCAAD,CAAR;AACA;AACD;;AAED,UAAMwB,IAAI,GAAG;AACXC,MAAAA,UAAU,EAAEtB,SADD;AAEXuB,MAAAA,SAAS,EAAE,IAFA;AAGXxC,MAAAA,IAHW;AAIXE,MAAAA,WAJW;AAKXE,MAAAA,SALW;AAMXG,MAAAA,OANW;AAOXkC,MAAAA,cAAc,EAAEhC,QAPL;AAQXiB,MAAAA,KAAK,EAAES;AARI,KAAb;AAWAlC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,YAAY,CAAC,IAAIC,IAAJ,EAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,IAAIF,IAAJ,EAAD,CAAV;AACAM,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,MAAM,CAACsB,IAAD,CAAN;AACAN,IAAAA,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CS,KAA/C;AACD,GA5CD;;AA8CA,QAAMC,MAAM,GAAG,MAAM;AACnB1C,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,YAAY,CAAC,IAAIC,IAAJ,EAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,IAAIF,IAAJ,EAAD,CAAV;AACAM,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAkB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CS,KAA/C;AACD,GARD;;AAUA,sBACE;AAAA,eACG3B,KAAK,CAACO,eAAN,KAA0B,CAA1B,iBACC,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAGE,MAAA,OAAO,EAAE,MAAM;AACbV,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAoB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CW,SAA/C;AACD,OANH;AAOE,MAAA,KAAK,EAAE;AAPT;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYE;AACE,MAAA,SAAS,EAAC,+BADZ;AAEE,MAAA,EAAE,EAAC,qBAFL;AAAA,6BAIE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,QAAQ,EAAGC,CAAD,IAAOA,CAAC,CAACC,cAAF,EAHnB;AAIE,QAAA,MAAM,EAAC,QAJT;AAAA,mBAMGjC,KAAK,iBAAI;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,oBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBANZ,eAOE;AAAA,gDAEE;AACE,YAAA,KAAK,EAAEb,IADT;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,QAAQ,EAAG6C,CAAD,IAAO;AACf5C,cAAAA,OAAO,CAAC4C,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACAlC,cAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,aANH;AAOE,YAAA,SAAS,EAAGmC,EAAD,IAAQ;AACjB,kBACEA,EAAE,CAACC,IAAH,KAAY,OAAZ,IACAD,EAAE,CAACC,IAAH,KAAY,SADZ,IAEAD,EAAE,CAACC,IAAH,KAAY,WAFZ,IAGAD,EAAE,CAACC,IAAH,KAAY,WAHZ,IAIAD,EAAE,CAACC,IAAH,KAAY,YALd,EAME;AACAD,gBAAAA,EAAE,CAACE,eAAH;AACD;AACF;AAjBH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eA8BE;AAAA,kDAEE;AACE,YAAA,KAAK,EAAEjD,WADT;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,QAAQ,EAAG2C,CAAD,IAAO;AACf1C,cAAAA,cAAc,CAAC0C,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACAlC,cAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,aANH;AAOE,YAAA,SAAS,EAAGmC,EAAD,IAAQ;AACjB,kBACEA,EAAE,CAACC,IAAH,KAAY,OAAZ,IACAD,EAAE,CAACC,IAAH,KAAY,SADZ,IAEAD,EAAE,CAACC,IAAH,KAAY,WAFZ,IAGAD,EAAE,CAACC,IAAH,KAAY,WAHZ,IAIAD,EAAE,CAACC,IAAH,KAAY,YALd,EAME;AACAD,gBAAAA,EAAE,CAACE,eAAH;AACD;AACF;AAjBH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,eAqDE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,qBACGxC,SAAS,iBACR;AAAA,kDAEE;AACE,cAAA,SAAS,EAAC,uBADZ;AAEE,cAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC,EAAD,CAFzB;AAAA,wBAIGS,gBAAgB,CAAC6B,GAAjB,CAAsB3B,IAAD,IAAU;AAC9B,sBAAM;AAAEE,kBAAAA,EAAF;AAAM3B,kBAAAA,IAAN;AAAYqD,kBAAAA;AAAZ,oBAAuB5B,IAA7B;AAEA,oCACE,QAAC,IAAD;AAAe,kBAAA,EAAE,EAAEE,EAAnB;AAAuB,kBAAA,MAAM,EAAE0B,MAA/B;AAAuC,kBAAA,IAAI,EAAErD;AAA7C,mBAAW2B,EAAX;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD,eANA;AAJH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAmBE;AAAA,iDAEE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,QAAQ,EAAGkB,CAAD,IAAOnC,WAAW,CAACmC,CAAC,CAACE,MAAF,CAASC,KAAV,CAF9B;AAAA,sCAIE;AAAQ,gBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAQ,gBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAQ,gBAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF,eA+BE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAA,qDAEE,QAAC,UAAD;AACE,gBAAA,QAAQ,EAAE3C,YADZ;AAEE,gBAAA,KAAK,EAAED,SAFT;AAGE,gBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAA,mDAEE,QAAC,UAAD;AACE,gBAAA,QAAQ,EAAEI,UADZ;AAEE,gBAAA,KAAK,EAAED,OAFT;AAGE,gBAAA,OAAO,EAAE,IAAID,IAAJ,CAASF,SAAT,CAHX;AAIE,gBAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArDF,eAyGE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEuC,MAAjB;AAAyB,YAAA,KAAK,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEb,QAAjB;AAA2B,YAAA,KAAK,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkID;;GAnNQhC,Q;;KAAAA,Q;AAqNT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport User from \"../users/User\";\r\n\r\nfunction TaskForm(props) {\r\n  const [name, setName] = useState(props.name || \"\");\r\n  const [description, setDescription] = useState(props.description || \"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [priority, setPriority] = useState(0);\r\n  const [showUsers, setShowUsers] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { state, onSave, projectID } = props;\r\n\r\n  const team = state.projectTeams.filter((team) => {\r\n    return team.projectId === state.current_project;\r\n  });\r\n\r\n  const projectUsersList = [];\r\n\r\n  for (const member of team) {\r\n    for (const user of state.users) {\r\n      if (user.id === member.userId) {\r\n        projectUsersList.push(user);\r\n      }\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    if (!!!name) {\r\n      setError(\"Please enter a name\");\r\n      return;\r\n    }\r\n    if (!!!description) {\r\n      setError(\"Please enter a description\");\r\n      return;\r\n    }\r\n\r\n    const selectedUsers = document\r\n      .getElementById(\"dialog-dark-rounded\")\r\n      .getElementsByClassName(\"user-list--selected\");\r\n\r\n    const selectedUsersIDs = [];\r\n\r\n    for (const user of selectedUsers) {\r\n      selectedUsersIDs.push(parseInt(user.id));\r\n    }\r\n\r\n    if (selectedUsersIDs.length === 0) {\r\n      setError(\"Please select at least one assignee\");\r\n      return;\r\n    }\r\n\r\n    const task = {\r\n      project_id: projectID,\r\n      sprint_id: null,\r\n      name,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n      priority_level: priority,\r\n      users: selectedUsersIDs,\r\n    };\r\n\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    onSave(task);\r\n    document.getElementById(\"dialog-dark-rounded\").close();\r\n  };\r\n\r\n  const cancel = () => {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setStartDate(new Date());\r\n    setEndDate(new Date());\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    document.getElementById(\"dialog-dark-rounded\").close();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {state.current_project !== 1 && (\r\n        <Button\r\n          type=\"button\"\r\n          className=\"nes-btn is-primary\"\r\n          onClick={() => {\r\n            setShowUsers(true);\r\n            document.getElementById(\"dialog-dark-rounded\").showModal();\r\n          }}\r\n          title={\"New Task\"}\r\n        ></Button>\r\n      )}\r\n      <dialog\r\n        className=\"nes-dialog is-dark is-rounded\"\r\n        id=\"dialog-dark-rounded\"\r\n      >\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={(e) => e.preventDefault()}\r\n          method=\"dialog\"\r\n        >\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <label>\r\n            Task name:\r\n            <input\r\n              value={name}\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                setError(\"\");\r\n              }}\r\n              onKeyDown={(ev) => {\r\n                if (\r\n                  ev.code === \"Space\" ||\r\n                  ev.code === \"ArrowUp\" ||\r\n                  ev.code === \"ArrowDown\" ||\r\n                  ev.code === \"ArrowLeft\" ||\r\n                  ev.code === \"ArrowRight\"\r\n                ) {\r\n                  ev.stopPropagation();\r\n                }\r\n              }}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Description:\r\n            <textarea\r\n              value={description}\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n                setError(\"\");\r\n              }}\r\n              onKeyDown={(ev) => {\r\n                if (\r\n                  ev.code === \"Space\" ||\r\n                  ev.code === \"ArrowUp\" ||\r\n                  ev.code === \"ArrowDown\" ||\r\n                  ev.code === \"ArrowLeft\" ||\r\n                  ev.code === \"ArrowRight\"\r\n                ) {\r\n                  ev.stopPropagation();\r\n                }\r\n              }}\r\n            />\r\n          </label>\r\n\r\n          <div className=\"team-date-container\">\r\n            {showUsers && (\r\n              <label>\r\n                Assignees:\r\n                <ul\r\n                  className=\"rpgui users-container\"\r\n                  onClick={() => setError(\"\")}\r\n                >\r\n                  {projectUsersList.map((user) => {\r\n                    const { id, name, avatar } = user;\r\n\r\n                    return (\r\n                      <User key={id} id={id} avatar={avatar} name={name} />\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </label>\r\n            )}\r\n\r\n            <label>\r\n              Priority:\r\n              <select\r\n                className=\"rpgui-dropdown\"\r\n                onChange={(e) => setPriority(e.target.value)}\r\n              >\r\n                <option value={0}>Low</option>\r\n                <option value={1}>Medium</option>\r\n                <option value={2}>High</option>\r\n              </select>\r\n            </label>\r\n\r\n            <div className=\"date\">\r\n              <label>\r\n                Start date:\r\n                <DatePicker\r\n                  onChange={setStartDate}\r\n                  value={startDate}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                End date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={endDate}\r\n                  minDate={new Date(startDate)}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"cancel-submit\">\r\n            <Button onClick={cancel} title={\"cancel\"}></Button>\r\n            <Button onClick={validate} title={\"submit\"}></Button>\r\n          </div>\r\n        </form>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"]},"metadata":{},"sourceType":"module"}