{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\components\\\\providers\\\\StateProvider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport applicationDataReducer, { SET_APPLICATION_DATA, SET_CURRENT_PROJECT, SET_TASK_STATUS, SET_TASK_PRIORITY, ADD_CREATED_PROJECT } from \"../../reducers/applicationDataReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const stateContext = /*#__PURE__*/createContext();\nexport default function StateProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(applicationDataReducer, {\n    users: [],\n    projects: [],\n    projectTeams: [],\n    current_project: 1,\n    tasks: [],\n    taskTeams: []\n  });\n  useEffect(() => {\n    Promise.all([axios.get(\"/users\"), axios.get(\"/projects\"), axios.get(\"/users_projects\"), axios.get(`/tasks/project/${state.current_project}`), axios.get(\"/users_tasks\")]).then(all => {\n      dispatch({\n        type: SET_APPLICATION_DATA,\n        value: {\n          users: all[0].data,\n          projects: all[1].data,\n          projectTeams: all[2].data,\n          tasks: all[3].data,\n          taskTeams: all[4].data\n        }\n      });\n    });\n  }, []);\n\n  const updateProjectList = () => {\n    Promise.all([axios.get(\"/projects\"), axios.get(\"/users_projects\")]).then(all => {\n      dispatch({\n        type: SET_APPLICATION_DATA,\n        value: { ...state,\n          projects: all[0].data,\n          projectTeams: all[1].data\n        }\n      });\n    });\n  };\n\n  const createProject = project => {\n    axios.post(\"/projects\", project).then(async data => {\n      const projectTeamsData = await axios.get(\"/users_projects\");\n      dispatch({\n        type: ADD_CREATED_PROJECT,\n        project: data.data,\n        projectTeams: projectTeamsData.data\n      });\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  const editProject = (project, id) => {\n    axios.patch(`/projects/${id}`, project).then(() => {\n      updateProjectList();\n    });\n  };\n\n  const deleteProject = id => {\n    axios.delete(`/projects/${id}`).then(() => {\n      updateProjectList();\n    });\n  };\n\n  const setCurrentProject = id => {\n    axios.get(`/tasks/project/${id}`).then(data => {\n      dispatch({\n        type: SET_CURRENT_PROJECT,\n        id,\n        tasks: data.data\n      });\n    });\n  };\n\n  const createTask = task => {\n    axios.post(\"/tasks\", task).then(() => {\n      updateTaskList();\n    });\n  };\n\n  const editTask = (task, id) => {\n    axios.patch(`/tasks/${id}`, task).then(() => {\n      updateTaskList();\n    });\n  };\n\n  const deleteTask = id => {\n    axios.delete(`/tasks/${id}`).then(() => {\n      updateTaskList();\n    });\n  };\n\n  const updateTaskList = () => {\n    Promise.all([axios.get(`/tasks/project/${state.current_project}`), axios.get(\"/users_tasks\")]).then(all => {\n      dispatch({\n        type: SET_APPLICATION_DATA,\n        value: { ...state,\n          tasks: all[0].data,\n          taskTeams: all[1].data\n        }\n      });\n    });\n  };\n\n  const updateTaskStatus = (status, id) => {\n    axios.patch(`/tasks/status/${id}`, {\n      status\n    }).then(data => {\n      const newTasks = state.tasks.map(task => {\n        if (task.id === id) {\n          return data.data;\n        } else {\n          return task;\n        }\n      });\n      dispatch({\n        type: SET_TASK_STATUS,\n        tasks: newTasks\n      });\n    });\n  };\n\n  const updateTaskPriority = (priority, id) => {\n    axios.patch(`/tasks/priority/${id}`, {\n      priority\n    }).then(data => {\n      const newTasks = state.tasks.map(task => {\n        if (task.id === id) {\n          return data.data;\n        } else {\n          return task;\n        }\n      });\n      dispatch({\n        type: SET_TASK_PRIORITY,\n        tasks: newTasks\n      });\n    });\n  };\n\n  const providerData = {\n    state,\n    createProject,\n    editProject,\n    deleteProject,\n    setCurrentProject,\n    createTask,\n    editTask,\n    updateTaskStatus,\n    updateTaskPriority,\n    deleteTask\n  };\n  return /*#__PURE__*/_jsxDEV(stateContext.Provider, {\n    value: providerData,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StateProvider, \"HoiH4Zx4e/7aXQZLTxlQCC7KKJU=\");\n\n_c = StateProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/components/providers/StateProvider.js"],"names":["createContext","useReducer","useEffect","axios","applicationDataReducer","SET_APPLICATION_DATA","SET_CURRENT_PROJECT","SET_TASK_STATUS","SET_TASK_PRIORITY","ADD_CREATED_PROJECT","stateContext","StateProvider","props","state","dispatch","users","projects","projectTeams","current_project","tasks","taskTeams","Promise","all","get","then","type","value","data","updateProjectList","createProject","project","post","projectTeamsData","catch","error","console","log","editProject","id","patch","deleteProject","delete","setCurrentProject","createTask","task","updateTaskList","editTask","deleteTask","updateTaskStatus","status","newTasks","map","updateTaskPriority","priority","providerData","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP,IACEC,oBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,iBAJF,EAKEC,mBALF,QAMO,uCANP;;AAQA,OAAO,MAAMC,YAAY,gBAAGV,aAAa,EAAlC;AAEP,eAAe,SAASW,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACG,sBAAD,EAAyB;AAC3DW,IAAAA,KAAK,EAAE,EADoD;AAE3DC,IAAAA,QAAQ,EAAE,EAFiD;AAG3DC,IAAAA,YAAY,EAAE,EAH6C;AAI3DC,IAAAA,eAAe,EAAE,CAJ0C;AAK3DC,IAAAA,KAAK,EAAE,EALoD;AAM3DC,IAAAA,SAAS,EAAE;AANgD,GAAzB,CAApC;AASAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAY,CACVnB,KAAK,CAACoB,GAAN,CAAU,QAAV,CADU,EAEVpB,KAAK,CAACoB,GAAN,CAAU,WAAV,CAFU,EAGVpB,KAAK,CAACoB,GAAN,CAAU,iBAAV,CAHU,EAIVpB,KAAK,CAACoB,GAAN,CAAW,kBAAiBV,KAAK,CAACK,eAAgB,EAAlD,CAJU,EAKVf,KAAK,CAACoB,GAAN,CAAU,cAAV,CALU,CAAZ,EAMGC,IANH,CAMSF,GAAD,IAAS;AACfR,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEpB,oBADC;AAEPqB,QAAAA,KAAK,EAAE;AACLX,UAAAA,KAAK,EAAEO,GAAG,CAAC,CAAD,CAAH,CAAOK,IADT;AAELX,UAAAA,QAAQ,EAAEM,GAAG,CAAC,CAAD,CAAH,CAAOK,IAFZ;AAGLV,UAAAA,YAAY,EAAEK,GAAG,CAAC,CAAD,CAAH,CAAOK,IAHhB;AAILR,UAAAA,KAAK,EAAEG,GAAG,CAAC,CAAD,CAAH,CAAOK,IAJT;AAKLP,UAAAA,SAAS,EAAEE,GAAG,CAAC,CAAD,CAAH,CAAOK;AALb;AAFA,OAAD,CAAR;AAUD,KAjBD;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BP,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACnB,KAAK,CAACoB,GAAN,CAAU,WAAV,CAAD,EAAyBpB,KAAK,CAACoB,GAAN,CAAU,iBAAV,CAAzB,CAAZ,EAAoEC,IAApE,CACGF,GAAD,IAAS;AACPR,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEpB,oBADC;AAEPqB,QAAAA,KAAK,EAAE,EACL,GAAGb,KADE;AAELG,UAAAA,QAAQ,EAAEM,GAAG,CAAC,CAAD,CAAH,CAAOK,IAFZ;AAGLV,UAAAA,YAAY,EAAEK,GAAG,CAAC,CAAD,CAAH,CAAOK;AAHhB;AAFA,OAAD,CAAR;AAQD,KAVH;AAYD,GAbD;;AAeA,QAAME,aAAa,GAAIC,OAAD,IAAa;AACjC3B,IAAAA,KAAK,CACF4B,IADH,CACQ,WADR,EACqBD,OADrB,EAEGN,IAFH,CAEQ,MAAOG,IAAP,IAAgB;AACpB,YAAMK,gBAAgB,GAAG,MAAM7B,KAAK,CAACoB,GAAN,CAAU,iBAAV,CAA/B;AAEAT,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEhB,mBADC;AAEPqB,QAAAA,OAAO,EAAEH,IAAI,CAACA,IAFP;AAGPV,QAAAA,YAAY,EAAEe,gBAAgB,CAACL;AAHxB,OAAD,CAAR;AAKD,KAVH,EAWGM,KAXH,CAWUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAXpB;AAYD,GAbD;;AAeA,QAAMG,WAAW,GAAG,CAACP,OAAD,EAAUQ,EAAV,KAAiB;AACnCnC,IAAAA,KAAK,CAACoC,KAAN,CAAa,aAAYD,EAAG,EAA5B,EAA+BR,OAA/B,EAAwCN,IAAxC,CAA6C,MAAM;AACjDI,MAAAA,iBAAiB;AAClB,KAFD;AAGD,GAJD;;AAMA,QAAMY,aAAa,GAAIF,EAAD,IAAQ;AAC5BnC,IAAAA,KAAK,CAACsC,MAAN,CAAc,aAAYH,EAAG,EAA7B,EAAgCd,IAAhC,CAAqC,MAAM;AACzCI,MAAAA,iBAAiB;AAClB,KAFD;AAGD,GAJD;;AAMA,QAAMc,iBAAiB,GAAIJ,EAAD,IAAQ;AAChCnC,IAAAA,KAAK,CAACoB,GAAN,CAAW,kBAAiBe,EAAG,EAA/B,EAAkCd,IAAlC,CAAwCG,IAAD,IAAU;AAC/Cb,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEnB,mBADC;AAEPgC,QAAAA,EAFO;AAGPnB,QAAAA,KAAK,EAAEQ,IAAI,CAACA;AAHL,OAAD,CAAR;AAKD,KAND;AAOD,GARD;;AAUA,QAAMgB,UAAU,GAAIC,IAAD,IAAU;AAC3BzC,IAAAA,KAAK,CAAC4B,IAAN,CAAW,QAAX,EAAqBa,IAArB,EAA2BpB,IAA3B,CAAgC,MAAM;AACpCqB,MAAAA,cAAc;AACf,KAFD;AAGD,GAJD;;AAMA,QAAMC,QAAQ,GAAG,CAACF,IAAD,EAAON,EAAP,KAAc;AAC7BnC,IAAAA,KAAK,CAACoC,KAAN,CAAa,UAASD,EAAG,EAAzB,EAA4BM,IAA5B,EAAkCpB,IAAlC,CAAuC,MAAM;AAC3CqB,MAAAA,cAAc;AACf,KAFD;AAGD,GAJD;;AAMA,QAAME,UAAU,GAAIT,EAAD,IAAQ;AACzBnC,IAAAA,KAAK,CAACsC,MAAN,CAAc,UAASH,EAAG,EAA1B,EAA6Bd,IAA7B,CAAkC,MAAM;AACtCqB,MAAAA,cAAc;AACf,KAFD;AAGD,GAJD;;AAMA,QAAMA,cAAc,GAAG,MAAM;AAC3BxB,IAAAA,OAAO,CAACC,GAAR,CAAY,CACVnB,KAAK,CAACoB,GAAN,CAAW,kBAAiBV,KAAK,CAACK,eAAgB,EAAlD,CADU,EAEVf,KAAK,CAACoB,GAAN,CAAU,cAAV,CAFU,CAAZ,EAGGC,IAHH,CAGSF,GAAD,IAAS;AACfR,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEpB,oBADC;AAEPqB,QAAAA,KAAK,EAAE,EACL,GAAGb,KADE;AAELM,UAAAA,KAAK,EAAEG,GAAG,CAAC,CAAD,CAAH,CAAOK,IAFT;AAGLP,UAAAA,SAAS,EAAEE,GAAG,CAAC,CAAD,CAAH,CAAOK;AAHb;AAFA,OAAD,CAAR;AAQD,KAZD;AAaD,GAdD;;AAgBA,QAAMqB,gBAAgB,GAAG,CAACC,MAAD,EAASX,EAAT,KAAgB;AACvCnC,IAAAA,KAAK,CAACoC,KAAN,CAAa,iBAAgBD,EAAG,EAAhC,EAAmC;AAAEW,MAAAA;AAAF,KAAnC,EAA+CzB,IAA/C,CAAqDG,IAAD,IAAU;AAC5D,YAAMuB,QAAQ,GAAGrC,KAAK,CAACM,KAAN,CAAYgC,GAAZ,CAAiBP,IAAD,IAAU;AACzC,YAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iBAAOX,IAAI,CAACA,IAAZ;AACD,SAFD,MAEO;AACL,iBAAOiB,IAAP;AACD;AACF,OANgB,CAAjB;AAQA9B,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAElB,eADC;AAEPY,QAAAA,KAAK,EAAE+B;AAFA,OAAD,CAAR;AAID,KAbD;AAcD,GAfD;;AAiBA,QAAME,kBAAkB,GAAG,CAACC,QAAD,EAAWf,EAAX,KAAkB;AAC3CnC,IAAAA,KAAK,CAACoC,KAAN,CAAa,mBAAkBD,EAAG,EAAlC,EAAqC;AAAEe,MAAAA;AAAF,KAArC,EAAmD7B,IAAnD,CAAyDG,IAAD,IAAU;AAChE,YAAMuB,QAAQ,GAAGrC,KAAK,CAACM,KAAN,CAAYgC,GAAZ,CAAiBP,IAAD,IAAU;AACzC,YAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iBAAOX,IAAI,CAACA,IAAZ;AACD,SAFD,MAEO;AACL,iBAAOiB,IAAP;AACD;AACF,OANgB,CAAjB;AAQA9B,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEjB,iBADC;AAEPW,QAAAA,KAAK,EAAE+B;AAFA,OAAD,CAAR;AAID,KAbD;AAcD,GAfD;;AAiBA,QAAMI,YAAY,GAAG;AACnBzC,IAAAA,KADmB;AAEnBgB,IAAAA,aAFmB;AAGnBQ,IAAAA,WAHmB;AAInBG,IAAAA,aAJmB;AAKnBE,IAAAA,iBALmB;AAMnBC,IAAAA,UANmB;AAOnBG,IAAAA,QAPmB;AAQnBE,IAAAA,gBARmB;AASnBI,IAAAA,kBATmB;AAUnBL,IAAAA;AAVmB,GAArB;AAaA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEO,YAA9B;AAAA,cACG1C,KAAK,CAAC2C;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzKuB5C,a;;KAAAA,a","sourcesContent":["import { createContext, useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport applicationDataReducer, {\r\n  SET_APPLICATION_DATA,\r\n  SET_CURRENT_PROJECT,\r\n  SET_TASK_STATUS,\r\n  SET_TASK_PRIORITY,\r\n  ADD_CREATED_PROJECT,\r\n} from \"../../reducers/applicationDataReducer\";\r\n\r\nexport const stateContext = createContext();\r\n\r\nexport default function StateProvider(props) {\r\n  const [state, dispatch] = useReducer(applicationDataReducer, {\r\n    users: [],\r\n    projects: [],\r\n    projectTeams: [],\r\n    current_project: 1,\r\n    tasks: [],\r\n    taskTeams: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      axios.get(\"/users\"),\r\n      axios.get(\"/projects\"),\r\n      axios.get(\"/users_projects\"),\r\n      axios.get(`/tasks/project/${state.current_project}`),\r\n      axios.get(\"/users_tasks\"),\r\n    ]).then((all) => {\r\n      dispatch({\r\n        type: SET_APPLICATION_DATA,\r\n        value: {\r\n          users: all[0].data,\r\n          projects: all[1].data,\r\n          projectTeams: all[2].data,\r\n          tasks: all[3].data,\r\n          taskTeams: all[4].data,\r\n        },\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const updateProjectList = () => {\r\n    Promise.all([axios.get(\"/projects\"), axios.get(\"/users_projects\")]).then(\r\n      (all) => {\r\n        dispatch({\r\n          type: SET_APPLICATION_DATA,\r\n          value: {\r\n            ...state,\r\n            projects: all[0].data,\r\n            projectTeams: all[1].data,\r\n          },\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const createProject = (project) => {\r\n    axios\r\n      .post(\"/projects\", project)\r\n      .then(async (data) => {\r\n        const projectTeamsData = await axios.get(\"/users_projects\");\r\n\r\n        dispatch({\r\n          type: ADD_CREATED_PROJECT,\r\n          project: data.data,\r\n          projectTeams: projectTeamsData.data,\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const editProject = (project, id) => {\r\n    axios.patch(`/projects/${id}`, project).then(() => {\r\n      updateProjectList();\r\n    });\r\n  };\r\n\r\n  const deleteProject = (id) => {\r\n    axios.delete(`/projects/${id}`).then(() => {\r\n      updateProjectList();\r\n    });\r\n  };\r\n\r\n  const setCurrentProject = (id) => {\r\n    axios.get(`/tasks/project/${id}`).then((data) => {\r\n      dispatch({\r\n        type: SET_CURRENT_PROJECT,\r\n        id,\r\n        tasks: data.data,\r\n      });\r\n    });\r\n  };\r\n\r\n  const createTask = (task) => {\r\n    axios.post(\"/tasks\", task).then(() => {\r\n      updateTaskList();\r\n    });\r\n  };\r\n\r\n  const editTask = (task, id) => {\r\n    axios.patch(`/tasks/${id}`, task).then(() => {\r\n      updateTaskList();\r\n    });\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    axios.delete(`/tasks/${id}`).then(() => {\r\n      updateTaskList();\r\n    });\r\n  };\r\n\r\n  const updateTaskList = () => {\r\n    Promise.all([\r\n      axios.get(`/tasks/project/${state.current_project}`),\r\n      axios.get(\"/users_tasks\"),\r\n    ]).then((all) => {\r\n      dispatch({\r\n        type: SET_APPLICATION_DATA,\r\n        value: {\r\n          ...state,\r\n          tasks: all[0].data,\r\n          taskTeams: all[1].data,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const updateTaskStatus = (status, id) => {\r\n    axios.patch(`/tasks/status/${id}`, { status }).then((data) => {\r\n      const newTasks = state.tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return data.data;\r\n        } else {\r\n          return task;\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_TASK_STATUS,\r\n        tasks: newTasks,\r\n      });\r\n    });\r\n  };\r\n\r\n  const updateTaskPriority = (priority, id) => {\r\n    axios.patch(`/tasks/priority/${id}`, { priority }).then((data) => {\r\n      const newTasks = state.tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return data.data;\r\n        } else {\r\n          return task;\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_TASK_PRIORITY,\r\n        tasks: newTasks,\r\n      });\r\n    });\r\n  };\r\n\r\n  const providerData = {\r\n    state,\r\n    createProject,\r\n    editProject,\r\n    deleteProject,\r\n    setCurrentProject,\r\n    createTask,\r\n    editTask,\r\n    updateTaskStatus,\r\n    updateTaskPriority,\r\n    deleteTask,\r\n  };\r\n\r\n  return (\r\n    <stateContext.Provider value={providerData}>\r\n      {props.children}\r\n    </stateContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}