{"ast":null,"code":"// src/reducers/mapReducer.js\nimport { combineReducers } from 'redux'; // === TIPOS DE AÇÃO PARA MAPA ===\n\nexport const SHOW_MAP_GUIDE = 'SHOW_MAP_GUIDE';\nexport const HIDE_MAP_GUIDE = 'HIDE_MAP_GUIDE';\nexport const SET_MAP_CENTER = 'SET_MAP_CENTER';\nexport const SET_MAP_ZOOM = 'SET_MAP_ZOOM';\nexport const TOGGLE_MAP_LAYER = 'TOGGLE_MAP_LAYER';\nexport const SET_MAP_MARKERS = 'SET_MAP_MARKERS';\nexport const ADD_MAP_MARKER = 'ADD_MAP_MARKER';\nexport const REMOVE_MAP_MARKER = 'REMOVE_MAP_MARKER';\nexport const UPDATE_MAP_MARKER = 'UPDATE_MAP_MARKER'; // === TIPOS DE AÇÃO PARA COMUNICAÇÃO ===\n\nexport const SET_ONLINE_USERS = 'SET_ONLINE_USERS';\nexport const ADD_ONLINE_USER = 'ADD_ONLINE_USER';\nexport const REMOVE_ONLINE_USER = 'REMOVE_ONLINE_USER';\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\nexport const RECEIVE_PRIVATE_MESSAGE = 'RECEIVE_PRIVATE_MESSAGE';\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\nexport const RECEIVE_TYPING_STATUS = 'RECEIVE_TYPING_STATUS';\nexport const RECEIVE_USER_JOINED = 'RECEIVE_USER_JOINED';\nexport const RECEIVE_USER_LEFT = 'RECEIVE_USER_LEFT';\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'; // === ESTADO INICIAL PARA MAPA ===\n\nconst mapInitialState = {\n  // Configurações do mapa\n  showGuide: false,\n  center: {\n    lat: -22.2086,\n    lng: -47.5988\n  },\n  // Coordenadas de Araraquara, SP\n  zoom: 14,\n  // Camadas do mapa\n  layers: {\n    satellite: false,\n    terrain: false,\n    traffic: false,\n    markers: true\n  },\n  // Marcadores\n  markers: [],\n  // Configurações visuais\n  mapStyle: 'default',\n  showControls: true,\n  showScale: true\n}; // === ESTADO INICIAL PARA COMUNICAÇÃO ===\n\nconst communicationInitialState = {\n  // Usuários online\n  onlineUsers: [],\n  // Mensagens\n  messages: [],\n  privateMessages: [],\n  // Status de digitação\n  typingUsers: [],\n  // Notificações\n  notifications: [],\n  // Configurações de chat\n  chatSettings: {\n    soundEnabled: true,\n    notificationsEnabled: true,\n    showOnlineUsers: true,\n    maxMessages: 100\n  }\n}; // === REDUCER PARA MAPA ===\n\nconst mapReducer = (state = mapInitialState, action) => {\n  switch (action.type) {\n    case SHOW_MAP_GUIDE:\n      return { ...state,\n        showGuide: true\n      };\n\n    case HIDE_MAP_GUIDE:\n      return { ...state,\n        showGuide: false\n      };\n\n    case SET_MAP_CENTER:\n      return { ...state,\n        center: action.payload\n      };\n\n    case SET_MAP_ZOOM:\n      return { ...state,\n        zoom: action.payload\n      };\n\n    case TOGGLE_MAP_LAYER:\n      return { ...state,\n        layers: { ...state.layers,\n          [action.payload]: !state.layers[action.payload]\n        }\n      };\n\n    case SET_MAP_MARKERS:\n      return { ...state,\n        markers: Array.isArray(action.payload) ? action.payload : []\n      };\n\n    case ADD_MAP_MARKER:\n      return { ...state,\n        markers: [...state.markers, {\n          id: action.payload.id || `marker_${Date.now()}`,\n          ...action.payload\n        }]\n      };\n\n    case REMOVE_MAP_MARKER:\n      return { ...state,\n        markers: state.markers.filter(marker => marker.id !== action.payload)\n      };\n\n    case UPDATE_MAP_MARKER:\n      return { ...state,\n        markers: state.markers.map(marker => marker.id === action.payload.id ? { ...marker,\n          ...action.payload\n        } : marker)\n      };\n\n    default:\n      return state;\n  }\n}; // === REDUCER PARA COMUNICAÇÃO ===\n\n\nconst communicationReducer = (state = communicationInitialState, action) => {\n  switch (action.type) {\n    // === USUÁRIOS ONLINE ===\n    case SET_ONLINE_USERS:\n      return { ...state,\n        onlineUsers: Array.isArray(action.payload) ? action.payload : []\n      };\n\n    case ADD_ONLINE_USER:\n      return { ...state,\n        onlineUsers: [...state.onlineUsers.filter(user => user.id !== action.payload.id), action.payload]\n      };\n\n    case REMOVE_ONLINE_USER:\n      return { ...state,\n        onlineUsers: state.onlineUsers.filter(user => user.id !== action.payload)\n      };\n\n    case UPDATE_USER_STATUS:\n      return { ...state,\n        onlineUsers: state.onlineUsers.map(user => user.id === action.payload.userId ? { ...user,\n          status: action.payload.status,\n          lastSeen: action.payload.lastSeen\n        } : user)\n      };\n    // === MENSAGENS ===\n\n    case RECEIVE_MESSAGE:\n      const newMessage = { ...action.payload,\n        id: action.payload.id || `msg_${Date.now()}_${Math.random()}`,\n        timestamp: action.payload.timestamp || Date.now()\n      };\n      return { ...state,\n        messages: [...state.messages.slice(-state.chatSettings.maxMessages + 1), newMessage]\n      };\n\n    case RECEIVE_PRIVATE_MESSAGE:\n      const newPrivateMessage = { ...action.payload,\n        id: action.payload.id || `private_${Date.now()}_${Math.random()}`,\n        timestamp: action.payload.timestamp || Date.now()\n      };\n      return { ...state,\n        privateMessages: [...state.privateMessages.slice(-state.chatSettings.maxMessages + 1), newPrivateMessage]\n      };\n\n    case CLEAR_MESSAGES:\n      return { ...state,\n        messages: [],\n        privateMessages: []\n      };\n    // === STATUS DE DIGITAÇÃO ===\n\n    case RECEIVE_TYPING_STATUS:\n      const {\n        userId,\n        userName,\n        isTyping\n      } = action.payload;\n\n      if (isTyping) {\n        return { ...state,\n          typingUsers: [...state.typingUsers.filter(user => user.userId !== userId), {\n            userId,\n            userName,\n            isTyping: true,\n            timestamp: Date.now()\n          }]\n        };\n      } else {\n        return { ...state,\n          typingUsers: state.typingUsers.filter(user => user.userId !== userId)\n        };\n      }\n\n    // === NOTIFICAÇÕES ===\n\n    case RECEIVE_USER_JOINED:\n    case RECEIVE_USER_LEFT:\n      const notification = {\n        id: `notification_${Date.now()}_${Math.random()}`,\n        type: action.type === RECEIVE_USER_JOINED ? 'user_joined' : 'user_left',\n        message: action.payload.message,\n        userId: action.payload.userId,\n        timestamp: action.payload.timestamp || Date.now()\n      };\n      return { ...state,\n        notifications: [...state.notifications.slice(-19), notification]\n      };\n\n    case ADD_NOTIFICATION:\n      return { ...state,\n        notifications: [...state.notifications.slice(-19), {\n          id: action.payload.id || `notification_${Date.now()}`,\n          ...action.payload,\n          timestamp: action.payload.timestamp || Date.now()\n        }]\n      };\n\n    case REMOVE_NOTIFICATION:\n      return { ...state,\n        notifications: state.notifications.filter(notif => notif.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}; // === REDUCER COMBINADO ===\n\n\nconst rootReducer = combineReducers({\n  map: mapReducer,\n  communication: communicationReducer\n});\nexport default rootReducer; // === SELETORES PARA MAPA ===\n\nexport const selectMapGuideVisible = state => {\n  var _state$map;\n\n  return ((_state$map = state.map) === null || _state$map === void 0 ? void 0 : _state$map.showGuide) || false;\n};\nexport const selectMapCenter = state => {\n  var _state$map2;\n\n  return ((_state$map2 = state.map) === null || _state$map2 === void 0 ? void 0 : _state$map2.center) || {\n    lat: -22.2086,\n    lng: -47.5988\n  };\n};\nexport const selectMapZoom = state => {\n  var _state$map3;\n\n  return ((_state$map3 = state.map) === null || _state$map3 === void 0 ? void 0 : _state$map3.zoom) || 14;\n};\nexport const selectMapLayers = state => {\n  var _state$map4;\n\n  return ((_state$map4 = state.map) === null || _state$map4 === void 0 ? void 0 : _state$map4.layers) || {};\n};\nexport const selectMapMarkers = state => {\n  var _state$map5;\n\n  return ((_state$map5 = state.map) === null || _state$map5 === void 0 ? void 0 : _state$map5.markers) || [];\n}; // === SELETORES PARA COMUNICAÇÃO ===\n\nexport const selectOnlineUsers = state => {\n  var _state$communication;\n\n  return ((_state$communication = state.communication) === null || _state$communication === void 0 ? void 0 : _state$communication.onlineUsers) || [];\n};\nexport const selectMessages = state => {\n  var _state$communication2;\n\n  return ((_state$communication2 = state.communication) === null || _state$communication2 === void 0 ? void 0 : _state$communication2.messages) || [];\n};\nexport const selectPrivateMessages = state => {\n  var _state$communication3;\n\n  return ((_state$communication3 = state.communication) === null || _state$communication3 === void 0 ? void 0 : _state$communication3.privateMessages) || [];\n};\nexport const selectTypingUsers = state => {\n  var _state$communication4;\n\n  return ((_state$communication4 = state.communication) === null || _state$communication4 === void 0 ? void 0 : _state$communication4.typingUsers) || [];\n};\nexport const selectNotifications = state => {\n  var _state$communication5;\n\n  return ((_state$communication5 = state.communication) === null || _state$communication5 === void 0 ? void 0 : _state$communication5.notifications) || [];\n};\nexport const selectChatSettings = state => {\n  var _state$communication6;\n\n  return ((_state$communication6 = state.communication) === null || _state$communication6 === void 0 ? void 0 : _state$communication6.chatSettings) || {};\n}; // Seletor para mensagens privadas de um usuário específico\n\nexport const selectPrivateMessagesWithUser = (state, userId) => {\n  var _state$socket;\n\n  const messages = selectPrivateMessages(state);\n  const currentUserId = (_state$socket = state.socket) === null || _state$socket === void 0 ? void 0 : _state$socket.id;\n  return messages.filter(msg => msg.senderId === userId && msg.recipientId === currentUserId || msg.senderId === currentUserId && msg.recipientId === userId);\n}; // Seletor para usuários online excluindo o usuário atual\n\nexport const selectOtherOnlineUsers = state => {\n  var _state$socket2;\n\n  const onlineUsers = selectOnlineUsers(state);\n  const currentUserId = (_state$socket2 = state.socket) === null || _state$socket2 === void 0 ? void 0 : _state$socket2.id;\n  return onlineUsers.filter(user => user.id !== currentUserId);\n}; // === ACTION CREATORS PARA MAPA ===\n\nexport const showMapGuide = () => ({\n  type: SHOW_MAP_GUIDE\n});\nexport const hideMapGuide = () => ({\n  type: HIDE_MAP_GUIDE\n});\nexport const setMapCenter = center => ({\n  type: SET_MAP_CENTER,\n  payload: center\n});\nexport const setMapZoom = zoom => ({\n  type: SET_MAP_ZOOM,\n  payload: zoom\n});\nexport const toggleMapLayer = layerName => ({\n  type: TOGGLE_MAP_LAYER,\n  payload: layerName\n});\nexport const setMapMarkers = markers => ({\n  type: SET_MAP_MARKERS,\n  payload: markers\n});\nexport const addMapMarker = marker => ({\n  type: ADD_MAP_MARKER,\n  payload: marker\n});\nexport const removeMapMarker = markerId => ({\n  type: REMOVE_MAP_MARKER,\n  payload: markerId\n});\nexport const updateMapMarker = marker => ({\n  type: UPDATE_MAP_MARKER,\n  payload: marker\n}); // === ACTION CREATORS PARA COMUNICAÇÃO ===\n\nexport const setOnlineUsers = users => ({\n  type: SET_ONLINE_USERS,\n  payload: users\n});\nexport const addOnlineUser = user => ({\n  type: ADD_ONLINE_USER,\n  payload: user\n});\nexport const removeOnlineUser = userId => ({\n  type: REMOVE_ONLINE_USER,\n  payload: userId\n});\nexport const receiveMessage = message => ({\n  type: RECEIVE_MESSAGE,\n  payload: message\n});\nexport const receivePrivateMessage = message => ({\n  type: RECEIVE_PRIVATE_MESSAGE,\n  payload: message\n});\nexport const updateUserStatus = (userId, status, lastSeen) => ({\n  type: UPDATE_USER_STATUS,\n  payload: {\n    userId,\n    status,\n    lastSeen\n  }\n});\nexport const receiveTypingStatus = (userId, userName, isTyping) => ({\n  type: RECEIVE_TYPING_STATUS,\n  payload: {\n    userId,\n    userName,\n    isTyping\n  }\n});\nexport const clearMessages = () => ({\n  type: CLEAR_MESSAGES\n});\nexport const addNotification = notification => ({\n  type: ADD_NOTIFICATION,\n  payload: notification\n});\nexport const removeNotification = notificationId => ({\n  type: REMOVE_NOTIFICATION,\n  payload: notificationId\n});","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/reducers/mapReducer.js"],"names":["combineReducers","SHOW_MAP_GUIDE","HIDE_MAP_GUIDE","SET_MAP_CENTER","SET_MAP_ZOOM","TOGGLE_MAP_LAYER","SET_MAP_MARKERS","ADD_MAP_MARKER","REMOVE_MAP_MARKER","UPDATE_MAP_MARKER","SET_ONLINE_USERS","ADD_ONLINE_USER","REMOVE_ONLINE_USER","RECEIVE_MESSAGE","RECEIVE_PRIVATE_MESSAGE","UPDATE_USER_STATUS","RECEIVE_TYPING_STATUS","RECEIVE_USER_JOINED","RECEIVE_USER_LEFT","CLEAR_MESSAGES","ADD_NOTIFICATION","REMOVE_NOTIFICATION","mapInitialState","showGuide","center","lat","lng","zoom","layers","satellite","terrain","traffic","markers","mapStyle","showControls","showScale","communicationInitialState","onlineUsers","messages","privateMessages","typingUsers","notifications","chatSettings","soundEnabled","notificationsEnabled","showOnlineUsers","maxMessages","mapReducer","state","action","type","payload","Array","isArray","id","Date","now","filter","marker","map","communicationReducer","user","userId","status","lastSeen","newMessage","Math","random","timestamp","slice","newPrivateMessage","userName","isTyping","notification","message","notif","rootReducer","communication","selectMapGuideVisible","selectMapCenter","selectMapZoom","selectMapLayers","selectMapMarkers","selectOnlineUsers","selectMessages","selectPrivateMessages","selectTypingUsers","selectNotifications","selectChatSettings","selectPrivateMessagesWithUser","currentUserId","socket","msg","senderId","recipientId","selectOtherOnlineUsers","showMapGuide","hideMapGuide","setMapCenter","setMapZoom","toggleMapLayer","layerName","setMapMarkers","addMapMarker","removeMapMarker","markerId","updateMapMarker","setOnlineUsers","users","addOnlineUser","removeOnlineUser","receiveMessage","receivePrivateMessage","updateUserStatus","receiveTypingStatus","clearMessages","addNotification","removeNotification","notificationId"],"mappings":"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","sourcesContent":["// src/reducers/mapReducer.js\r\nimport { combineReducers } from 'redux';\r\n\r\n// === TIPOS DE AÇÃO PARA MAPA ===\r\nexport const SHOW_MAP_GUIDE = 'SHOW_MAP_GUIDE';\r\nexport const HIDE_MAP_GUIDE = 'HIDE_MAP_GUIDE';\r\nexport const SET_MAP_CENTER = 'SET_MAP_CENTER';\r\nexport const SET_MAP_ZOOM = 'SET_MAP_ZOOM';\r\nexport const TOGGLE_MAP_LAYER = 'TOGGLE_MAP_LAYER';\r\nexport const SET_MAP_MARKERS = 'SET_MAP_MARKERS';\r\nexport const ADD_MAP_MARKER = 'ADD_MAP_MARKER';\r\nexport const REMOVE_MAP_MARKER = 'REMOVE_MAP_MARKER';\r\nexport const UPDATE_MAP_MARKER = 'UPDATE_MAP_MARKER';\r\n\r\n// === TIPOS DE AÇÃO PARA COMUNICAÇÃO ===\r\nexport const SET_ONLINE_USERS = 'SET_ONLINE_USERS';\r\nexport const ADD_ONLINE_USER = 'ADD_ONLINE_USER';\r\nexport const REMOVE_ONLINE_USER = 'REMOVE_ONLINE_USER';\r\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\r\nexport const RECEIVE_PRIVATE_MESSAGE = 'RECEIVE_PRIVATE_MESSAGE';\r\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\r\nexport const RECEIVE_TYPING_STATUS = 'RECEIVE_TYPING_STATUS';\r\nexport const RECEIVE_USER_JOINED = 'RECEIVE_USER_JOINED';\r\nexport const RECEIVE_USER_LEFT = 'RECEIVE_USER_LEFT';\r\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\r\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\r\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION';\r\n\r\n// === ESTADO INICIAL PARA MAPA ===\r\nconst mapInitialState = {\r\n  // Configurações do mapa\r\n  showGuide: false,\r\n  center: { lat: -22.2086, lng: -47.5988 }, // Coordenadas de Araraquara, SP\r\n  zoom: 14,\r\n  \r\n  // Camadas do mapa\r\n  layers: {\r\n    satellite: false,\r\n    terrain: false,\r\n    traffic: false,\r\n    markers: true\r\n  },\r\n  \r\n  // Marcadores\r\n  markers: [],\r\n  \r\n  // Configurações visuais\r\n  mapStyle: 'default',\r\n  showControls: true,\r\n  showScale: true\r\n};\r\n\r\n// === ESTADO INICIAL PARA COMUNICAÇÃO ===\r\nconst communicationInitialState = {\r\n  // Usuários online\r\n  onlineUsers: [],\r\n  \r\n  // Mensagens\r\n  messages: [],\r\n  privateMessages: [],\r\n  \r\n  // Status de digitação\r\n  typingUsers: [],\r\n  \r\n  // Notificações\r\n  notifications: [],\r\n  \r\n  // Configurações de chat\r\n  chatSettings: {\r\n    soundEnabled: true,\r\n    notificationsEnabled: true,\r\n    showOnlineUsers: true,\r\n    maxMessages: 100\r\n  }\r\n};\r\n\r\n// === REDUCER PARA MAPA ===\r\nconst mapReducer = (state = mapInitialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MAP_GUIDE:\r\n      return {\r\n        ...state,\r\n        showGuide: true\r\n      };\r\n\r\n    case HIDE_MAP_GUIDE:\r\n      return {\r\n        ...state,\r\n        showGuide: false\r\n      };\r\n\r\n    case SET_MAP_CENTER:\r\n      return {\r\n        ...state,\r\n        center: action.payload\r\n      };\r\n\r\n    case SET_MAP_ZOOM:\r\n      return {\r\n        ...state,\r\n        zoom: action.payload\r\n      };\r\n\r\n    case TOGGLE_MAP_LAYER:\r\n      return {\r\n        ...state,\r\n        layers: {\r\n          ...state.layers,\r\n          [action.payload]: !state.layers[action.payload]\r\n        }\r\n      };\r\n\r\n    case SET_MAP_MARKERS:\r\n      return {\r\n        ...state,\r\n        markers: Array.isArray(action.payload) ? action.payload : []\r\n      };\r\n\r\n    case ADD_MAP_MARKER:\r\n      return {\r\n        ...state,\r\n        markers: [\r\n          ...state.markers,\r\n          {\r\n            id: action.payload.id || `marker_${Date.now()}`,\r\n            ...action.payload\r\n          }\r\n        ]\r\n      };\r\n\r\n    case REMOVE_MAP_MARKER:\r\n      return {\r\n        ...state,\r\n        markers: state.markers.filter(marker => marker.id !== action.payload)\r\n      };\r\n\r\n    case UPDATE_MAP_MARKER:\r\n      return {\r\n        ...state,\r\n        markers: state.markers.map(marker =>\r\n          marker.id === action.payload.id\r\n            ? { ...marker, ...action.payload }\r\n            : marker\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// === REDUCER PARA COMUNICAÇÃO ===\r\nconst communicationReducer = (state = communicationInitialState, action) => {\r\n  switch (action.type) {\r\n    // === USUÁRIOS ONLINE ===\r\n    case SET_ONLINE_USERS:\r\n      return {\r\n        ...state,\r\n        onlineUsers: Array.isArray(action.payload) ? action.payload : []\r\n      };\r\n\r\n    case ADD_ONLINE_USER:\r\n      return {\r\n        ...state,\r\n        onlineUsers: [\r\n          ...state.onlineUsers.filter(user => user.id !== action.payload.id),\r\n          action.payload\r\n        ]\r\n      };\r\n\r\n    case REMOVE_ONLINE_USER:\r\n      return {\r\n        ...state,\r\n        onlineUsers: state.onlineUsers.filter(user => user.id !== action.payload)\r\n      };\r\n\r\n    case UPDATE_USER_STATUS:\r\n      return {\r\n        ...state,\r\n        onlineUsers: state.onlineUsers.map(user =>\r\n          user.id === action.payload.userId\r\n            ? { ...user, status: action.payload.status, lastSeen: action.payload.lastSeen }\r\n            : user\r\n        )\r\n      };\r\n\r\n    // === MENSAGENS ===\r\n    case RECEIVE_MESSAGE:\r\n      const newMessage = {\r\n        ...action.payload,\r\n        id: action.payload.id || `msg_${Date.now()}_${Math.random()}`,\r\n        timestamp: action.payload.timestamp || Date.now()\r\n      };\r\n      \r\n      return {\r\n        ...state,\r\n        messages: [\r\n          ...state.messages.slice(-state.chatSettings.maxMessages + 1),\r\n          newMessage\r\n        ]\r\n      };\r\n\r\n    case RECEIVE_PRIVATE_MESSAGE:\r\n      const newPrivateMessage = {\r\n        ...action.payload,\r\n        id: action.payload.id || `private_${Date.now()}_${Math.random()}`,\r\n        timestamp: action.payload.timestamp || Date.now()\r\n      };\r\n      \r\n      return {\r\n        ...state,\r\n        privateMessages: [\r\n          ...state.privateMessages.slice(-state.chatSettings.maxMessages + 1),\r\n          newPrivateMessage\r\n        ]\r\n      };\r\n\r\n    case CLEAR_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: [],\r\n        privateMessages: []\r\n      };\r\n\r\n    // === STATUS DE DIGITAÇÃO ===\r\n    case RECEIVE_TYPING_STATUS:\r\n      const { userId, userName, isTyping } = action.payload;\r\n      \r\n      if (isTyping) {\r\n        return {\r\n          ...state,\r\n          typingUsers: [\r\n            ...state.typingUsers.filter(user => user.userId !== userId),\r\n            { userId, userName, isTyping: true, timestamp: Date.now() }\r\n          ]\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          typingUsers: state.typingUsers.filter(user => user.userId !== userId)\r\n        };\r\n      }\r\n\r\n    // === NOTIFICAÇÕES ===\r\n    case RECEIVE_USER_JOINED:\r\n    case RECEIVE_USER_LEFT:\r\n      const notification = {\r\n        id: `notification_${Date.now()}_${Math.random()}`,\r\n        type: action.type === RECEIVE_USER_JOINED ? 'user_joined' : 'user_left',\r\n        message: action.payload.message,\r\n        userId: action.payload.userId,\r\n        timestamp: action.payload.timestamp || Date.now()\r\n      };\r\n      \r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications.slice(-19),\r\n          notification\r\n        ]\r\n      };\r\n\r\n    case ADD_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications.slice(-19),\r\n          {\r\n            id: action.payload.id || `notification_${Date.now()}`,\r\n            ...action.payload,\r\n            timestamp: action.payload.timestamp || Date.now()\r\n          }\r\n        ]\r\n      };\r\n\r\n    case REMOVE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(notif => notif.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// === REDUCER COMBINADO ===\r\nconst rootReducer = combineReducers({\r\n  map: mapReducer,\r\n  communication: communicationReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// === SELETORES PARA MAPA ===\r\nexport const selectMapGuideVisible = (state) => state.map?.showGuide || false;\r\nexport const selectMapCenter = (state) => state.map?.center || { lat: -22.2086, lng: -47.5988 };\r\nexport const selectMapZoom = (state) => state.map?.zoom || 14;\r\nexport const selectMapLayers = (state) => state.map?.layers || {};\r\nexport const selectMapMarkers = (state) => state.map?.markers || [];\r\n\r\n// === SELETORES PARA COMUNICAÇÃO ===\r\nexport const selectOnlineUsers = (state) => state.communication?.onlineUsers || [];\r\nexport const selectMessages = (state) => state.communication?.messages || [];\r\nexport const selectPrivateMessages = (state) => state.communication?.privateMessages || [];\r\nexport const selectTypingUsers = (state) => state.communication?.typingUsers || [];\r\nexport const selectNotifications = (state) => state.communication?.notifications || [];\r\nexport const selectChatSettings = (state) => state.communication?.chatSettings || {};\r\n\r\n// Seletor para mensagens privadas de um usuário específico\r\nexport const selectPrivateMessagesWithUser = (state, userId) => {\r\n  const messages = selectPrivateMessages(state);\r\n  const currentUserId = state.socket?.id;\r\n  \r\n  return messages.filter(msg => \r\n    (msg.senderId === userId && msg.recipientId === currentUserId) ||\r\n    (msg.senderId === currentUserId && msg.recipientId === userId)\r\n  );\r\n};\r\n\r\n// Seletor para usuários online excluindo o usuário atual\r\nexport const selectOtherOnlineUsers = (state) => {\r\n  const onlineUsers = selectOnlineUsers(state);\r\n  const currentUserId = state.socket?.id;\r\n  \r\n  return onlineUsers.filter(user => user.id !== currentUserId);\r\n};\r\n\r\n// === ACTION CREATORS PARA MAPA ===\r\nexport const showMapGuide = () => ({\r\n  type: SHOW_MAP_GUIDE\r\n});\r\n\r\nexport const hideMapGuide = () => ({\r\n  type: HIDE_MAP_GUIDE\r\n});\r\n\r\nexport const setMapCenter = (center) => ({\r\n  type: SET_MAP_CENTER,\r\n  payload: center\r\n});\r\n\r\nexport const setMapZoom = (zoom) => ({\r\n  type: SET_MAP_ZOOM,\r\n  payload: zoom\r\n});\r\n\r\nexport const toggleMapLayer = (layerName) => ({\r\n  type: TOGGLE_MAP_LAYER,\r\n  payload: layerName\r\n});\r\n\r\nexport const setMapMarkers = (markers) => ({\r\n  type: SET_MAP_MARKERS,\r\n  payload: markers\r\n});\r\n\r\nexport const addMapMarker = (marker) => ({\r\n  type: ADD_MAP_MARKER,\r\n  payload: marker\r\n});\r\n\r\nexport const removeMapMarker = (markerId) => ({\r\n  type: REMOVE_MAP_MARKER,\r\n  payload: markerId\r\n});\r\n\r\nexport const updateMapMarker = (marker) => ({\r\n  type: UPDATE_MAP_MARKER,\r\n  payload: marker\r\n});\r\n\r\n// === ACTION CREATORS PARA COMUNICAÇÃO ===\r\nexport const setOnlineUsers = (users) => ({\r\n  type: SET_ONLINE_USERS,\r\n  payload: users\r\n});\r\n\r\nexport const addOnlineUser = (user) => ({\r\n  type: ADD_ONLINE_USER,\r\n  payload: user\r\n});\r\n\r\nexport const removeOnlineUser = (userId) => ({\r\n  type: REMOVE_ONLINE_USER,\r\n  payload: userId\r\n});\r\n\r\nexport const receiveMessage = (message) => ({\r\n  type: RECEIVE_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const receivePrivateMessage = (message) => ({\r\n  type: RECEIVE_PRIVATE_MESSAGE,\r\n  payload: message\r\n});\r\n\r\nexport const updateUserStatus = (userId, status, lastSeen) => ({\r\n  type: UPDATE_USER_STATUS,\r\n  payload: { userId, status, lastSeen }\r\n});\r\n\r\nexport const receiveTypingStatus = (userId, userName, isTyping) => ({\r\n  type: RECEIVE_TYPING_STATUS,\r\n  payload: { userId, userName, isTyping }\r\n});\r\n\r\nexport const clearMessages = () => ({\r\n  type: CLEAR_MESSAGES\r\n});\r\n\r\nexport const addNotification = (notification) => ({\r\n  type: ADD_NOTIFICATION,\r\n  payload: notification\r\n});\r\n\r\nexport const removeNotification = (notificationId) => ({\r\n  type: REMOVE_NOTIFICATION,\r\n  payload: notificationId\r\n});"]},"metadata":{},"sourceType":"module"}