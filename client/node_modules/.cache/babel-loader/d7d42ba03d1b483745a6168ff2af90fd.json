{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\components\\\\projects\\\\EditProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../button/Button\";\nimport DatePicker from \"react-date-picker\";\nimport User from \"../users/User\";\nimport { BiEdit } from \"react-icons/bi\";\nimport getPreselectedProjectTeams from \"../../helpers/getPreselectedProjectTeams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProjectForm(props) {\n  _s();\n\n  const [name, setName] = useState(props.name || \"\");\n  const [description, setDescription] = useState(props.description || \"\");\n  const [startDate, setStartDate] = useState(new Date(props.startDate) || new Date());\n  const [endDate, setEndDate] = useState(new Date(props.endDate) || new Date());\n  const [showUsers, setShowUsers] = useState(false);\n  const [error, setError] = useState(\"\");\n  const {\n    id,\n    state,\n    onSave\n  } = props;\n\n  const validate = () => {\n    if (!!!name) {\n      setError(\"Please enter a name\");\n      return;\n    }\n\n    if (!!!description) {\n      setError(\"Please enter a description\");\n      return;\n    }\n\n    const selectedUsers = document.getElementById(makeId(id)).getElementsByClassName(\"user-list--selected\");\n    const selectedUsersIDs = [];\n\n    for (const user of selectedUsers) {\n      selectedUsersIDs.push(user.id);\n    }\n\n    const project = {\n      name,\n      description,\n      startDate,\n      endDate,\n      selectedUsers: selectedUsersIDs\n    };\n    setShowUsers(false);\n    setError(\"\");\n    onSave(project, id);\n    document.getElementById(makeId(id)).close();\n  };\n\n  const cancel = () => {\n    setShowUsers(false);\n    setError(\"\");\n    document.getElementById(makeId(id)).close();\n  };\n\n  const makeId = id => {\n    return `dialog-dark-rounded-edit-project-${id}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BiEdit, {\n        className: \"edit-button\",\n        onClick: () => {\n          setShowUsers(true);\n          document.getElementById(makeId(id)).showModal();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: \"nes-dialog is-dark is-rounded\",\n      id: makeId(id),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        autoComplete: \"off\",\n        onSubmit: e => e.preventDefault(),\n        method: \"dialog\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Project name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: name,\n              type: \"text\",\n              onChange: e => {\n                setName(e.target.value);\n                setError('');\n              },\n              onKeyDown: ev => {\n                if (ev.code === 'Space' || ev.code === 'ArrowUp' || ev.code === 'ArrowDown' || ev.code === 'ArrowLeft' || ev.code === 'ArrowRight') {\n                  ev.stopPropagation();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: description,\n              type: \"text\",\n              onChange: e => {\n                setDescription(e.target.value);\n                setError('');\n              },\n              onKeyDown: ev => {\n                if (ev.code === 'Space' || ev.code === 'ArrowUp' || ev.code === 'ArrowDown' || ev.code === 'ArrowLeft' || ev.code === 'ArrowRight') {\n                  ev.stopPropagation();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-date-container\",\n          children: [showUsers && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Team:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"rpgui users-container\",\n              children: getPreselectedProjectTeams(state, id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setEndDate,\n                value: startDate,\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setEndDate,\n                value: endDate,\n                minDate: new Date(startDate),\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cancel-submit\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancel,\n            title: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: validate,\n            title: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProjectForm, \"FWkmTOqhLw0x+/pKO60VAJvzGug=\");\n\n_c = EditProjectForm;\nexport default EditProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProjectForm\");","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/components/projects/EditProjectForm.js"],"names":["React","useState","Button","DatePicker","User","BiEdit","getPreselectedProjectTeams","EditProjectForm","props","name","setName","description","setDescription","startDate","setStartDate","Date","endDate","setEndDate","showUsers","setShowUsers","error","setError","id","state","onSave","validate","selectedUsers","document","getElementById","makeId","getElementsByClassName","selectedUsersIDs","user","push","project","close","cancel","showModal","e","preventDefault","target","value","ev","code","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport User from \"../users/User\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport getPreselectedProjectTeams from \"../../helpers/getPreselectedProjectTeams\";\r\n\r\nfunction EditProjectForm(props) {\r\n  const [name, setName] = useState(props.name || \"\");\r\n  const [description, setDescription] = useState(props.description || \"\");\r\n  const [startDate, setStartDate] = useState(\r\n    new Date(props.startDate) || new Date()\r\n  );\r\n  const [endDate, setEndDate] = useState(new Date(props.endDate) || new Date());\r\n  const [showUsers, setShowUsers] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { id, state, onSave } = props;\r\n\r\n  const validate = () => {\r\n    if (!!!name) {\r\n      setError(\"Please enter a name\");\r\n      return;\r\n    }\r\n    if (!!!description) {\r\n      setError(\"Please enter a description\");\r\n      return;\r\n    }\r\n\r\n    const selectedUsers = document\r\n      .getElementById(makeId(id))\r\n      .getElementsByClassName(\"user-list--selected\");\r\n\r\n    const selectedUsersIDs = [];\r\n\r\n    for (const user of selectedUsers) {\r\n      selectedUsersIDs.push(user.id);\r\n    }\r\n\r\n    const project = {\r\n      name,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n      selectedUsers: selectedUsersIDs,\r\n    };\r\n\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    onSave(project, id);\r\n    document.getElementById(makeId(id)).close();\r\n  };\r\n\r\n  const cancel = () => {\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    document.getElementById(makeId(id)).close();\r\n  };\r\n\r\n  const makeId = (id) => {\r\n    return `dialog-dark-rounded-edit-project-${id}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <BiEdit\r\n          className=\"edit-button\"\r\n          onClick={() => {\r\n            setShowUsers(true);\r\n            document.getElementById(makeId(id)).showModal();\r\n          }}\r\n        ></BiEdit>\r\n      </div>\r\n      <dialog className=\"nes-dialog is-dark is-rounded\" id={makeId(id)}>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={(e) => e.preventDefault()}\r\n          method=\"dialog\"\r\n        >\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <div className='form-label'>\r\n            <label>\r\n              <p>Project name:</p>\r\n              <input\r\n                value={name}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              <p>Description:</p>\r\n              <textarea\r\n                value={description}\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                  setError('');\r\n                }}\r\n                onKeyDown={(ev) => {\r\n                  if (\r\n                    ev.code === 'Space' ||\r\n                    ev.code === 'ArrowUp' ||\r\n                    ev.code === 'ArrowDown' ||\r\n                    ev.code === 'ArrowLeft' ||\r\n                    ev.code === 'ArrowRight'\r\n                  ) {\r\n                    ev.stopPropagation();\r\n                  }\r\n                }}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"team-date-container\">\r\n            {showUsers && (\r\n              <label>\r\n                Team:\r\n                <ul className=\"rpgui users-container\">\r\n                  {getPreselectedProjectTeams(state, id)}\r\n                </ul>\r\n              </label>\r\n            )}\r\n\r\n            <div className=\"date\">\r\n              <label>\r\n                Start date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={startDate}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                End date:\r\n                <DatePicker\r\n                  onChange={setEndDate}\r\n                  value={endDate}\r\n                  minDate={new Date(startDate)}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"cancel-submit\">\r\n            <Button onClick={cancel} title={\"cancel\"}></Button>\r\n            <Button onClick={validate} title={\"submit\"}></Button>\r\n          </div>\r\n        </form>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProjectForm;\r\n"]},"metadata":{},"sourceType":"module"}