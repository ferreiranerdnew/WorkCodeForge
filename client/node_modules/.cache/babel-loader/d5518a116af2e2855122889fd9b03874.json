{"ast":null,"code":"var _jsxFileName = \"C:\\\\00001_Arquivos\\\\0002_gitHub\\\\WorkLand_old1\\\\client\\\\src\\\\components\\\\chat\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // import ReactGiphySearchbox from 'react-giphy-searchbox';\n\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport { ANNOUNCEMENT, SEND_DIRECT, CLEAR_INCOMING, TOGGLE_GIF_SEARCH_OPEN } from '../../reducers/mapReducer';\nimport './chat.css';\nimport { FaClipboardList } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  canOpen\n}) {\n  _s();\n\n  const [chatboxShow, setChatboxShow] = useState(false);\n  const [showGif, setShowGif] = useState(false);\n  const [receiver, setReceiver] = useState('Everyone');\n  const [showInstruction, setShowInstruction] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    width,\n    height,\n    topMargin,\n    leftMargin\n  } = useWindowDimensions();\n  const userId = useSelector(state => state.user.id);\n  const playersArr = useSelector(state => state.players);\n  const incomingGifState = useSelector(state => state.incomingGif);\n  const onlineUsers = useSelector(state => state.players);\n  const gifSearchOpen = useSelector(state => state.gifSearchOpen);\n  useEffect(() => {\n    if (!incomingGifState.gifObj || !canOpen) return;\n    setShowGif(true);\n    let timer;\n    timer = setTimeout(() => {\n      setShowGif(false);\n      dispatch(CLEAR_INCOMING());\n    }, 5200);\n  }, [incomingGifState, canOpen]);\n\n  const toggleGifSearch = () => {\n    dispatch(TOGGLE_GIF_SEARCH_OPEN());\n  };\n\n  const toggleInstruction = () => {\n    setShowInstruction(!showInstruction);\n  };\n\n  const userArr = [];\n\n  for (let key in onlineUsers) {\n    userArr.push(onlineUsers[key].name);\n  }\n\n  const userSelectList = userArr.map((e, ind) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: e,\n      children: e\n    }, ind, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [canOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nes-btn is-primary\",\n      onClick: toggleInstruction,\n      style: {\n        zIndex: 21,\n        position: 'absolute',\n        left: `${width - leftMargin - 255}px`,\n        top: `${topMargin + 38}px`,\n        width: '186px',\n        height: '39px',\n        paddingLeft: '3px'\n      },\n      children: \"Instruction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), canOpen && showInstruction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nes-container is-rounded is-dark\",\n      style: {\n        position: 'absolute',\n        left: `${(width - 375) / 2}px`,\n        //keep instruction window centered\n        top: `${(height - 200) / 2}px`,\n        width: '375px',\n        height: '200px',\n        margin: '0 15px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          'justify-content': 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            zIndex: '1',\n            color: 'white'\n          },\n          children: \"Instruction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"icon-list\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              backgroundColor: 'white'\n            },\n            className: \"nes-icon close is-small nes-pointer\",\n            onClick: () => toggleInstruction()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Move: \\u2B06 \\u27A1 \\u2B07 \\u2B05 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Action: Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Close window: Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), canOpen && playersArr[userId] !== undefined && playersArr[userId].socketId && playersArr[userId].skin && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nes-btn is-primary\",\n      onClick: toggleGifSearch,\n      style: {\n        zIndex: 20,\n        position: 'absolute',\n        left: `${width - leftMargin - 255}px`,\n        top: `${topMargin + 134}px`,\n        width: '186px',\n        height: '39px',\n        paddingLeft: '3px'\n      },\n      children: \"Send a GIF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this), canOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          left: `${leftMargin}px`,\n          top: `${topMargin - 10}px`,\n          margin: '0 15px 0',\n          position: 'absolute',\n          zIndex: -200,\n          color: 'white'\n        },\n        children: \"WorkLand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), gifSearchOpen && canOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nes-container is-rounded is-dark\",\n      style: {\n        zIndex: 20,\n        position: 'absolute',\n        left: `${width / 2 + 200}px`,\n        top: `${height / 2 - 150}px`,\n        width: '335px',\n        margin: '0 15px 0'\n      },\n      onKeyPressCapture: e => {\n        if (e.code === 'Space') {\n          e.stopPropagation();\n          console.log(e.isPropagationStopped());\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          'justify-content': 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'white'\n          },\n          children: \"Send a GIF!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"icon-list\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              backgroundColor: 'white'\n            },\n            className: \"nes-icon close is-small nes-pointer\",\n            onClick: () => toggleGifSearch()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white'\n        },\n        children: [\"To:\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          width: '100%'\n        },\n        name: \"pets\",\n        id: \"pet-select\",\n        onChange: event => setReceiver(event.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Everyone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), userSelectList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactGiphySearchbox, {\n        masonryConfig: [{\n          columns: 2,\n          imageWidth: 110,\n          gutter: 4\n        }, {\n          mq: '280px',\n          columns: 2,\n          imageWidth: 140,\n          gutter: 4\n        }],\n        apiKey: \"IqdjO72Noi1ikvZCa1ehpeiKkK7atZGd\",\n        onSelect: item => {\n          toggleGifSearch();\n\n          if (receiver === 'Everyone') {\n            return dispatch(ANNOUNCEMENT({\n              gifObj: item\n            }));\n          }\n\n          dispatch(SEND_DIRECT({\n            gifObj: item,\n            receiverName: receiver\n          }));\n          setReceiver('Everyone');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), showGif && canOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        position: 'absolute',\n        flexDirection: 'column',\n        left: `${width / 2 + 260}px`,\n        //260 to center the GIF within walls on the map\n        top: `${height / 2 - 70}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"textBubble\",\n        style: {\n          width: '235px',\n          marginBottom: '0px !important',\n          padding: '10px 10px 10px 10px',\n          justifyContent: 'center'\n        },\n        className: \"nes-balloon from-right\",\n        children: [\"A GIF' from: \", incomingGifState.senderName, \" to\", ' ', incomingGifState.receiverName === null ? 'everyone' : `${incomingGifState.receiverName}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        style: {\n          width: '235px',\n          justifyContent: 'center'\n        },\n        title: \"GIF\",\n        src: incomingGifState.gifObj.embed_url,\n        width: \"320\",\n        height: \"320\",\n        frameBorder: \"0\",\n        className: \"giphy-embed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chat, \"Zlu4HFbP9BJPqAjcfY45MQUessg=\", false, function () {\n  return [useDispatch, useWindowDimensions, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/00001_Arquivos/0002_gitHub/WorkLand_old1/client/src/components/chat/chat.js"],"names":["useState","useEffect","useDispatch","useSelector","useWindowDimensions","ANNOUNCEMENT","SEND_DIRECT","CLEAR_INCOMING","TOGGLE_GIF_SEARCH_OPEN","FaClipboardList","Chat","canOpen","chatboxShow","setChatboxShow","showGif","setShowGif","receiver","setReceiver","showInstruction","setShowInstruction","dispatch","width","height","topMargin","leftMargin","userId","state","user","id","playersArr","players","incomingGifState","incomingGif","onlineUsers","gifSearchOpen","gifObj","timer","setTimeout","toggleGifSearch","toggleInstruction","userArr","key","push","name","userSelectList","map","e","ind","zIndex","position","left","top","paddingLeft","margin","display","color","backgroundColor","undefined","socketId","skin","code","stopPropagation","console","log","isPropagationStopped","event","target","value","columns","imageWidth","gutter","mq","item","receiverName","flexDirection","marginBottom","padding","justifyContent","senderName","embed_url"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import ReactGiphySearchbox from 'react-giphy-searchbox';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\nimport {\r\n  ANNOUNCEMENT,\r\n  SEND_DIRECT,\r\n  CLEAR_INCOMING,\r\n  TOGGLE_GIF_SEARCH_OPEN,\r\n} from '../../reducers/mapReducer';\r\nimport './chat.css';\r\nimport { FaClipboardList } from 'react-icons/fa';\r\nfunction Chat({ canOpen }) {\r\n  const [chatboxShow, setChatboxShow] = useState(false);\r\n  const [showGif, setShowGif] = useState(false);\r\n  const [receiver, setReceiver] = useState('Everyone');\r\n  const [showInstruction, setShowInstruction] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { width, height, topMargin, leftMargin } = useWindowDimensions();\r\n  const userId = useSelector((state) => state.user.id);\r\n  const playersArr = useSelector((state) => state.players);\r\n  const incomingGifState = useSelector((state) => state.incomingGif);\r\n  const onlineUsers = useSelector((state) => state.players);\r\n  const gifSearchOpen = useSelector((state) => state.gifSearchOpen);\r\n\r\n  useEffect(() => {\r\n    if (!incomingGifState.gifObj || !canOpen) return;\r\n    setShowGif(true);\r\n    let timer;\r\n    timer = setTimeout(() => {\r\n      setShowGif(false);\r\n      dispatch(CLEAR_INCOMING());\r\n    }, 5200);\r\n  }, [incomingGifState, canOpen]);\r\n\r\n  const toggleGifSearch = () => {\r\n    dispatch(TOGGLE_GIF_SEARCH_OPEN());\r\n  };\r\n  const toggleInstruction = () => {\r\n    setShowInstruction(!showInstruction);\r\n  };\r\n  const userArr = [];\r\n  for (let key in onlineUsers) {\r\n    userArr.push(onlineUsers[key].name);\r\n  }\r\n  const userSelectList = userArr.map((e, ind) => {\r\n    return (\r\n      <option key={ind} value={e}>\r\n        {e}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* ---Instruction--- */}\r\n      {canOpen && (\r\n        <button\r\n          className=\"nes-btn is-primary\"\r\n          onClick={toggleInstruction}\r\n          style={{\r\n            zIndex: 21,\r\n            position: 'absolute',\r\n            left: `${width - leftMargin - 255}px`,\r\n            top: `${topMargin + 38}px`,\r\n            width: '186px',\r\n            height: '39px',\r\n            paddingLeft: '3px',\r\n          }}>\r\n          Instruction\r\n        </button>\r\n      )}\r\n      {canOpen && showInstruction && (\r\n        <div\r\n          className=\"nes-container is-rounded is-dark\"\r\n          style={{\r\n            position: 'absolute',\r\n            left: `${(width - 375) / 2}px`, //keep instruction window centered\r\n            top: `${(height - 200) / 2}px`,\r\n            width: '375px',\r\n            height: '200px',\r\n            margin: '0 15px 0',\r\n          }}>\r\n          <div style={{ display: 'flex', 'justify-content': 'space-between' }}>\r\n            <h2\r\n              style={{\r\n                zIndex: '1',\r\n                color: 'white',\r\n              }}>\r\n              Instruction\r\n            </h2>\r\n            <section className=\"icon-list\">\r\n              <i\r\n                style={{ backgroundColor: 'white' }}\r\n                className=\"nes-icon close is-small nes-pointer\"\r\n                onClick={() => toggleInstruction()}></i>\r\n            </section>\r\n          </div>\r\n          <p>Move: ⬆ ➡ ⬇ ⬅ </p>\r\n          <p>Action: Space</p>\r\n          <p>Close window: Space</p>\r\n        </div>\r\n      )}\r\n      {/* ---Send GIF button--- */}\r\n      {canOpen &&\r\n        playersArr[userId] !== undefined &&\r\n        playersArr[userId].socketId &&\r\n        playersArr[userId].skin && (\r\n          <button\r\n            className=\"nes-btn is-primary\"\r\n            onClick={toggleGifSearch}\r\n            style={{\r\n              zIndex: 20,\r\n              position: 'absolute',\r\n              left: `${width - leftMargin - 255}px`,\r\n              top: `${topMargin + 134}px`,\r\n              width: '186px',\r\n              height: '39px',\r\n              paddingLeft: '3px',\r\n            }}>\r\n            Send a GIF\r\n          </button>\r\n        )}\r\n\r\n      {/* ---Logo--- */}\r\n      {canOpen && (\r\n        <div>\r\n          <h1\r\n            style={{\r\n              left: `${leftMargin}px`,\r\n              top: `${topMargin - 10}px`,\r\n              margin: '0 15px 0',\r\n              position: 'absolute',\r\n              zIndex: -200,\r\n              color: 'white',\r\n            }}>\r\n            WorkLand\r\n          </h1>\r\n        </div>\r\n      )}\r\n\r\n      {/* ---Search GIF Box--- */}\r\n      {gifSearchOpen && canOpen && (\r\n        <div\r\n          className=\"nes-container is-rounded is-dark\"\r\n          style={{\r\n            zIndex: 20,\r\n            position: 'absolute',\r\n            left: `${width / 2 + 200}px`,\r\n            top: `${height / 2 - 150}px`,\r\n            width: '335px',\r\n            margin: '0 15px 0',\r\n          }}\r\n          onKeyPressCapture={(e) => {\r\n            if (e.code === 'Space') {\r\n              e.stopPropagation();\r\n              console.log(e.isPropagationStopped());\r\n            }\r\n          }}>\r\n          <div style={{ display: 'flex', 'justify-content': 'space-between' }}>\r\n            <h3\r\n              style={{\r\n                color: 'white',\r\n              }}>\r\n              Send a GIF!\r\n            </h3>\r\n            <section className=\"icon-list\">\r\n              <i\r\n                style={{ backgroundColor: 'white' }}\r\n                className=\"nes-icon close is-small nes-pointer\"\r\n                onClick={() => toggleGifSearch()}></i>\r\n            </section>\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: 'white',\r\n            }}>\r\n            To:{' '}\r\n          </div>\r\n          <select\r\n            style={{\r\n              width: '100%',\r\n            }}\r\n            name=\"pets\"\r\n            id=\"pet-select\"\r\n            onChange={(event) => setReceiver(event.target.value)}>\r\n            <option value=\"\">Everyone</option>\r\n            {userSelectList}\r\n          </select>\r\n          <ReactGiphySearchbox\r\n            masonryConfig={[\r\n              { columns: 2, imageWidth: 110, gutter: 4 },\r\n              { mq: '280px', columns: 2, imageWidth: 140, gutter: 4 },\r\n            ]}\r\n            apiKey=\"IqdjO72Noi1ikvZCa1ehpeiKkK7atZGd\"\r\n            onSelect={(item) => {\r\n              toggleGifSearch();\r\n              if (receiver === 'Everyone') {\r\n                return dispatch(ANNOUNCEMENT({ gifObj: item }));\r\n              }\r\n              dispatch(SEND_DIRECT({ gifObj: item, receiverName: receiver }));\r\n              setReceiver('Everyone');\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* ---GIF Message Display--- */}\r\n      {showGif && canOpen && (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            position: 'absolute',\r\n            flexDirection: 'column',\r\n            left: `${width / 2 + 260}px`, //260 to center the GIF within walls on the map\r\n            top: `${height / 2 - 70}px`,\r\n          }}>\r\n          <p\r\n            className=\"textBubble\"\r\n            style={{\r\n              width: '235px',\r\n              marginBottom: '0px !important',\r\n              padding: '10px 10px 10px 10px',\r\n              justifyContent: 'center',\r\n            }}\r\n            className=\"nes-balloon from-right\">\r\n            A GIF' from: {incomingGifState.senderName} to{' '}\r\n            {incomingGifState.receiverName === null\r\n              ? 'everyone'\r\n              : `${incomingGifState.receiverName}`}\r\n          </p>\r\n\r\n          <iframe\r\n            style={{\r\n              width: '235px',\r\n              justifyContent: 'center',\r\n            }}\r\n            title=\"GIF\"\r\n            src={incomingGifState.gifObj.embed_url}\r\n            width=\"320\"\r\n            height=\"320\"\r\n            frameBorder=\"0\"\r\n            className=\"giphy-embed\"></iframe>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}