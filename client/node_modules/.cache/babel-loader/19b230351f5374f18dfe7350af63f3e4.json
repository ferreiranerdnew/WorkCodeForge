{"ast":null,"code":"import { MAP_TABLE } from '../utils/constants';\nimport { initX, initY, stepSize } from '../utils/constants';\n\nfunction getNextTile(direction, x, y) {\n  //relative position related x and y\n  let position = {\n    left: x,\n    top: y\n  };\n  let newPos; //Map array coordinates:\n\n  let X;\n  let Y; // console.log(\"direction :>> \", direction);\n  // console.log(\"postion :>> \", position);\n\n  switch (direction) {\n    case 'ArrowDown':\n      newPos = position.top + stepSize;\n      X = (position.left - position.left % 32) / 32;\n      Y = (newPos - newPos % 32) / 32;\n      return MAP_TABLE[Y][X];\n\n    case 'ArrowLeft':\n      newPos = position.left - stepSize;\n      X = (newPos - newPos % 32) / 32;\n      Y = (position.top - position.top % 32) / 32;\n      return MAP_TABLE[Y][X];\n\n    case 'ArrowRight':\n      newPos = position.left + stepSize;\n      X = (newPos - newPos % 32) / 32;\n      Y = (position.top - position.top % 32) / 32;\n      return MAP_TABLE[Y][X];\n\n    case 'ArrowUp':\n      newPos = position.top - stepSize;\n      X = (position.left - position.left % 32) / 32;\n      Y = (newPos - newPos % 32) / 32;\n      return MAP_TABLE[Y][X];\n\n    default:\n  }\n}\n\nexport default getNextTile;","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/utils/checkNextTile.js"],"names":["MAP_TABLE","initX","initY","stepSize","getNextTile","direction","x","y","position","left","top","newPos","X","Y"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAuC,oBAAvC;;AACA,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,CAAhC,EAAmCC,CAAnC,EAAsC;AACpC;AACA,MAAIC,QAAQ,GAAG;AAAEC,IAAAA,IAAI,EAAEH,CAAR;AAAWI,IAAAA,GAAG,EAAEH;AAAhB,GAAf;AACA,MAAII,MAAJ,CAHoC,CAIpC;;AACA,MAAIC,CAAJ;AACA,MAAIC,CAAJ,CANoC,CAOpC;AACA;;AAEA,UAAQR,SAAR;AACE,SAAK,WAAL;AACEM,MAAAA,MAAM,GAAGH,QAAQ,CAACE,GAAT,GAAeP,QAAxB;AACAS,MAAAA,CAAC,GAAG,CAACJ,QAAQ,CAACC,IAAT,GAAiBD,QAAQ,CAACC,IAAT,GAAgB,EAAlC,IAAyC,EAA7C;AACAI,MAAAA,CAAC,GAAG,CAACF,MAAM,GAAIA,MAAM,GAAG,EAApB,IAA2B,EAA/B;AAEA,aAAOX,SAAS,CAACa,CAAD,CAAT,CAAaD,CAAb,CAAP;;AAEF,SAAK,WAAL;AACED,MAAAA,MAAM,GAAGH,QAAQ,CAACC,IAAT,GAAgBN,QAAzB;AACAS,MAAAA,CAAC,GAAG,CAACD,MAAM,GAAIA,MAAM,GAAG,EAApB,IAA2B,EAA/B;AACAE,MAAAA,CAAC,GAAG,CAACL,QAAQ,CAACE,GAAT,GAAgBF,QAAQ,CAACE,GAAT,GAAe,EAAhC,IAAuC,EAA3C;AAEA,aAAOV,SAAS,CAACa,CAAD,CAAT,CAAaD,CAAb,CAAP;;AAEF,SAAK,YAAL;AACED,MAAAA,MAAM,GAAGH,QAAQ,CAACC,IAAT,GAAgBN,QAAzB;AACAS,MAAAA,CAAC,GAAG,CAACD,MAAM,GAAIA,MAAM,GAAG,EAApB,IAA2B,EAA/B;AACAE,MAAAA,CAAC,GAAG,CAACL,QAAQ,CAACE,GAAT,GAAgBF,QAAQ,CAACE,GAAT,GAAe,EAAhC,IAAuC,EAA3C;AAEA,aAAOV,SAAS,CAACa,CAAD,CAAT,CAAaD,CAAb,CAAP;;AAEF,SAAK,SAAL;AACED,MAAAA,MAAM,GAAGH,QAAQ,CAACE,GAAT,GAAeP,QAAxB;AACAS,MAAAA,CAAC,GAAG,CAACJ,QAAQ,CAACC,IAAT,GAAiBD,QAAQ,CAACC,IAAT,GAAgB,EAAlC,IAAyC,EAA7C;AACAI,MAAAA,CAAC,GAAG,CAACF,MAAM,GAAIA,MAAM,GAAG,EAApB,IAA2B,EAA/B;AAEA,aAAOX,SAAS,CAACa,CAAD,CAAT,CAAaD,CAAb,CAAP;;AAEF;AA7BF;AA+BD;;AAED,eAAeR,WAAf","sourcesContent":["import { MAP_TABLE } from '../utils/constants';\r\nimport { initX, initY, stepSize } from '../utils/constants';\r\nfunction getNextTile(direction, x, y) {\r\n  //relative position related x and y\r\n  let position = { left: x, top: y };\r\n  let newPos;\r\n  //Map array coordinates:\r\n  let X;\r\n  let Y;\r\n  // console.log(\"direction :>> \", direction);\r\n  // console.log(\"postion :>> \", position);\r\n\r\n  switch (direction) {\r\n    case 'ArrowDown':\r\n      newPos = position.top + stepSize;\r\n      X = (position.left - (position.left % 32)) / 32;\r\n      Y = (newPos - (newPos % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    case 'ArrowLeft':\r\n      newPos = position.left - stepSize;\r\n      X = (newPos - (newPos % 32)) / 32;\r\n      Y = (position.top - (position.top % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    case 'ArrowRight':\r\n      newPos = position.left + stepSize;\r\n      X = (newPos - (newPos % 32)) / 32;\r\n      Y = (position.top - (position.top % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    case 'ArrowUp':\r\n      newPos = position.top - stepSize;\r\n      X = (position.left - (position.left % 32)) / 32;\r\n      Y = (newPos - (newPos % 32)) / 32;\r\n\r\n      return MAP_TABLE[Y][X];\r\n\r\n    default:\r\n  }\r\n}\r\n\r\nexport default getNextTile;\r\n"]},"metadata":{},"sourceType":"module"}