{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\components\\\\chat\\\\chat.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux'; // import { JOIN_VIDEO } from './actions'; // <- Você deve importar isso corretamente\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.8);\n  border-radius: 10px;\n  margin: 20px;\n`;\n_c = Container;\nconst StyledVideo = styled.video`\n  height: 200px;\n  width: 300px;\n  margin: 10px;\n  border-radius: 8px;\n  background: #333;\n`;\n_c2 = StyledVideo;\nconst ErrorMessage = styled.div`\n  color: red;\n  padding: 20px;\n  text-align: center;\n  border: 1px solid red;\n  border-radius: 5px;\n  margin: 10px;\n`;\n_c3 = ErrorMessage;\nconst Controls = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n`;\n_c4 = Controls;\nconst Button = styled.button`\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #007bff;\n  color: white;\n  \n  &:hover {\n    background: #0056b3;\n  }\n  \n  &.danger {\n    background: #dc3545;\n  }\n  \n  &.danger:hover {\n    background: #c82333;\n  }\n`;\n_c5 = Button;\nconst StatusIndicator = styled.div`\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-size: 12px;\n  margin: 5px;\n  \n  &.success {\n    background: #d4edda;\n    color: #155724;\n  }\n  \n  &.warning {\n    background: #fff3cd;\n    color: #856404;\n  }\n`;\n_c6 = StatusIndicator;\n\nfunction Video({\n  peer\n}) {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => {\n    peer.on('stream', stream => {\n      ref.current.srcObject = stream;\n    });\n  }, [peer]);\n  return /*#__PURE__*/_jsxDEV(StyledVideo, {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Video, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c7 = Video;\n\nfunction VideoContainer() {\n  _s2();\n\n  const [peers, setPeers] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [streamType, setStreamType] = useState(null);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const userVideo = useRef();\n  const streamRef = useRef();\n  const dispatch = useDispatch(); // Função para verificar se a API está disponível\n\n  const checkMediaDevicesSupport = () => {\n    console.log('Verificando suporte à API de mídia...');\n\n    if (!navigator.mediaDevices) {\n      console.warn('navigator.mediaDevices não disponível');\n      return false;\n    }\n\n    if (!navigator.mediaDevices.getUserMedia) {\n      console.warn('navigator.mediaDevices.getUserMedia não disponível');\n      return false;\n    }\n\n    console.log('API de mídia suportada');\n    return true;\n  }; // Função para criar um stream de teste (mock)\n\n\n  const createMockStream = () => {\n    console.log('Criando stream mock para teste'); // Cria um canvas para simular vídeo\n\n    const canvas = document.createElement('canvas');\n    canvas.width = 640;\n    canvas.height = 480;\n    const ctx = canvas.getContext('2d'); // Animação simples para o mock\n\n    let frame = 0;\n\n    const animate = () => {\n      // Fundo colorido com gradiente\n      const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n      gradient.addColorStop(0, '#4CAF50');\n      gradient.addColorStop(1, '#2E7D32');\n      ctx.fillStyle = gradient;\n      ctx.fillRect(0, 0, canvas.width, canvas.height); // Texto principal\n\n      ctx.fillStyle = 'white';\n      ctx.font = 'bold 32px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('TESTE - Video Mock', canvas.width / 2, canvas.height / 2 - 40); // Subtítulo\n\n      ctx.font = '20px Arial';\n      ctx.fillText('Ambiente de Desenvolvimento', canvas.width / 2, canvas.height / 2 + 10); // Indicador de \"gravação\"\n\n      ctx.fillStyle = frame % 60 < 30 ? '#ff4444' : '#ffffff';\n      ctx.beginPath();\n      ctx.arc(50, 50, 10, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = 'white';\n      ctx.font = '14px Arial';\n      ctx.textAlign = 'left';\n      ctx.fillText('REC', 70, 55); // Timestamp\n\n      ctx.textAlign = 'right';\n      ctx.fillText(new Date().toLocaleTimeString(), canvas.width - 20, 30);\n      frame++;\n      requestAnimationFrame(animate);\n    };\n\n    animate(); // Converte canvas para stream\n\n    const stream = canvas.captureStream(30); // 30 FPS\n    // Simula áudio (silencioso)\n\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const destination = audioContext.createMediaStreamDestination();\n    const oscillator = audioContext.createOscillator();\n    const gain = audioContext.createGain();\n    oscillator.connect(gain);\n    gain.connect(destination);\n    gain.gain.value = 0; // Silencioso\n\n    oscillator.frequency.value = 440;\n    oscillator.start(); // Adiciona track de áudio ao stream\n\n    destination.stream.getAudioTracks().forEach(track => {\n      stream.addTrack(track);\n    });\n    return stream;\n  }; // Função para obter o stream de mídia\n\n\n  const getMediaStream = async () => {\n    console.log('getMediaStream: Iniciando');\n\n    try {\n      setIsLoading(true);\n      setError(null); // Verificar se a API está disponível\n\n      if (!checkMediaDevicesSupport()) {\n        console.warn('API de mídia não suportada - usando mock para teste');\n        const mockStream = createMockStream();\n        streamRef.current = mockStream;\n\n        if (userVideo.current) {\n          userVideo.current.srcObject = mockStream;\n          console.log('Stream mock aplicado ao vídeo');\n        }\n\n        setStreamType('mock');\n        setIsActive(true); // dispatch(JOIN_VIDEO()); // Descomente se estiver definida\n\n        return;\n      } // Em ambiente de teste, tenta primeiro getUserMedia, se falhar usa mock\n\n\n      try {\n        console.log('Tentando acessar getUserMedia...');\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: videoEnabled,\n          audio: audioEnabled\n        });\n        streamRef.current = stream;\n\n        if (userVideo.current) {\n          userVideo.current.srcObject = stream;\n          console.log('Stream real aplicado ao vídeo');\n        }\n\n        setStreamType('real');\n        setIsActive(true); // dispatch(JOIN_VIDEO()); // Descomente se estiver definida\n      } catch (mediaError) {\n        console.warn('Erro ao acessar mídia real, usando mock:', mediaError); // Se falhar, usa stream mock para testes\n\n        const mockStream = createMockStream();\n        streamRef.current = mockStream;\n\n        if (userVideo.current) {\n          userVideo.current.srcObject = mockStream;\n          console.log('Stream mock aplicado após falha da mídia real');\n        }\n\n        setStreamType('mock');\n        setIsActive(true); // dispatch(JOIN_VIDEO()); // Descomente se estiver definida\n      }\n    } catch (err) {\n      console.error('Erro geral:', err); // Mensagens de erro mais específicas\n\n      let errorMessage = 'Erro ao acessar câmera e microfone';\n\n      if (err.name === 'NotAllowedError') {\n        errorMessage = 'Acesso à câmera e microfone negado. Permita o acesso nas configurações do navegador.';\n      } else if (err.name === 'NotFoundError') {\n        errorMessage = 'Câmera ou microfone não encontrados.';\n      } else if (err.name === 'NotSupportedError') {\n        errorMessage = 'Câmera ou microfone não suportados neste navegador.';\n      }\n\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n      console.log('getMediaStream: Finalizado');\n    }\n  }; // Função para parar o stream\n\n\n  const stopStream = () => {\n    if (streamRef.current) {\n      const tracks = streamRef.current.getTracks();\n      tracks.forEach(track => {\n        track.stop();\n        console.log('Track parada:', track.kind);\n      });\n    }\n\n    if (userVideo.current) {\n      userVideo.current.srcObject = null;\n    }\n\n    streamRef.current = null;\n    setIsActive(false);\n    setStreamType(null);\n  }; // Função para alternar áudio\n\n\n  const toggleAudio = () => {\n    if (streamRef.current) {\n      const audioTracks = streamRef.current.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.enabled = !audioEnabled;\n      });\n      setAudioEnabled(!audioEnabled);\n    }\n  }; // Função para alternar vídeo\n\n\n  const toggleVideo = () => {\n    if (streamRef.current) {\n      const videoTracks = streamRef.current.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.enabled = !videoEnabled;\n      });\n      setVideoEnabled(!videoEnabled);\n    }\n  };\n\n  useEffect(() => {\n    console.log('VideoContainer: Iniciando useEffect');\n\n    const initializeMedia = async () => {\n      await getMediaStream();\n    };\n\n    initializeMedia(); // Cleanup function para parar o stream quando o componente for desmontado\n\n    return () => {\n      console.log('VideoContainer: Cleanup executado');\n      const stream = streamRef.current;\n\n      if (stream) {\n        const tracks = stream.getTracks();\n        tracks.forEach(track => {\n          track.stop();\n          console.log('Track parada no cleanup:', track.kind);\n        });\n      }\n    };\n  }, []); // getMediaStream não precisa estar na dependência pois não muda\n  // Função para tentar novamente\n\n  const handleRetry = () => {\n    getMediaStream();\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Carregando acesso \\xE0 c\\xE2mera e microfone...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Erro de M\\xEDdia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRetry,\n          children: \"Tentar Novamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [streamType && /*#__PURE__*/_jsxDEV(StatusIndicator, {\n      className: streamType === 'real' ? 'success' : 'warning',\n      children: streamType === 'real' ? '🟢 Mídia Real Ativa' : '🟡 Modo Teste/Mock'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledVideo, {\n      muted: streamType === 'real' // Só mutado se for stream real para evitar feedback\n      ,\n      ref: userVideo,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleAudio,\n        style: {\n          background: audioEnabled ? '#28a745' : '#dc3545'\n        },\n        children: audioEnabled ? '🔊 Áudio On' : '🔇 Áudio Off'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleVideo,\n        style: {\n          background: videoEnabled ? '#28a745' : '#dc3545'\n        },\n        children: videoEnabled ? '📹 Vídeo On' : '📷 Vídeo Off'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"danger\",\n        onClick: stopStream,\n        children: \"\\u23F9\\uFE0F Parar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), peers.map((peer, index) => /*#__PURE__*/_jsxDEV(Video, {\n      peer: peer\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(VideoContainer, \"T/a2jI9holpJtNTVbQGRwQmDn7w=\", false, function () {\n  return [useDispatch];\n});\n\n_c8 = VideoContainer;\nexport default VideoContainer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledVideo\");\n$RefreshReg$(_c3, \"ErrorMessage\");\n$RefreshReg$(_c4, \"Controls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"StatusIndicator\");\n$RefreshReg$(_c7, \"Video\");\n$RefreshReg$(_c8, \"VideoContainer\");","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/components/chat/chat.js"],"names":["React","useEffect","useRef","useState","io","Peer","styled","useDispatch","Container","div","StyledVideo","video","ErrorMessage","Controls","Button","button","StatusIndicator","Video","peer","ref","on","stream","current","srcObject","VideoContainer","peers","setPeers","error","setError","isLoading","setIsLoading","isActive","setIsActive","streamType","setStreamType","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","userVideo","streamRef","dispatch","checkMediaDevicesSupport","console","log","navigator","mediaDevices","warn","getUserMedia","createMockStream","canvas","document","createElement","width","height","ctx","getContext","frame","animate","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","font","textAlign","fillText","beginPath","arc","Math","PI","fill","Date","toLocaleTimeString","requestAnimationFrame","captureStream","audioContext","window","AudioContext","webkitAudioContext","destination","createMediaStreamDestination","oscillator","createOscillator","gain","createGain","connect","value","frequency","start","getAudioTracks","forEach","track","addTrack","getMediaStream","mockStream","audio","mediaError","err","errorMessage","name","stopStream","tracks","getTracks","stop","kind","toggleAudio","audioTracks","enabled","toggleVideo","videoTracks","getVideoTracks","initializeMedia","handleRetry","color","background","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\n// import { JOIN_VIDEO } from './actions'; // <- Você deve importar isso corretamente\r\n\r\nconst Container = styled.div`\r\n  padding: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  border-radius: 10px;\r\n  margin: 20px;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n  height: 200px;\r\n  width: 300px;\r\n  margin: 10px;\r\n  border-radius: 8px;\r\n  background: #333;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  padding: 20px;\r\n  text-align: center;\r\n  border: 1px solid red;\r\n  border-radius: 5px;\r\n  margin: 10px;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  background: #007bff;\r\n  color: white;\r\n  \r\n  &:hover {\r\n    background: #0056b3;\r\n  }\r\n  \r\n  &.danger {\r\n    background: #dc3545;\r\n  }\r\n  \r\n  &.danger:hover {\r\n    background: #c82333;\r\n  }\r\n`;\r\n\r\nconst StatusIndicator = styled.div`\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  margin: 5px;\r\n  \r\n  &.success {\r\n    background: #d4edda;\r\n    color: #155724;\r\n  }\r\n  \r\n  &.warning {\r\n    background: #fff3cd;\r\n    color: #856404;\r\n  }\r\n`;\r\n\r\nfunction Video({ peer }) {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    peer.on('stream', (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n  }, [peer]);\r\n\r\n  return <StyledVideo playsInline autoPlay ref={ref} />;\r\n}\r\n\r\nfunction VideoContainer() {\r\n  const [peers, setPeers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [streamType, setStreamType] = useState(null);\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const userVideo = useRef();\r\n  const streamRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  // Função para verificar se a API está disponível\r\n  const checkMediaDevicesSupport = () => {\r\n    console.log('Verificando suporte à API de mídia...');\r\n    \r\n    if (!navigator.mediaDevices) {\r\n      console.warn('navigator.mediaDevices não disponível');\r\n      return false;\r\n    }\r\n    \r\n    if (!navigator.mediaDevices.getUserMedia) {\r\n      console.warn('navigator.mediaDevices.getUserMedia não disponível');\r\n      return false;\r\n    }\r\n    \r\n    console.log('API de mídia suportada');\r\n    return true;\r\n  };\r\n\r\n  // Função para criar um stream de teste (mock)\r\n  const createMockStream = () => {\r\n    console.log('Criando stream mock para teste');\r\n    \r\n    // Cria um canvas para simular vídeo\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 640;\r\n    canvas.height = 480;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    // Animação simples para o mock\r\n    let frame = 0;\r\n    const animate = () => {\r\n      // Fundo colorido com gradiente\r\n      const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\r\n      gradient.addColorStop(0, '#4CAF50');\r\n      gradient.addColorStop(1, '#2E7D32');\r\n      ctx.fillStyle = gradient;\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Texto principal\r\n      ctx.fillStyle = 'white';\r\n      ctx.font = 'bold 32px Arial';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText('TESTE - Video Mock', canvas.width / 2, canvas.height / 2 - 40);\r\n      \r\n      // Subtítulo\r\n      ctx.font = '20px Arial';\r\n      ctx.fillText('Ambiente de Desenvolvimento', canvas.width / 2, canvas.height / 2 + 10);\r\n      \r\n      // Indicador de \"gravação\"\r\n      ctx.fillStyle = frame % 60 < 30 ? '#ff4444' : '#ffffff';\r\n      ctx.beginPath();\r\n      ctx.arc(50, 50, 10, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.fillStyle = 'white';\r\n      ctx.font = '14px Arial';\r\n      ctx.textAlign = 'left';\r\n      ctx.fillText('REC', 70, 55);\r\n      \r\n      // Timestamp\r\n      ctx.textAlign = 'right';\r\n      ctx.fillText(new Date().toLocaleTimeString(), canvas.width - 20, 30);\r\n      \r\n      frame++;\r\n      requestAnimationFrame(animate);\r\n    };\r\n    \r\n    animate();\r\n    \r\n    // Converte canvas para stream\r\n    const stream = canvas.captureStream(30); // 30 FPS\r\n    \r\n    // Simula áudio (silencioso)\r\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    const destination = audioContext.createMediaStreamDestination();\r\n    const oscillator = audioContext.createOscillator();\r\n    const gain = audioContext.createGain();\r\n    \r\n    oscillator.connect(gain);\r\n    gain.connect(destination);\r\n    gain.gain.value = 0; // Silencioso\r\n    oscillator.frequency.value = 440;\r\n    oscillator.start();\r\n    \r\n    // Adiciona track de áudio ao stream\r\n    destination.stream.getAudioTracks().forEach(track => {\r\n      stream.addTrack(track);\r\n    });\r\n    \r\n    return stream;\r\n  };\r\n\r\n  // Função para obter o stream de mídia\r\n  const getMediaStream = async () => {\r\n    console.log('getMediaStream: Iniciando');\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Verificar se a API está disponível\r\n      if (!checkMediaDevicesSupport()) {\r\n        console.warn('API de mídia não suportada - usando mock para teste');\r\n        const mockStream = createMockStream();\r\n        streamRef.current = mockStream;\r\n        \r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = mockStream;\r\n          console.log('Stream mock aplicado ao vídeo');\r\n        }\r\n        \r\n        setStreamType('mock');\r\n        setIsActive(true);\r\n        // dispatch(JOIN_VIDEO()); // Descomente se estiver definida\r\n        return;\r\n      }\r\n\r\n      // Em ambiente de teste, tenta primeiro getUserMedia, se falhar usa mock\r\n      try {\r\n        console.log('Tentando acessar getUserMedia...');\r\n        const stream = await navigator.mediaDevices.getUserMedia({ \r\n          video: videoEnabled, \r\n          audio: audioEnabled \r\n        });\r\n        \r\n        streamRef.current = stream;\r\n        \r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = stream;\r\n          console.log('Stream real aplicado ao vídeo');\r\n        }\r\n        \r\n        setStreamType('real');\r\n        setIsActive(true);\r\n        // dispatch(JOIN_VIDEO()); // Descomente se estiver definida\r\n        \r\n      } catch (mediaError) {\r\n        console.warn('Erro ao acessar mídia real, usando mock:', mediaError);\r\n        \r\n        // Se falhar, usa stream mock para testes\r\n        const mockStream = createMockStream();\r\n        streamRef.current = mockStream;\r\n        \r\n        if (userVideo.current) {\r\n          userVideo.current.srcObject = mockStream;\r\n          console.log('Stream mock aplicado após falha da mídia real');\r\n        }\r\n        \r\n        setStreamType('mock');\r\n        setIsActive(true);\r\n        // dispatch(JOIN_VIDEO()); // Descomente se estiver definida\r\n      }\r\n      \r\n    } catch (err) {\r\n      console.error('Erro geral:', err);\r\n      \r\n      // Mensagens de erro mais específicas\r\n      let errorMessage = 'Erro ao acessar câmera e microfone';\r\n      \r\n      if (err.name === 'NotAllowedError') {\r\n        errorMessage = 'Acesso à câmera e microfone negado. Permita o acesso nas configurações do navegador.';\r\n      } else if (err.name === 'NotFoundError') {\r\n        errorMessage = 'Câmera ou microfone não encontrados.';\r\n      } else if (err.name === 'NotSupportedError') {\r\n        errorMessage = 'Câmera ou microfone não suportados neste navegador.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n      console.log('getMediaStream: Finalizado');\r\n    }\r\n  };\r\n\r\n  // Função para parar o stream\r\n  const stopStream = () => {\r\n    if (streamRef.current) {\r\n      const tracks = streamRef.current.getTracks();\r\n      tracks.forEach(track => {\r\n        track.stop();\r\n        console.log('Track parada:', track.kind);\r\n      });\r\n    }\r\n    \r\n    if (userVideo.current) {\r\n      userVideo.current.srcObject = null;\r\n    }\r\n    \r\n    streamRef.current = null;\r\n    setIsActive(false);\r\n    setStreamType(null);\r\n  };\r\n\r\n  // Função para alternar áudio\r\n  const toggleAudio = () => {\r\n    if (streamRef.current) {\r\n      const audioTracks = streamRef.current.getAudioTracks();\r\n      audioTracks.forEach(track => {\r\n        track.enabled = !audioEnabled;\r\n      });\r\n      setAudioEnabled(!audioEnabled);\r\n    }\r\n  };\r\n\r\n  // Função para alternar vídeo\r\n  const toggleVideo = () => {\r\n    if (streamRef.current) {\r\n      const videoTracks = streamRef.current.getVideoTracks();\r\n      videoTracks.forEach(track => {\r\n        track.enabled = !videoEnabled;\r\n      });\r\n      setVideoEnabled(!videoEnabled);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('VideoContainer: Iniciando useEffect');\r\n    \r\n    const initializeMedia = async () => {\r\n      await getMediaStream();\r\n    };\r\n    \r\n    initializeMedia();\r\n    \r\n    // Cleanup function para parar o stream quando o componente for desmontado\r\n    return () => {\r\n      console.log('VideoContainer: Cleanup executado');\r\n      const stream = streamRef.current;\r\n      if (stream) {\r\n        const tracks = stream.getTracks();\r\n        tracks.forEach(track => {\r\n          track.stop();\r\n          console.log('Track parada no cleanup:', track.kind);\r\n        });\r\n      }\r\n    };\r\n  }, []); // getMediaStream não precisa estar na dependência pois não muda\r\n\r\n  // Função para tentar novamente\r\n  const handleRetry = () => {\r\n    getMediaStream();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Container>\r\n        <div style={{ color: 'white' }}>Carregando acesso à câmera e microfone...</div>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <ErrorMessage>\r\n          <h3>Erro de Mídia</h3>\r\n          <p>{error}</p>\r\n          <Button onClick={handleRetry}>Tentar Novamente</Button>\r\n        </ErrorMessage>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {streamType && (\r\n        <StatusIndicator className={streamType === 'real' ? 'success' : 'warning'}>\r\n          {streamType === 'real' ? '🟢 Mídia Real Ativa' : '🟡 Modo Teste/Mock'}\r\n        </StatusIndicator>\r\n      )}\r\n      \r\n      <StyledVideo \r\n        muted={streamType === 'real'} // Só mutado se for stream real para evitar feedback\r\n        ref={userVideo} \r\n        autoPlay \r\n        playsInline \r\n      />\r\n      \r\n      <Controls>\r\n        <Button \r\n          onClick={toggleAudio}\r\n          style={{ background: audioEnabled ? '#28a745' : '#dc3545' }}\r\n        >\r\n          {audioEnabled ? '🔊 Áudio On' : '🔇 Áudio Off'}\r\n        </Button>\r\n        \r\n        <Button \r\n          onClick={toggleVideo}\r\n          style={{ background: videoEnabled ? '#28a745' : '#dc3545' }}\r\n        >\r\n          {videoEnabled ? '📹 Vídeo On' : '📷 Vídeo Off'}\r\n        </Button>\r\n        \r\n        <Button className=\"danger\" onClick={stopStream}>\r\n          ⏹️ Parar\r\n        </Button>\r\n      </Controls>\r\n      \r\n      {peers.map((peer, index) => (\r\n        <Video key={index} peer={peer} />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default VideoContainer;"]},"metadata":{},"sourceType":"module"}