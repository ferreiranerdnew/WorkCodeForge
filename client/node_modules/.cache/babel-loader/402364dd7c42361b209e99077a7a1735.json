{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\helpers\\\\getProjectTeams.js\";\nimport User from \"../components/users/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getProjectTeams = (state, taskTeam = []) => {\n  const team = state.projectTeams.filter(team => {\n    return team.projectId === state.current_project;\n  });\n  const projectUsersList = [];\n\n  for (const member of team) {\n    for (const user of state.users) {\n      if (user.id === member.userId) {\n        projectUsersList.push(user);\n      }\n    }\n  }\n\n  const usersListArray = projectUsersList.map(user => {\n    const {\n      id,\n      name,\n      avatar\n    } = user;\n    const selectedUser = taskTeam.filter(taskUser => taskUser.props.id === id);\n    const selected = selectedUser.length > 0;\n    return /*#__PURE__*/_jsxDEV(User, {\n      id: id,\n      avatar: avatar,\n      name: name,\n      selected: selected\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  });\n  return usersListArray;\n};\n\nexport default getProjectTeams;","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/helpers/getProjectTeams.js"],"names":["User","getProjectTeams","state","taskTeam","team","projectTeams","filter","projectId","current_project","projectUsersList","member","user","users","id","userId","push","usersListArray","map","name","avatar","selectedUser","taskUser","props","selected","length"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,0BAAjB;;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAQ,GAAG,EAAnB,KAA0B;AAChD,QAAMC,IAAI,GAAGF,KAAK,CAACG,YAAN,CAAmBC,MAAnB,CAA2BF,IAAD,IAAU;AAC/C,WAAOA,IAAI,CAACG,SAAL,KAAmBL,KAAK,CAACM,eAAhC;AACD,GAFY,CAAb;AAIA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,OAAK,MAAMC,MAAX,IAAqBN,IAArB,EAA2B;AACzB,SAAK,MAAMO,IAAX,IAAmBT,KAAK,CAACU,KAAzB,EAAgC;AAC9B,UAAID,IAAI,CAACE,EAAL,KAAYH,MAAM,CAACI,MAAvB,EAA+B;AAC7BL,QAAAA,gBAAgB,CAACM,IAAjB,CAAsBJ,IAAtB;AACD;AACF;AACF;;AAED,QAAMK,cAAc,GAAGP,gBAAgB,CAACQ,GAAjB,CAAsBN,IAAD,IAAU;AACpD,UAAM;AAAEE,MAAAA,EAAF;AAAMK,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAuBR,IAA7B;AACA,UAAMS,YAAY,GAAGjB,QAAQ,CAACG,MAAT,CAClBe,QAAD,IAAcA,QAAQ,CAACC,KAAT,CAAeT,EAAf,KAAsBA,EADjB,CAArB;AAGA,UAAMU,QAAQ,GAAGH,YAAY,CAACI,MAAb,GAAsB,CAAvC;AAEA,wBACE,QAAC,IAAD;AAAe,MAAA,EAAE,EAAEX,EAAnB;AAAuB,MAAA,MAAM,EAAEM,MAA/B;AAAuC,MAAA,IAAI,EAAED,IAA7C;AAAmD,MAAA,QAAQ,EAAEK;AAA7D,OAAWV,EAAX;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAVsB,CAAvB;AAYA,SAAOG,cAAP;AACD,CA5BD;;AA8BA,eAAef,eAAf","sourcesContent":["import User from \"../components/users/User\";\r\n\r\nconst getProjectTeams = (state, taskTeam = []) => {\r\n  const team = state.projectTeams.filter((team) => {\r\n    return team.projectId === state.current_project;\r\n  });\r\n\r\n  const projectUsersList = [];\r\n\r\n  for (const member of team) {\r\n    for (const user of state.users) {\r\n      if (user.id === member.userId) {\r\n        projectUsersList.push(user);\r\n      }\r\n    }\r\n  }\r\n\r\n  const usersListArray = projectUsersList.map((user) => {\r\n    const { id, name, avatar } = user;\r\n    const selectedUser = taskTeam.filter(\r\n      (taskUser) => taskUser.props.id === id\r\n    );\r\n    const selected = selectedUser.length > 0;\r\n\r\n    return (\r\n      <User key={id} id={id} avatar={avatar} name={name} selected={selected} />\r\n    );\r\n  });\r\n\r\n  return usersListArray;\r\n};\r\n\r\nexport default getProjectTeams;\r\n"]},"metadata":{},"sourceType":"module"}