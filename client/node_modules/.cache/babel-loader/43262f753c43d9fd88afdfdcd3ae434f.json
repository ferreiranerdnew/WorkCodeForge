{"ast":null,"code":"var _jsxFileName = \"E:\\\\000gitRepositorios\\\\WorkCodeForge\\\\client\\\\src\\\\components\\\\tasks\\\\EditTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../button/Button\";\nimport DatePicker from \"react-date-picker\";\nimport { BiEdit } from \"react-icons/bi\";\nimport getProjectTeams from \"../../helpers/getProjectTeams\";\nimport getTaskTeams from \"../../helpers/getTaskTeams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditTaskForm(props) {\n  _s();\n\n  const [name, setName] = useState(props.name || \"\");\n  const [description, setDescription] = useState(props.description || \"\");\n  const [startDate, onStart] = useState(new Date(props.startDate) || new Date());\n  const [endDate, onEnd] = useState(new Date(props.endDate) || new Date());\n  const [showUsers, setShowUsers] = useState(false);\n  const [error, setError] = useState(\"\");\n  const {\n    id,\n    state,\n    onSave\n  } = props;\n  const taskUsersListArray = getTaskTeams(state, id);\n\n  const validate = () => {\n    if (!!!name) {\n      setError(\"Please enter a name\");\n      return;\n    }\n\n    if (!!!description) {\n      setError(\"Please enter a description\");\n      return;\n    }\n\n    const userIDs = getProjectTeams(state, taskUsersListArray).map(user => user.props.id);\n    const selectedUsers = document.getElementById(makeId(id)).getElementsByClassName(\"user-list--selected\");\n    const selectedUsersIDs = [];\n\n    for (const user of selectedUsers) {\n      selectedUsersIDs.push(parseInt(user.id));\n    }\n\n    if (selectedUsersIDs.length === 0) {\n      setError(\"Please select at least one assignee\");\n      return;\n    }\n\n    const task = {\n      name,\n      description,\n      startDate,\n      endDate,\n      users: userIDs,\n      selectedUsers: selectedUsersIDs\n    };\n    setShowUsers(false);\n    setError(\"\");\n    onSave(task, id);\n    document.getElementById(makeId(id)).close();\n  };\n\n  const cancel = () => {\n    setShowUsers(false);\n    setError(\"\");\n    document.getElementById(makeId(id)).close();\n  };\n\n  const makeId = id => {\n    return `dialog-dark-rounded-edit-${id}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BiEdit, {\n        className: \"edit-icon\",\n        onClick: () => {\n          setShowUsers(true);\n          document.getElementById(makeId(id)).showModal();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: \"nes-dialog is-dark is-rounded\",\n      id: makeId(id),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        autoComplete: \"off\",\n        onSubmit: e => e.preventDefault(),\n        method: \"dialog\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            type: \"text\",\n            onKeyDown: ev => {\n              if (ev.code === \"Space\" || ev.code === \"ArrowUp\" || ev.code === \"ArrowDown\" || ev.code === \"ArrowLeft\" || ev.code === \"ArrowRight\") {\n                ev.stopPropagation();\n              }\n            },\n            onChange: e => {\n              setName(e.target.value);\n              setError(\"\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            type: \"text\",\n            onChange: e => {\n              setDescription(e.target.value);\n              setError(\"\");\n            },\n            onKeyDown: ev => {\n              if (ev.code === \"Space\" || ev.code === \"ArrowUp\" || ev.code === \"ArrowDown\" || ev.code === \"ArrowLeft\" || ev.code === \"ArrowRight\") {\n                ev.stopPropagation();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-date-container\",\n          children: [showUsers && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Assignees:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"rpgui users-container\",\n              onClick: () => setError(\"\"),\n              children: getProjectTeams(state, taskUsersListArray)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: onStart,\n                value: startDate,\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End date:\", /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: onEnd,\n                value: endDate,\n                minDate: new Date(startDate),\n                className: \"date-size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cancel-submit\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancel,\n            title: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: validate,\n            title: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditTaskForm, \"KSaGtQHYOKO7djHkP9hLZ0cQS6o=\");\n\n_c = EditTaskForm;\nexport default EditTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTaskForm\");","map":{"version":3,"sources":["E:/000gitRepositorios/WorkCodeForge/client/src/components/tasks/EditTaskForm.js"],"names":["React","useState","Button","DatePicker","BiEdit","getProjectTeams","getTaskTeams","EditTaskForm","props","name","setName","description","setDescription","startDate","onStart","Date","endDate","onEnd","showUsers","setShowUsers","error","setError","id","state","onSave","taskUsersListArray","validate","userIDs","map","user","selectedUsers","document","getElementById","makeId","getElementsByClassName","selectedUsersIDs","push","parseInt","length","task","users","close","cancel","showModal","e","preventDefault","ev","code","stopPropagation","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"../button/Button\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport getProjectTeams from \"../../helpers/getProjectTeams\";\r\nimport getTaskTeams from \"../../helpers/getTaskTeams\";\r\n\r\nfunction EditTaskForm(props) {\r\n  const [name, setName] = useState(props.name || \"\");\r\n  const [description, setDescription] = useState(props.description || \"\");\r\n  const [startDate, onStart] = useState(\r\n    new Date(props.startDate) || new Date()\r\n  );\r\n  const [endDate, onEnd] = useState(new Date(props.endDate) || new Date());\r\n  const [showUsers, setShowUsers] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { id, state, onSave } = props;\r\n\r\n  const taskUsersListArray = getTaskTeams(state, id);\r\n\r\n  const validate = () => {\r\n    if (!!!name) {\r\n      setError(\"Please enter a name\");\r\n      return;\r\n    }\r\n    if (!!!description) {\r\n      setError(\"Please enter a description\");\r\n      return;\r\n    }\r\n\r\n    const userIDs = getProjectTeams(state, taskUsersListArray).map(\r\n      (user) => user.props.id\r\n    );\r\n\r\n    const selectedUsers = document\r\n      .getElementById(makeId(id))\r\n      .getElementsByClassName(\"user-list--selected\");\r\n\r\n    const selectedUsersIDs = [];\r\n\r\n    for (const user of selectedUsers) {\r\n      selectedUsersIDs.push(parseInt(user.id));\r\n    }\r\n\r\n    if (selectedUsersIDs.length === 0) {\r\n      setError(\"Please select at least one assignee\");\r\n      return;\r\n    }\r\n\r\n    const task = {\r\n      name,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n      users: userIDs,\r\n      selectedUsers: selectedUsersIDs,\r\n    };\r\n\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    onSave(task, id);\r\n    document.getElementById(makeId(id)).close();\r\n  };\r\n\r\n  const cancel = () => {\r\n    setShowUsers(false);\r\n    setError(\"\");\r\n    document.getElementById(makeId(id)).close();\r\n  };\r\n\r\n  const makeId = (id) => {\r\n    return `dialog-dark-rounded-edit-${id}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <BiEdit\r\n          className=\"edit-icon\"\r\n          onClick={() => {\r\n            setShowUsers(true);\r\n            document.getElementById(makeId(id)).showModal();\r\n          }}\r\n        ></BiEdit>\r\n      </div>\r\n      <dialog className=\"nes-dialog is-dark is-rounded\" id={makeId(id)}>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={(e) => e.preventDefault()}\r\n          method=\"dialog\"\r\n        >\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <label>\r\n            Task name:\r\n            <input\r\n              value={name}\r\n              type=\"text\"\r\n              onKeyDown={(ev) => {\r\n                if (\r\n                  ev.code === \"Space\" ||\r\n                  ev.code === \"ArrowUp\" ||\r\n                  ev.code === \"ArrowDown\" ||\r\n                  ev.code === \"ArrowLeft\" ||\r\n                  ev.code === \"ArrowRight\"\r\n                ) {\r\n                  ev.stopPropagation();\r\n                }\r\n              }}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n                setError(\"\");\r\n              }}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Description:\r\n            <textarea\r\n              value={description}\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n                setError(\"\");\r\n              }}\r\n              onKeyDown={(ev) => {\r\n                if (\r\n                  ev.code === \"Space\" ||\r\n                  ev.code === \"ArrowUp\" ||\r\n                  ev.code === \"ArrowDown\" ||\r\n                  ev.code === \"ArrowLeft\" ||\r\n                  ev.code === \"ArrowRight\"\r\n                ) {\r\n                  ev.stopPropagation();\r\n                }\r\n              }}\r\n            />\r\n          </label>\r\n\r\n          <div className=\"team-date-container\">\r\n            {showUsers && (\r\n              <label>\r\n                Assignees:\r\n                <ul\r\n                  className=\"rpgui users-container\"\r\n                  onClick={() => setError(\"\")}\r\n                >\r\n                  {getProjectTeams(state, taskUsersListArray)}\r\n                </ul>\r\n              </label>\r\n            )}\r\n\r\n            <div className=\"date\">\r\n              <label>\r\n                Start date:\r\n                <DatePicker\r\n                  onChange={onStart}\r\n                  value={startDate}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                End date:\r\n                <DatePicker\r\n                  onChange={onEnd}\r\n                  value={endDate}\r\n                  minDate={new Date(startDate)}\r\n                  className=\"date-size\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"cancel-submit\">\r\n            <Button onClick={cancel} title={\"cancel\"}></Button>\r\n            <Button onClick={validate} title={\"submit\"}></Button>\r\n          </div>\r\n        </form>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditTaskForm;\r\n"]},"metadata":{},"sourceType":"module"}